/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var type_pb = require('./type_pb.js');
goog.exportSymbol('proto.forge_abi.AccountMigrateTx', null, global);
goog.exportSymbol('proto.forge_abi.ActivateAssetTx', null, global);
goog.exportSymbol('proto.forge_abi.ConsensusUpgradeTx', null, global);
goog.exportSymbol('proto.forge_abi.CreateAssetTx', null, global);
goog.exportSymbol('proto.forge_abi.DeclareFileTx', null, global);
goog.exportSymbol('proto.forge_abi.DeclareTx', null, global);
goog.exportSymbol('proto.forge_abi.ExchangeInfo', null, global);
goog.exportSymbol('proto.forge_abi.ExchangeTx', null, global);
goog.exportSymbol('proto.forge_abi.StakeForNode', null, global);
goog.exportSymbol('proto.forge_abi.StakeTx', null, global);
goog.exportSymbol('proto.forge_abi.SysUpgradeTx', null, global);
goog.exportSymbol('proto.forge_abi.TransferTx', null, global);
goog.exportSymbol('proto.forge_abi.UpdateAssetTx', null, global);
goog.exportSymbol('proto.forge_abi.stakeForAsset', null, global);
goog.exportSymbol('proto.forge_abi.stakeForChain', null, global);
goog.exportSymbol('proto.forge_abi.stakeForUser', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AccountMigrateTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.AccountMigrateTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.AccountMigrateTx.displayName = 'proto.forge_abi.AccountMigrateTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AccountMigrateTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AccountMigrateTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AccountMigrateTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AccountMigrateTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        pk: msg.getPk(),
        type: (f = msg.getType()) && type_pb.WalletType.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AccountMigrateTx}
 */
proto.forge_abi.AccountMigrateTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AccountMigrateTx();
  return proto.forge_abi.AccountMigrateTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AccountMigrateTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AccountMigrateTx}
 */
proto.forge_abi.AccountMigrateTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setPk(value);
        break;
      case 2:
        var value = new type_pb.WalletType();
        reader.readMessage(value, type_pb.WalletType.deserializeBinaryFromReader);
        msg.setType(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AccountMigrateTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AccountMigrateTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AccountMigrateTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AccountMigrateTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPk_asU8();
  if (f.length > 0) {
    writer.writeBytes(1, f);
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.WalletType.serializeBinaryToWriter);
  }
};

/**
 * optional bytes pk = 1;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.AccountMigrateTx.prototype.getPk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * optional bytes pk = 1;
 * This is a type-conversion wrapper around `getPk()`
 * @return {string}
 */
proto.forge_abi.AccountMigrateTx.prototype.getPk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getPk()));
};

/**
 * optional bytes pk = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPk()`
 * @return {!Uint8Array}
 */
proto.forge_abi.AccountMigrateTx.prototype.getPk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getPk()));
};

/** @param {!(string|Uint8Array)} value */
proto.forge_abi.AccountMigrateTx.prototype.setPk = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional WalletType type = 2;
 * @return {?proto.forge_abi.WalletType}
 */
proto.forge_abi.AccountMigrateTx.prototype.getType = function() {
  return /** @type{?proto.forge_abi.WalletType} */ (jspb.Message.getWrapperField(
    this,
    type_pb.WalletType,
    2
  ));
};

/** @param {?proto.forge_abi.WalletType|undefined} value */
proto.forge_abi.AccountMigrateTx.prototype.setType = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};

proto.forge_abi.AccountMigrateTx.prototype.clearType = function() {
  this.setType(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.AccountMigrateTx.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ActivateAssetTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.ActivateAssetTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.ActivateAssetTx.displayName = 'proto.forge_abi.ActivateAssetTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ActivateAssetTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ActivateAssetTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ActivateAssetTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ActivateAssetTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        to: jspb.Message.getFieldWithDefault(msg, 2, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ActivateAssetTx}
 */
proto.forge_abi.ActivateAssetTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ActivateAssetTx();
  return proto.forge_abi.ActivateAssetTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ActivateAssetTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ActivateAssetTx}
 */
proto.forge_abi.ActivateAssetTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ActivateAssetTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ActivateAssetTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ActivateAssetTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ActivateAssetTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.ActivateAssetTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.ActivateAssetTx.prototype.setAddress = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional string to = 2;
 * @return {string}
 */
proto.forge_abi.ActivateAssetTx.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.forge_abi.ActivateAssetTx.prototype.setTo = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.ActivateAssetTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    15
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.ActivateAssetTx.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};

proto.forge_abi.ActivateAssetTx.prototype.clearData = function() {
  this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.ActivateAssetTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ConsensusUpgradeTx = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.forge_abi.ConsensusUpgradeTx.repeatedFields_,
    null
  );
};
goog.inherits(proto.forge_abi.ConsensusUpgradeTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.ConsensusUpgradeTx.displayName = 'proto.forge_abi.ConsensusUpgradeTx';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.ConsensusUpgradeTx.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ConsensusUpgradeTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ConsensusUpgradeTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ConsensusUpgradeTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ConsensusUpgradeTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        validatorsList: jspb.Message.toObjectList(
          msg.getValidatorsList(),
          type_pb.Validator.toObject,
          includeInstance
        ),
        maxBytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
        maxGas: jspb.Message.getFieldWithDefault(msg, 3, 0),
        maxValidators: jspb.Message.getFieldWithDefault(msg, 4, 0),
        maxCandidates: jspb.Message.getFieldWithDefault(msg, 5, 0),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ConsensusUpgradeTx}
 */
proto.forge_abi.ConsensusUpgradeTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ConsensusUpgradeTx();
  return proto.forge_abi.ConsensusUpgradeTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ConsensusUpgradeTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ConsensusUpgradeTx}
 */
proto.forge_abi.ConsensusUpgradeTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new type_pb.Validator();
        reader.readMessage(value, type_pb.Validator.deserializeBinaryFromReader);
        msg.addValidators(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setMaxBytes(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readSint64());
        msg.setMaxGas(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setMaxValidators(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setMaxCandidates(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ConsensusUpgradeTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ConsensusUpgradeTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ConsensusUpgradeTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ConsensusUpgradeTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(1, f, type_pb.Validator.serializeBinaryToWriter);
  }
  f = message.getMaxBytes();
  if (f !== 0) {
    writer.writeUint64(2, f);
  }
  f = message.getMaxGas();
  if (f !== 0) {
    writer.writeSint64(3, f);
  }
  f = message.getMaxValidators();
  if (f !== 0) {
    writer.writeUint32(4, f);
  }
  f = message.getMaxCandidates();
  if (f !== 0) {
    writer.writeUint32(5, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * repeated Validator validators = 1;
 * @return {!Array.<!proto.forge_abi.Validator>}
 */
proto.forge_abi.ConsensusUpgradeTx.prototype.getValidatorsList = function() {
  return /** @type{!Array.<!proto.forge_abi.Validator>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    type_pb.Validator,
    1
  ));
};

/** @param {!Array.<!proto.forge_abi.Validator>} value */
proto.forge_abi.ConsensusUpgradeTx.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.forge_abi.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.Validator}
 */
proto.forge_abi.ConsensusUpgradeTx.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.forge_abi.Validator,
    opt_index
  );
};

proto.forge_abi.ConsensusUpgradeTx.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};

/**
 * optional uint64 max_bytes = 2;
 * @return {number}
 */
proto.forge_abi.ConsensusUpgradeTx.prototype.getMaxBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/** @param {number} value */
proto.forge_abi.ConsensusUpgradeTx.prototype.setMaxBytes = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * optional sint64 max_gas = 3;
 * @return {number}
 */
proto.forge_abi.ConsensusUpgradeTx.prototype.getMaxGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/** @param {number} value */
proto.forge_abi.ConsensusUpgradeTx.prototype.setMaxGas = function(value) {
  jspb.Message.setField(this, 3, value);
};

/**
 * optional uint32 max_validators = 4;
 * @return {number}
 */
proto.forge_abi.ConsensusUpgradeTx.prototype.getMaxValidators = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/** @param {number} value */
proto.forge_abi.ConsensusUpgradeTx.prototype.setMaxValidators = function(value) {
  jspb.Message.setField(this, 4, value);
};

/**
 * optional uint32 max_candidates = 5;
 * @return {number}
 */
proto.forge_abi.ConsensusUpgradeTx.prototype.getMaxCandidates = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/** @param {number} value */
proto.forge_abi.ConsensusUpgradeTx.prototype.setMaxCandidates = function(value) {
  jspb.Message.setField(this, 5, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.ConsensusUpgradeTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    15
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.ConsensusUpgradeTx.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};

proto.forge_abi.ConsensusUpgradeTx.prototype.clearData = function() {
  this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.ConsensusUpgradeTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.CreateAssetTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.CreateAssetTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.CreateAssetTx.displayName = 'proto.forge_abi.CreateAssetTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.CreateAssetTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.CreateAssetTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.CreateAssetTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.CreateAssetTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        moniker: jspb.Message.getFieldWithDefault(msg, 1, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
        readonly: jspb.Message.getFieldWithDefault(msg, 3, false),
        expiredAt:
          (f = msg.getExpiredAt()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.CreateAssetTx}
 */
proto.forge_abi.CreateAssetTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.CreateAssetTx();
  return proto.forge_abi.CreateAssetTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.CreateAssetTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.CreateAssetTx}
 */
proto.forge_abi.CreateAssetTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 2:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setReadonly(value);
        break;
      case 4:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        );
        msg.setExpiredAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.CreateAssetTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.CreateAssetTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.CreateAssetTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.CreateAssetTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(2, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
  f = message.getReadonly();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getExpiredAt();
  if (f != null) {
    writer.writeMessage(4, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);
  }
};

/**
 * optional string moniker = 1;
 * @return {string}
 */
proto.forge_abi.CreateAssetTx.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.CreateAssetTx.prototype.setMoniker = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional google.protobuf.Any data = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.CreateAssetTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    2
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.CreateAssetTx.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};

proto.forge_abi.CreateAssetTx.prototype.clearData = function() {
  this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.CreateAssetTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional bool readonly = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.forge_abi.CreateAssetTx.prototype.getReadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};

/** @param {boolean} value */
proto.forge_abi.CreateAssetTx.prototype.setReadonly = function(value) {
  jspb.Message.setField(this, 3, value);
};

/**
 * optional google.protobuf.Timestamp expired_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.forge_abi.CreateAssetTx.prototype.getExpiredAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    4
  ));
};

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.forge_abi.CreateAssetTx.prototype.setExpiredAt = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};

proto.forge_abi.CreateAssetTx.prototype.clearExpiredAt = function() {
  this.setExpiredAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.CreateAssetTx.prototype.hasExpiredAt = function() {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DeclareTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.DeclareTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.DeclareTx.displayName = 'proto.forge_abi.DeclareTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DeclareTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DeclareTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DeclareTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DeclareTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        moniker: jspb.Message.getFieldWithDefault(msg, 1, ''),
        pk: msg.getPk(),
        type: (f = msg.getType()) && type_pb.WalletType.toObject(includeInstance, f),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DeclareTx}
 */
proto.forge_abi.DeclareTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DeclareTx();
  return proto.forge_abi.DeclareTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DeclareTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DeclareTx}
 */
proto.forge_abi.DeclareTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setPk(value);
        break;
      case 3:
        var value = new type_pb.WalletType();
        reader.readMessage(value, type_pb.WalletType.deserializeBinaryFromReader);
        msg.setType(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DeclareTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DeclareTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DeclareTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DeclareTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getPk_asU8();
  if (f.length > 0) {
    writer.writeBytes(2, f);
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(3, f, type_pb.WalletType.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string moniker = 1;
 * @return {string}
 */
proto.forge_abi.DeclareTx.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.DeclareTx.prototype.setMoniker = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional bytes pk = 2;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.DeclareTx.prototype.getPk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * optional bytes pk = 2;
 * This is a type-conversion wrapper around `getPk()`
 * @return {string}
 */
proto.forge_abi.DeclareTx.prototype.getPk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getPk()));
};

/**
 * optional bytes pk = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPk()`
 * @return {!Uint8Array}
 */
proto.forge_abi.DeclareTx.prototype.getPk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getPk()));
};

/** @param {!(string|Uint8Array)} value */
proto.forge_abi.DeclareTx.prototype.setPk = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * optional WalletType type = 3;
 * @return {?proto.forge_abi.WalletType}
 */
proto.forge_abi.DeclareTx.prototype.getType = function() {
  return /** @type{?proto.forge_abi.WalletType} */ (jspb.Message.getWrapperField(
    this,
    type_pb.WalletType,
    3
  ));
};

/** @param {?proto.forge_abi.WalletType|undefined} value */
proto.forge_abi.DeclareTx.prototype.setType = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};

proto.forge_abi.DeclareTx.prototype.clearType = function() {
  this.setType(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.DeclareTx.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.DeclareTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    15
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.DeclareTx.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};

proto.forge_abi.DeclareTx.prototype.clearData = function() {
  this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.DeclareTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DeclareFileTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.DeclareFileTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.DeclareFileTx.displayName = 'proto.forge_abi.DeclareFileTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DeclareFileTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DeclareFileTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DeclareFileTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DeclareFileTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        hash: jspb.Message.getFieldWithDefault(msg, 1, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DeclareFileTx}
 */
proto.forge_abi.DeclareFileTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DeclareFileTx();
  return proto.forge_abi.DeclareFileTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DeclareFileTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DeclareFileTx}
 */
proto.forge_abi.DeclareFileTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setHash(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DeclareFileTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DeclareFileTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DeclareFileTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DeclareFileTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string hash = 1;
 * @return {string}
 */
proto.forge_abi.DeclareFileTx.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.DeclareFileTx.prototype.setHash = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ExchangeInfo = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.forge_abi.ExchangeInfo.repeatedFields_,
    null
  );
};
goog.inherits(proto.forge_abi.ExchangeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.ExchangeInfo.displayName = 'proto.forge_abi.ExchangeInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.ExchangeInfo.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ExchangeInfo.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ExchangeInfo.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ExchangeInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ExchangeInfo.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        value: (f = msg.getValue()) && type_pb.BigUint.toObject(includeInstance, f),
        assetsList: jspb.Message.getRepeatedField(msg, 2),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ExchangeInfo}
 */
proto.forge_abi.ExchangeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ExchangeInfo();
  return proto.forge_abi.ExchangeInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ExchangeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ExchangeInfo}
 */
proto.forge_abi.ExchangeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setValue(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.addAssets(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ExchangeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ExchangeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ExchangeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ExchangeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(1, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(2, f);
  }
};

/**
 * optional BigUint value = 1;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.ExchangeInfo.prototype.getValue = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(
    this,
    type_pb.BigUint,
    1
  ));
};

/** @param {?proto.forge_abi.BigUint|undefined} value */
proto.forge_abi.ExchangeInfo.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};

proto.forge_abi.ExchangeInfo.prototype.clearValue = function() {
  this.setValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.ExchangeInfo.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * repeated string assets = 2;
 * @return {!Array.<string>}
 */
proto.forge_abi.ExchangeInfo.prototype.getAssetsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};

/** @param {!Array.<string>} value */
proto.forge_abi.ExchangeInfo.prototype.setAssetsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.forge_abi.ExchangeInfo.prototype.addAssets = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

proto.forge_abi.ExchangeInfo.prototype.clearAssetsList = function() {
  this.setAssetsList([]);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ExchangeTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.ExchangeTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.ExchangeTx.displayName = 'proto.forge_abi.ExchangeTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ExchangeTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ExchangeTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ExchangeTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ExchangeTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        to: jspb.Message.getFieldWithDefault(msg, 1, ''),
        sender: (f = msg.getSender()) && proto.forge_abi.ExchangeInfo.toObject(includeInstance, f),
        receiver:
          (f = msg.getReceiver()) && proto.forge_abi.ExchangeInfo.toObject(includeInstance, f),
        expiredAt:
          (f = msg.getExpiredAt()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ExchangeTx}
 */
proto.forge_abi.ExchangeTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ExchangeTx();
  return proto.forge_abi.ExchangeTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ExchangeTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ExchangeTx}
 */
proto.forge_abi.ExchangeTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 2:
        var value = new proto.forge_abi.ExchangeInfo();
        reader.readMessage(value, proto.forge_abi.ExchangeInfo.deserializeBinaryFromReader);
        msg.setSender(value);
        break;
      case 3:
        var value = new proto.forge_abi.ExchangeInfo();
        reader.readMessage(value, proto.forge_abi.ExchangeInfo.deserializeBinaryFromReader);
        msg.setReceiver(value);
        break;
      case 4:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        );
        msg.setExpiredAt(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ExchangeTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ExchangeTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ExchangeTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ExchangeTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSender();
  if (f != null) {
    writer.writeMessage(2, f, proto.forge_abi.ExchangeInfo.serializeBinaryToWriter);
  }
  f = message.getReceiver();
  if (f != null) {
    writer.writeMessage(3, f, proto.forge_abi.ExchangeInfo.serializeBinaryToWriter);
  }
  f = message.getExpiredAt();
  if (f != null) {
    writer.writeMessage(4, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string to = 1;
 * @return {string}
 */
proto.forge_abi.ExchangeTx.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.ExchangeTx.prototype.setTo = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional ExchangeInfo sender = 2;
 * @return {?proto.forge_abi.ExchangeInfo}
 */
proto.forge_abi.ExchangeTx.prototype.getSender = function() {
  return /** @type{?proto.forge_abi.ExchangeInfo} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.ExchangeInfo,
    2
  ));
};

/** @param {?proto.forge_abi.ExchangeInfo|undefined} value */
proto.forge_abi.ExchangeTx.prototype.setSender = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};

proto.forge_abi.ExchangeTx.prototype.clearSender = function() {
  this.setSender(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.ExchangeTx.prototype.hasSender = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional ExchangeInfo receiver = 3;
 * @return {?proto.forge_abi.ExchangeInfo}
 */
proto.forge_abi.ExchangeTx.prototype.getReceiver = function() {
  return /** @type{?proto.forge_abi.ExchangeInfo} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.ExchangeInfo,
    3
  ));
};

/** @param {?proto.forge_abi.ExchangeInfo|undefined} value */
proto.forge_abi.ExchangeTx.prototype.setReceiver = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};

proto.forge_abi.ExchangeTx.prototype.clearReceiver = function() {
  this.setReceiver(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.ExchangeTx.prototype.hasReceiver = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional google.protobuf.Timestamp expired_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.forge_abi.ExchangeTx.prototype.getExpiredAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    4
  ));
};

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.forge_abi.ExchangeTx.prototype.setExpiredAt = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};

proto.forge_abi.ExchangeTx.prototype.clearExpiredAt = function() {
  this.setExpiredAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.ExchangeTx.prototype.hasExpiredAt = function() {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.ExchangeTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    15
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.ExchangeTx.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};

proto.forge_abi.ExchangeTx.prototype.clearData = function() {
  this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.ExchangeTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.stakeForAsset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.stakeForAsset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.stakeForAsset.displayName = 'proto.forge_abi.stakeForAsset';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.stakeForAsset.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.stakeForAsset.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.stakeForAsset} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.stakeForAsset.toObject = function(includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.stakeForAsset}
 */
proto.forge_abi.stakeForAsset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.stakeForAsset();
  return proto.forge_abi.stakeForAsset.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.stakeForAsset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.stakeForAsset}
 */
proto.forge_abi.stakeForAsset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.stakeForAsset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.stakeForAsset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.stakeForAsset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.stakeForAsset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.stakeForChain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.stakeForChain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.stakeForChain.displayName = 'proto.forge_abi.stakeForChain';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.stakeForChain.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.stakeForChain.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.stakeForChain} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.stakeForChain.toObject = function(includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.stakeForChain}
 */
proto.forge_abi.stakeForChain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.stakeForChain();
  return proto.forge_abi.stakeForChain.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.stakeForChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.stakeForChain}
 */
proto.forge_abi.stakeForChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.stakeForChain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.stakeForChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.stakeForChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.stakeForChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.StakeForNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.StakeForNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.StakeForNode.displayName = 'proto.forge_abi.StakeForNode';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.StakeForNode.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.StakeForNode.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.StakeForNode} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.StakeForNode.toObject = function(includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.StakeForNode}
 */
proto.forge_abi.StakeForNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.StakeForNode();
  return proto.forge_abi.StakeForNode.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.StakeForNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.StakeForNode}
 */
proto.forge_abi.StakeForNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.StakeForNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.StakeForNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.StakeForNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.StakeForNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.stakeForUser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.stakeForUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.stakeForUser.displayName = 'proto.forge_abi.stakeForUser';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.stakeForUser.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.stakeForUser.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.stakeForUser} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.stakeForUser.toObject = function(includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.stakeForUser}
 */
proto.forge_abi.stakeForUser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.stakeForUser();
  return proto.forge_abi.stakeForUser.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.stakeForUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.stakeForUser}
 */
proto.forge_abi.stakeForUser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.stakeForUser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.stakeForUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.stakeForUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.stakeForUser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.StakeTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.StakeTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.StakeTx.displayName = 'proto.forge_abi.StakeTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.StakeTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.StakeTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.StakeTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.StakeTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        to: jspb.Message.getFieldWithDefault(msg, 1, ''),
        value: (f = msg.getValue()) && type_pb.BigSint.toObject(includeInstance, f),
        message: jspb.Message.getFieldWithDefault(msg, 3, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.StakeTx}
 */
proto.forge_abi.StakeTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.StakeTx();
  return proto.forge_abi.StakeTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.StakeTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.StakeTx}
 */
proto.forge_abi.StakeTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 2:
        var value = new type_pb.BigSint();
        reader.readMessage(value, type_pb.BigSint.deserializeBinaryFromReader);
        msg.setValue(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setMessage(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.StakeTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.StakeTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.StakeTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.StakeTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.BigSint.serializeBinaryToWriter);
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string to = 1;
 * @return {string}
 */
proto.forge_abi.StakeTx.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.StakeTx.prototype.setTo = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional BigSint value = 2;
 * @return {?proto.forge_abi.BigSint}
 */
proto.forge_abi.StakeTx.prototype.getValue = function() {
  return /** @type{?proto.forge_abi.BigSint} */ (jspb.Message.getWrapperField(
    this,
    type_pb.BigSint,
    2
  ));
};

/** @param {?proto.forge_abi.BigSint|undefined} value */
proto.forge_abi.StakeTx.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};

proto.forge_abi.StakeTx.prototype.clearValue = function() {
  this.setValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.StakeTx.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional string message = 3;
 * @return {string}
 */
proto.forge_abi.StakeTx.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/** @param {string} value */
proto.forge_abi.StakeTx.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 3, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.StakeTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    15
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.StakeTx.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};

proto.forge_abi.StakeTx.prototype.clearData = function() {
  this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.StakeTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.SysUpgradeTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.SysUpgradeTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.SysUpgradeTx.displayName = 'proto.forge_abi.SysUpgradeTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.SysUpgradeTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.SysUpgradeTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.SysUpgradeTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.SysUpgradeTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        task: (f = msg.getTask()) && type_pb.UpgradeTask.toObject(includeInstance, f),
        gracePeriod: jspb.Message.getFieldWithDefault(msg, 2, 0),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.SysUpgradeTx}
 */
proto.forge_abi.SysUpgradeTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.SysUpgradeTx();
  return proto.forge_abi.SysUpgradeTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.SysUpgradeTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.SysUpgradeTx}
 */
proto.forge_abi.SysUpgradeTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new type_pb.UpgradeTask();
        reader.readMessage(value, type_pb.UpgradeTask.deserializeBinaryFromReader);
        msg.setTask(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setGracePeriod(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.SysUpgradeTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.SysUpgradeTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.SysUpgradeTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.SysUpgradeTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTask();
  if (f != null) {
    writer.writeMessage(1, f, type_pb.UpgradeTask.serializeBinaryToWriter);
  }
  f = message.getGracePeriod();
  if (f !== 0) {
    writer.writeUint64(2, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional UpgradeTask task = 1;
 * @return {?proto.forge_abi.UpgradeTask}
 */
proto.forge_abi.SysUpgradeTx.prototype.getTask = function() {
  return /** @type{?proto.forge_abi.UpgradeTask} */ (jspb.Message.getWrapperField(
    this,
    type_pb.UpgradeTask,
    1
  ));
};

/** @param {?proto.forge_abi.UpgradeTask|undefined} value */
proto.forge_abi.SysUpgradeTx.prototype.setTask = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};

proto.forge_abi.SysUpgradeTx.prototype.clearTask = function() {
  this.setTask(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.SysUpgradeTx.prototype.hasTask = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional uint64 grace_period = 2;
 * @return {number}
 */
proto.forge_abi.SysUpgradeTx.prototype.getGracePeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/** @param {number} value */
proto.forge_abi.SysUpgradeTx.prototype.setGracePeriod = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.SysUpgradeTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    15
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.SysUpgradeTx.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};

proto.forge_abi.SysUpgradeTx.prototype.clearData = function() {
  this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.SysUpgradeTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.TransferTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.TransferTx.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.TransferTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.TransferTx.displayName = 'proto.forge_abi.TransferTx';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.TransferTx.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.TransferTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.TransferTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.TransferTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.TransferTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        to: jspb.Message.getFieldWithDefault(msg, 1, ''),
        value: (f = msg.getValue()) && type_pb.BigUint.toObject(includeInstance, f),
        assetsList: jspb.Message.getRepeatedField(msg, 3),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.TransferTx}
 */
proto.forge_abi.TransferTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.TransferTx();
  return proto.forge_abi.TransferTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.TransferTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.TransferTx}
 */
proto.forge_abi.TransferTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 2:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setValue(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.addAssets(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.TransferTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.TransferTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.TransferTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.TransferTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(3, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string to = 1;
 * @return {string}
 */
proto.forge_abi.TransferTx.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.TransferTx.prototype.setTo = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional BigUint value = 2;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.TransferTx.prototype.getValue = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(
    this,
    type_pb.BigUint,
    2
  ));
};

/** @param {?proto.forge_abi.BigUint|undefined} value */
proto.forge_abi.TransferTx.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};

proto.forge_abi.TransferTx.prototype.clearValue = function() {
  this.setValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.TransferTx.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * repeated string assets = 3;
 * @return {!Array.<string>}
 */
proto.forge_abi.TransferTx.prototype.getAssetsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};

/** @param {!Array.<string>} value */
proto.forge_abi.TransferTx.prototype.setAssetsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};

/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.forge_abi.TransferTx.prototype.addAssets = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};

proto.forge_abi.TransferTx.prototype.clearAssetsList = function() {
  this.setAssetsList([]);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.TransferTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    15
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.TransferTx.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};

proto.forge_abi.TransferTx.prototype.clearData = function() {
  this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.TransferTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.UpdateAssetTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.UpdateAssetTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.UpdateAssetTx.displayName = 'proto.forge_abi.UpdateAssetTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.UpdateAssetTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.UpdateAssetTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.UpdateAssetTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.UpdateAssetTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        moniker: jspb.Message.getFieldWithDefault(msg, 2, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.UpdateAssetTx}
 */
proto.forge_abi.UpdateAssetTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.UpdateAssetTx();
  return proto.forge_abi.UpdateAssetTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.UpdateAssetTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.UpdateAssetTx}
 */
proto.forge_abi.UpdateAssetTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.UpdateAssetTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.UpdateAssetTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.UpdateAssetTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.UpdateAssetTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.UpdateAssetTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.UpdateAssetTx.prototype.setAddress = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional string moniker = 2;
 * @return {string}
 */
proto.forge_abi.UpdateAssetTx.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.forge_abi.UpdateAssetTx.prototype.setMoniker = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.UpdateAssetTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    15
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.UpdateAssetTx.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};

proto.forge_abi.UpdateAssetTx.prototype.clearData = function() {
  this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.forge_abi.UpdateAssetTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

goog.object.extend(exports, proto.forge_abi);

module.exports = proto.forge_abi;
