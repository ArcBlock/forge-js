/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var type_pb = require('./type_pb.js');
goog.object.extend(proto, type_pb);
goog.exportSymbol('proto.forge_abi.AddressFilter', null, global);
goog.exportSymbol('proto.forge_abi.Direction', null, global);
goog.exportSymbol('proto.forge_abi.IndexedAccountState', null, global);
goog.exportSymbol('proto.forge_abi.IndexedAssetState', null, global);
goog.exportSymbol('proto.forge_abi.IndexedStakeState', null, global);
goog.exportSymbol('proto.forge_abi.IndexedTransaction', null, global);
goog.exportSymbol('proto.forge_abi.PageInfo', null, global);
goog.exportSymbol('proto.forge_abi.PageInput', null, global);
goog.exportSymbol('proto.forge_abi.PageOrder', null, global);
goog.exportSymbol('proto.forge_abi.TimeFilter', null, global);
goog.exportSymbol('proto.forge_abi.TypeFilter', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.PageOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.PageOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.PageOrder.displayName = 'proto.forge_abi.PageOrder';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.PageOrder.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.PageOrder.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.PageOrder} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.PageOrder.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        field: jspb.Message.getFieldWithDefault(msg, 1, ''),
        type: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.PageOrder}
 */
proto.forge_abi.PageOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.PageOrder();
  return proto.forge_abi.PageOrder.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.PageOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.PageOrder}
 */
proto.forge_abi.PageOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setField(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setType(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.PageOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.PageOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.PageOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.PageOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string field = 1;
 * @return {string}
 */
proto.forge_abi.PageOrder.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.PageOrder.prototype.setField = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string type = 2;
 * @return {string}
 */
proto.forge_abi.PageOrder.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.forge_abi.PageOrder.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.PageInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.PageInput.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.PageInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.PageInput.displayName = 'proto.forge_abi.PageInput';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.PageInput.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.PageInput.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.PageInput.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.PageInput} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.PageInput.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        cursor: jspb.Message.getFieldWithDefault(msg, 1, ''),
        size: jspb.Message.getFieldWithDefault(msg, 2, 0),
        orderList: jspb.Message.toObjectList(
          msg.getOrderList(),
          proto.forge_abi.PageOrder.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.PageInput}
 */
proto.forge_abi.PageInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.PageInput();
  return proto.forge_abi.PageInput.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.PageInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.PageInput}
 */
proto.forge_abi.PageInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setCursor(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSize(value);
        break;
      case 3:
        var value = new proto.forge_abi.PageOrder();
        reader.readMessage(value, proto.forge_abi.PageOrder.deserializeBinaryFromReader);
        msg.addOrder(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.PageInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.PageInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.PageInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.PageInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(2, f);
  }
  f = message.getOrderList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(3, f, proto.forge_abi.PageOrder.serializeBinaryToWriter);
  }
};

/**
 * optional string cursor = 1;
 * @return {string}
 */
proto.forge_abi.PageInput.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.PageInput.prototype.setCursor = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.forge_abi.PageInput.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/** @param {number} value */
proto.forge_abi.PageInput.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * repeated PageOrder order = 3;
 * @return {!Array<!proto.forge_abi.PageOrder>}
 */
proto.forge_abi.PageInput.prototype.getOrderList = function() {
  return /** @type{!Array<!proto.forge_abi.PageOrder>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.forge_abi.PageOrder,
    3
  ));
};

/** @param {!Array<!proto.forge_abi.PageOrder>} value */
proto.forge_abi.PageInput.prototype.setOrderList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.forge_abi.PageOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.PageOrder}
 */
proto.forge_abi.PageInput.prototype.addOrder = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.forge_abi.PageOrder,
    opt_index
  );
};

proto.forge_abi.PageInput.prototype.clearOrderList = function() {
  this.setOrderList([]);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.TypeFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.TypeFilter.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.TypeFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.TypeFilter.displayName = 'proto.forge_abi.TypeFilter';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.TypeFilter.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.TypeFilter.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.TypeFilter.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.TypeFilter} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.TypeFilter.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        typesList: jspb.Message.getRepeatedField(msg, 1),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.TypeFilter}
 */
proto.forge_abi.TypeFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.TypeFilter();
  return proto.forge_abi.TypeFilter.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.TypeFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.TypeFilter}
 */
proto.forge_abi.TypeFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.addTypes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.TypeFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.TypeFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.TypeFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.TypeFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(1, f);
  }
};

/**
 * repeated string types = 1;
 * @return {!Array<string>}
 */
proto.forge_abi.TypeFilter.prototype.getTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};

/** @param {!Array<string>} value */
proto.forge_abi.TypeFilter.prototype.setTypesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.forge_abi.TypeFilter.prototype.addTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

proto.forge_abi.TypeFilter.prototype.clearTypesList = function() {
  this.setTypesList([]);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.TimeFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.TimeFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.TimeFilter.displayName = 'proto.forge_abi.TimeFilter';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.TimeFilter.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.TimeFilter.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.TimeFilter} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.TimeFilter.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        startDateTime: jspb.Message.getFieldWithDefault(msg, 1, ''),
        endDateTime: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.TimeFilter}
 */
proto.forge_abi.TimeFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.TimeFilter();
  return proto.forge_abi.TimeFilter.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.TimeFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.TimeFilter}
 */
proto.forge_abi.TimeFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setStartDateTime(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setEndDateTime(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.TimeFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.TimeFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.TimeFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.TimeFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartDateTime();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getEndDateTime();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string start_date_time = 1;
 * @return {string}
 */
proto.forge_abi.TimeFilter.prototype.getStartDateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.TimeFilter.prototype.setStartDateTime = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string end_date_time = 2;
 * @return {string}
 */
proto.forge_abi.TimeFilter.prototype.getEndDateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.forge_abi.TimeFilter.prototype.setEndDateTime = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AddressFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.AddressFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.AddressFilter.displayName = 'proto.forge_abi.AddressFilter';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AddressFilter.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AddressFilter.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AddressFilter} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AddressFilter.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        sender: jspb.Message.getFieldWithDefault(msg, 1, ''),
        receiver: jspb.Message.getFieldWithDefault(msg, 2, ''),
        direction: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AddressFilter}
 */
proto.forge_abi.AddressFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AddressFilter();
  return proto.forge_abi.AddressFilter.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AddressFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AddressFilter}
 */
proto.forge_abi.AddressFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setSender(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setReceiver(value);
        break;
      case 3:
        var value = /** @type {!proto.forge_abi.Direction} */ (reader.readEnum());
        msg.setDirection(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AddressFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AddressFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AddressFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AddressFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(3, f);
  }
};

/**
 * optional string sender = 1;
 * @return {string}
 */
proto.forge_abi.AddressFilter.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.AddressFilter.prototype.setSender = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string receiver = 2;
 * @return {string}
 */
proto.forge_abi.AddressFilter.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.forge_abi.AddressFilter.prototype.setReceiver = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional Direction direction = 3;
 * @return {!proto.forge_abi.Direction}
 */
proto.forge_abi.AddressFilter.prototype.getDirection = function() {
  return /** @type {!proto.forge_abi.Direction} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/** @param {!proto.forge_abi.Direction} value */
proto.forge_abi.AddressFilter.prototype.setDirection = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.PageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.PageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.PageInfo.displayName = 'proto.forge_abi.PageInfo';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.PageInfo.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.PageInfo.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.PageInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.PageInfo.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        cursor: jspb.Message.getFieldWithDefault(msg, 1, ''),
        next: jspb.Message.getFieldWithDefault(msg, 2, false),
        total: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.PageInfo}
 */
proto.forge_abi.PageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.PageInfo();
  return proto.forge_abi.PageInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.PageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.PageInfo}
 */
proto.forge_abi.PageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setCursor(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setNext(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setTotal(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.PageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.PageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.PageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.PageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getNext();
  if (f) {
    writer.writeBool(2, f);
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint32(3, f);
  }
};

/**
 * optional string cursor = 1;
 * @return {string}
 */
proto.forge_abi.PageInfo.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.PageInfo.prototype.setCursor = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional bool next = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.forge_abi.PageInfo.prototype.getNext = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};

/** @param {boolean} value */
proto.forge_abi.PageInfo.prototype.setNext = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};

/**
 * optional uint32 total = 3;
 * @return {number}
 */
proto.forge_abi.PageInfo.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/** @param {number} value */
proto.forge_abi.PageInfo.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.IndexedTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.IndexedTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.IndexedTransaction.displayName = 'proto.forge_abi.IndexedTransaction';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.IndexedTransaction.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.IndexedTransaction.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.IndexedTransaction} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.IndexedTransaction.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        hash: jspb.Message.getFieldWithDefault(msg, 1, ''),
        sender: jspb.Message.getFieldWithDefault(msg, 2, ''),
        receiver: jspb.Message.getFieldWithDefault(msg, 3, ''),
        time: jspb.Message.getFieldWithDefault(msg, 4, ''),
        type: jspb.Message.getFieldWithDefault(msg, 5, ''),
        tx: (f = msg.getTx()) && type_pb.Transaction.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.IndexedTransaction}
 */
proto.forge_abi.IndexedTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.IndexedTransaction();
  return proto.forge_abi.IndexedTransaction.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.IndexedTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.IndexedTransaction}
 */
proto.forge_abi.IndexedTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setHash(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setSender(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setReceiver(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setTime(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setType(value);
        break;
      case 6:
        var value = new type_pb.Transaction();
        reader.readMessage(value, type_pb.Transaction.deserializeBinaryFromReader);
        msg.setTx(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.IndexedTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.IndexedTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.IndexedTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.IndexedTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getTx();
  if (f != null) {
    writer.writeMessage(6, f, type_pb.Transaction.serializeBinaryToWriter);
  }
};

/**
 * optional string hash = 1;
 * @return {string}
 */
proto.forge_abi.IndexedTransaction.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedTransaction.prototype.setHash = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string sender = 2;
 * @return {string}
 */
proto.forge_abi.IndexedTransaction.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedTransaction.prototype.setSender = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string receiver = 3;
 * @return {string}
 */
proto.forge_abi.IndexedTransaction.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedTransaction.prototype.setReceiver = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string time = 4;
 * @return {string}
 */
proto.forge_abi.IndexedTransaction.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedTransaction.prototype.setTime = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string type = 5;
 * @return {string}
 */
proto.forge_abi.IndexedTransaction.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedTransaction.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional Transaction tx = 6;
 * @return {?proto.forge_abi.Transaction}
 */
proto.forge_abi.IndexedTransaction.prototype.getTx = function() {
  return /** @type{?proto.forge_abi.Transaction} */ (jspb.Message.getWrapperField(
    this,
    type_pb.Transaction,
    6
  ));
};

/** @param {?proto.forge_abi.Transaction|undefined} value */
proto.forge_abi.IndexedTransaction.prototype.setTx = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};

proto.forge_abi.IndexedTransaction.prototype.clearTx = function() {
  this.setTx(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedTransaction.prototype.hasTx = function() {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.IndexedAccountState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.IndexedAccountState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.IndexedAccountState.displayName = 'proto.forge_abi.IndexedAccountState';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.IndexedAccountState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.IndexedAccountState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.IndexedAccountState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.IndexedAccountState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        balance: (f = msg.getBalance()) && type_pb.BigUint.toObject(includeInstance, f),
        numAssets: jspb.Message.getFieldWithDefault(msg, 3, 0),
        numTxs: jspb.Message.getFieldWithDefault(msg, 4, 0),
        nonce: jspb.Message.getFieldWithDefault(msg, 5, 0),
        genesisTime: jspb.Message.getFieldWithDefault(msg, 6, ''),
        renaissanceTime: jspb.Message.getFieldWithDefault(msg, 7, ''),
        moniker: jspb.Message.getFieldWithDefault(msg, 8, ''),
        migratedFrom: jspb.Message.getFieldWithDefault(msg, 9, ''),
        migratedTo: jspb.Message.getFieldWithDefault(msg, 10, ''),
        totalReceivedStakes:
          (f = msg.getTotalReceivedStakes()) && type_pb.BigUint.toObject(includeInstance, f),
        totalStakes: (f = msg.getTotalStakes()) && type_pb.BigUint.toObject(includeInstance, f),
        totalUnstakes: (f = msg.getTotalUnstakes()) && type_pb.BigUint.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.IndexedAccountState}
 */
proto.forge_abi.IndexedAccountState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.IndexedAccountState();
  return proto.forge_abi.IndexedAccountState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.IndexedAccountState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.IndexedAccountState}
 */
proto.forge_abi.IndexedAccountState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setBalance(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumAssets(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumTxs(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNonce(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setGenesisTime(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setRenaissanceTime(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setMigratedFrom(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setMigratedTo(value);
        break;
      case 11:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setTotalReceivedStakes(value);
        break;
      case 12:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setTotalStakes(value);
        break;
      case 13:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setTotalUnstakes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.IndexedAccountState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.IndexedAccountState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.IndexedAccountState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.IndexedAccountState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getNumAssets();
  if (f !== 0) {
    writer.writeUint64(3, f);
  }
  f = message.getNumTxs();
  if (f !== 0) {
    writer.writeUint64(4, f);
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(5, f);
  }
  f = message.getGenesisTime();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getRenaissanceTime();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getMigratedFrom();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getMigratedTo();
  if (f.length > 0) {
    writer.writeString(10, f);
  }
  f = message.getTotalReceivedStakes();
  if (f != null) {
    writer.writeMessage(11, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getTotalStakes();
  if (f != null) {
    writer.writeMessage(12, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getTotalUnstakes();
  if (f != null) {
    writer.writeMessage(13, f, type_pb.BigUint.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAccountState.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional BigUint balance = 2;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.IndexedAccountState.prototype.getBalance = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(
    this,
    type_pb.BigUint,
    2
  ));
};

/** @param {?proto.forge_abi.BigUint|undefined} value */
proto.forge_abi.IndexedAccountState.prototype.setBalance = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};

proto.forge_abi.IndexedAccountState.prototype.clearBalance = function() {
  this.setBalance(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedAccountState.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional uint64 num_assets = 3;
 * @return {number}
 */
proto.forge_abi.IndexedAccountState.prototype.getNumAssets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/** @param {number} value */
proto.forge_abi.IndexedAccountState.prototype.setNumAssets = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional uint64 num_txs = 4;
 * @return {number}
 */
proto.forge_abi.IndexedAccountState.prototype.getNumTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/** @param {number} value */
proto.forge_abi.IndexedAccountState.prototype.setNumTxs = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};

/**
 * optional uint64 nonce = 5;
 * @return {number}
 */
proto.forge_abi.IndexedAccountState.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/** @param {number} value */
proto.forge_abi.IndexedAccountState.prototype.setNonce = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional string genesis_time = 6;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getGenesisTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAccountState.prototype.setGenesisTime = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string renaissance_time = 7;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getRenaissanceTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAccountState.prototype.setRenaissanceTime = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string moniker = 8;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAccountState.prototype.setMoniker = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string migrated_from = 9;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getMigratedFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAccountState.prototype.setMigratedFrom = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional string migrated_to = 10;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getMigratedTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAccountState.prototype.setMigratedTo = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};

/**
 * optional BigUint total_received_stakes = 11;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.IndexedAccountState.prototype.getTotalReceivedStakes = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(
    this,
    type_pb.BigUint,
    11
  ));
};

/** @param {?proto.forge_abi.BigUint|undefined} value */
proto.forge_abi.IndexedAccountState.prototype.setTotalReceivedStakes = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};

proto.forge_abi.IndexedAccountState.prototype.clearTotalReceivedStakes = function() {
  this.setTotalReceivedStakes(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedAccountState.prototype.hasTotalReceivedStakes = function() {
  return jspb.Message.getField(this, 11) != null;
};

/**
 * optional BigUint total_stakes = 12;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.IndexedAccountState.prototype.getTotalStakes = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(
    this,
    type_pb.BigUint,
    12
  ));
};

/** @param {?proto.forge_abi.BigUint|undefined} value */
proto.forge_abi.IndexedAccountState.prototype.setTotalStakes = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};

proto.forge_abi.IndexedAccountState.prototype.clearTotalStakes = function() {
  this.setTotalStakes(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedAccountState.prototype.hasTotalStakes = function() {
  return jspb.Message.getField(this, 12) != null;
};

/**
 * optional BigUint total_unstakes = 13;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.IndexedAccountState.prototype.getTotalUnstakes = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(
    this,
    type_pb.BigUint,
    13
  ));
};

/** @param {?proto.forge_abi.BigUint|undefined} value */
proto.forge_abi.IndexedAccountState.prototype.setTotalUnstakes = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};

proto.forge_abi.IndexedAccountState.prototype.clearTotalUnstakes = function() {
  this.setTotalUnstakes(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedAccountState.prototype.hasTotalUnstakes = function() {
  return jspb.Message.getField(this, 13) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.IndexedAssetState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.IndexedAssetState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.IndexedAssetState.displayName = 'proto.forge_abi.IndexedAssetState';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.IndexedAssetState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.IndexedAssetState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.IndexedAssetState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.IndexedAssetState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        owner: jspb.Message.getFieldWithDefault(msg, 2, ''),
        genesisTime: jspb.Message.getFieldWithDefault(msg, 3, ''),
        renaissanceTime: jspb.Message.getFieldWithDefault(msg, 4, ''),
        moniker: jspb.Message.getFieldWithDefault(msg, 5, ''),
        readonly: jspb.Message.getFieldWithDefault(msg, 6, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.IndexedAssetState}
 */
proto.forge_abi.IndexedAssetState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.IndexedAssetState();
  return proto.forge_abi.IndexedAssetState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.IndexedAssetState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.IndexedAssetState}
 */
proto.forge_abi.IndexedAssetState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setOwner(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setGenesisTime(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setRenaissanceTime(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setReadonly(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.IndexedAssetState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.IndexedAssetState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.IndexedAssetState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.IndexedAssetState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getGenesisTime();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getRenaissanceTime();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getReadonly();
  if (f) {
    writer.writeBool(6, f);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAssetState.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string owner = 2;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAssetState.prototype.setOwner = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string genesis_time = 3;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getGenesisTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAssetState.prototype.setGenesisTime = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string renaissance_time = 4;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getRenaissanceTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAssetState.prototype.setRenaissanceTime = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string moniker = 5;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedAssetState.prototype.setMoniker = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional bool readonly = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.forge_abi.IndexedAssetState.prototype.getReadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};

/** @param {boolean} value */
proto.forge_abi.IndexedAssetState.prototype.setReadonly = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.IndexedStakeState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.IndexedStakeState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.IndexedStakeState.displayName = 'proto.forge_abi.IndexedStakeState';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.IndexedStakeState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.IndexedStakeState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.IndexedStakeState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.IndexedStakeState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        balance: (f = msg.getBalance()) && type_pb.BigUint.toObject(includeInstance, f),
        sender: jspb.Message.getFieldWithDefault(msg, 3, ''),
        receiver: jspb.Message.getFieldWithDefault(msg, 4, ''),
        genesisTime: jspb.Message.getFieldWithDefault(msg, 5, ''),
        renaissanceTime: jspb.Message.getFieldWithDefault(msg, 6, ''),
        message: jspb.Message.getFieldWithDefault(msg, 7, ''),
        type: jspb.Message.getFieldWithDefault(msg, 8, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.IndexedStakeState}
 */
proto.forge_abi.IndexedStakeState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.IndexedStakeState();
  return proto.forge_abi.IndexedStakeState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.IndexedStakeState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.IndexedStakeState}
 */
proto.forge_abi.IndexedStakeState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setBalance(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setSender(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setReceiver(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setGenesisTime(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setRenaissanceTime(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setMessage(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setType(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.IndexedStakeState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.IndexedStakeState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.IndexedStakeState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.IndexedStakeState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getGenesisTime();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getRenaissanceTime();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(8, f);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedStakeState.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional BigUint balance = 2;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.IndexedStakeState.prototype.getBalance = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(
    this,
    type_pb.BigUint,
    2
  ));
};

/** @param {?proto.forge_abi.BigUint|undefined} value */
proto.forge_abi.IndexedStakeState.prototype.setBalance = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};

proto.forge_abi.IndexedStakeState.prototype.clearBalance = function() {
  this.setBalance(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedStakeState.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional string sender = 3;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedStakeState.prototype.setSender = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string receiver = 4;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedStakeState.prototype.setReceiver = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string genesis_time = 5;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getGenesisTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedStakeState.prototype.setGenesisTime = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string renaissance_time = 6;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getRenaissanceTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedStakeState.prototype.setRenaissanceTime = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string message = 7;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/** @param {string} value */
proto.forge_abi.IndexedStakeState.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional uint32 type = 8;
 * @return {number}
 */
proto.forge_abi.IndexedStakeState.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/** @param {number} value */
proto.forge_abi.IndexedStakeState.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};

/**
 * @enum {number}
 */
proto.forge_abi.Direction = {
  MUTUAL: 0,
  ONE_WAY: 1,
  UNION: 2,
};

goog.object.extend(exports, proto.forge_abi);

module.exports = proto.forge_abi;
