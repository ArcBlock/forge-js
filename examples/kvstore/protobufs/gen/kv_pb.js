/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.kvstore_abi.AccountKvState', null, global);
goog.exportSymbol('proto.kvstore_abi.KVPair', null, global);
goog.exportSymbol('proto.kvstore_abi.KvTx', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvstore_abi.KvTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kvstore_abi.KvTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kvstore_abi.KvTx.displayName = 'proto.kvstore_abi.KvTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.kvstore_abi.KvTx.prototype.toObject = function(opt_includeInstance) {
    return proto.kvstore_abi.KvTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.kvstore_abi.KvTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.kvstore_abi.KvTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        key: jspb.Message.getFieldWithDefault(msg, 2, ''),
        value: jspb.Message.getFieldWithDefault(msg, 3, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvstore_abi.KvTx}
 */
proto.kvstore_abi.KvTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvstore_abi.KvTx();
  return proto.kvstore_abi.KvTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvstore_abi.KvTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvstore_abi.KvTx}
 */
proto.kvstore_abi.KvTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setKey(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setValue(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvstore_abi.KvTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvstore_abi.KvTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvstore_abi.KvTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvstore_abi.KvTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string key = 2;
 * @return {string}
 */
proto.kvstore_abi.KvTx.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.kvstore_abi.KvTx.prototype.setKey = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * optional string value = 3;
 * @return {string}
 */
proto.kvstore_abi.KvTx.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/** @param {string} value */
proto.kvstore_abi.KvTx.prototype.setValue = function(value) {
  jspb.Message.setField(this, 3, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvstore_abi.KVPair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kvstore_abi.KVPair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kvstore_abi.KVPair.displayName = 'proto.kvstore_abi.KVPair';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.kvstore_abi.KVPair.prototype.toObject = function(opt_includeInstance) {
    return proto.kvstore_abi.KVPair.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.kvstore_abi.KVPair} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.kvstore_abi.KVPair.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        key: jspb.Message.getFieldWithDefault(msg, 1, ''),
        value: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvstore_abi.KVPair}
 */
proto.kvstore_abi.KVPair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvstore_abi.KVPair();
  return proto.kvstore_abi.KVPair.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvstore_abi.KVPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvstore_abi.KVPair}
 */
proto.kvstore_abi.KVPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setKey(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setValue(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvstore_abi.KVPair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvstore_abi.KVPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvstore_abi.KVPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvstore_abi.KVPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string key = 1;
 * @return {string}
 */
proto.kvstore_abi.KVPair.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.kvstore_abi.KVPair.prototype.setKey = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional string value = 2;
 * @return {string}
 */
proto.kvstore_abi.KVPair.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.kvstore_abi.KVPair.prototype.setValue = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kvstore_abi.AccountKvState = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.kvstore_abi.AccountKvState.repeatedFields_,
    null
  );
};
goog.inherits(proto.kvstore_abi.AccountKvState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.kvstore_abi.AccountKvState.displayName = 'proto.kvstore_abi.AccountKvState';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kvstore_abi.AccountKvState.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.kvstore_abi.AccountKvState.prototype.toObject = function(opt_includeInstance) {
    return proto.kvstore_abi.AccountKvState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.kvstore_abi.AccountKvState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.kvstore_abi.AccountKvState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        storeList: jspb.Message.toObjectList(
          msg.getStoreList(),
          proto.kvstore_abi.KVPair.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kvstore_abi.AccountKvState}
 */
proto.kvstore_abi.AccountKvState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kvstore_abi.AccountKvState();
  return proto.kvstore_abi.AccountKvState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kvstore_abi.AccountKvState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kvstore_abi.AccountKvState}
 */
proto.kvstore_abi.AccountKvState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.kvstore_abi.KVPair();
        reader.readMessage(value, proto.kvstore_abi.KVPair.deserializeBinaryFromReader);
        msg.addStore(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kvstore_abi.AccountKvState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kvstore_abi.AccountKvState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kvstore_abi.AccountKvState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kvstore_abi.AccountKvState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(1, f, proto.kvstore_abi.KVPair.serializeBinaryToWriter);
  }
};

/**
 * repeated KVPair store = 1;
 * @return {!Array.<!proto.kvstore_abi.KVPair>}
 */
proto.kvstore_abi.AccountKvState.prototype.getStoreList = function() {
  return /** @type{!Array.<!proto.kvstore_abi.KVPair>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.kvstore_abi.KVPair,
    1
  ));
};

/** @param {!Array.<!proto.kvstore_abi.KVPair>} value */
proto.kvstore_abi.AccountKvState.prototype.setStoreList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.kvstore_abi.KVPair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kvstore_abi.KVPair}
 */
proto.kvstore_abi.AccountKvState.prototype.addStore = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.kvstore_abi.KVPair,
    opt_index
  );
};

proto.kvstore_abi.AccountKvState.prototype.clearStoreList = function() {
  this.setStoreList([]);
};

goog.object.extend(exports, proto.kvstore_abi);
