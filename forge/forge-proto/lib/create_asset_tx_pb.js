/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var type_pb = require('./type_pb.js');
goog.object.extend(proto, type_pb);
goog.exportSymbol('proto.forge_abi.AssetAttributes', null, global);
goog.exportSymbol('proto.forge_abi.AssetFactory', null, global);
goog.exportSymbol('proto.forge_abi.AssetFactoryState', null, global);
goog.exportSymbol('proto.forge_abi.CreateAssetTx', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.CreateAssetTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.CreateAssetTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.CreateAssetTx.displayName = 'proto.forge_abi.CreateAssetTx';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.forge_abi.CreateAssetTx.prototype.toObject = function(opt_includeInstance) {
  return proto.forge_abi.CreateAssetTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.forge_abi.CreateAssetTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.CreateAssetTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    moniker: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    readonly: jspb.Message.getFieldWithDefault(msg, 3, false),
    transferrable: jspb.Message.getFieldWithDefault(msg, 4, false),
    ttl: jspb.Message.getFieldWithDefault(msg, 5, 0),
    parent: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.CreateAssetTx}
 */
proto.forge_abi.CreateAssetTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.CreateAssetTx;
  return proto.forge_abi.CreateAssetTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.CreateAssetTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.CreateAssetTx}
 */
proto.forge_abi.CreateAssetTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMoniker(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadonly(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferrable(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTtl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.CreateAssetTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.CreateAssetTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.CreateAssetTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.CreateAssetTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getReadonly();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getTransferrable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getTtl();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string moniker = 1;
 * @return {string}
 */
proto.forge_abi.CreateAssetTx.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.forge_abi.CreateAssetTx.prototype.setMoniker = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Any data = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.CreateAssetTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.CreateAssetTx.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.forge_abi.CreateAssetTx.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.CreateAssetTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool readonly = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.forge_abi.CreateAssetTx.prototype.getReadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.forge_abi.CreateAssetTx.prototype.setReadonly = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool transferrable = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.forge_abi.CreateAssetTx.prototype.getTransferrable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.forge_abi.CreateAssetTx.prototype.setTransferrable = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 ttl = 5;
 * @return {number}
 */
proto.forge_abi.CreateAssetTx.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.forge_abi.CreateAssetTx.prototype.setTtl = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string parent = 6;
 * @return {string}
 */
proto.forge_abi.CreateAssetTx.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.forge_abi.CreateAssetTx.prototype.setParent = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string address = 7;
 * @return {string}
 */
proto.forge_abi.CreateAssetTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.forge_abi.CreateAssetTx.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AssetAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.AssetAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.AssetAttributes.displayName = 'proto.forge_abi.AssetAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.forge_abi.AssetAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.forge_abi.AssetAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.forge_abi.AssetAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    transferrable: jspb.Message.getFieldWithDefault(msg, 1, false),
    ttl: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AssetAttributes}
 */
proto.forge_abi.AssetAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AssetAttributes;
  return proto.forge_abi.AssetAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AssetAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AssetAttributes}
 */
proto.forge_abi.AssetAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferrable(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTtl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AssetAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AssetAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AssetAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferrable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTtl();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bool transferrable = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.forge_abi.AssetAttributes.prototype.getTransferrable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.forge_abi.AssetAttributes.prototype.setTransferrable = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint32 ttl = 2;
 * @return {number}
 */
proto.forge_abi.AssetAttributes.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.forge_abi.AssetAttributes.prototype.setTtl = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AssetFactory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.AssetFactory.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.AssetFactory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.AssetFactory.displayName = 'proto.forge_abi.AssetFactory';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.AssetFactory.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.forge_abi.AssetFactory.prototype.toObject = function(opt_includeInstance) {
  return proto.forge_abi.AssetFactory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.forge_abi.AssetFactory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetFactory.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    price: (f = msg.getPrice()) && type_pb.BigUint.toObject(includeInstance, f),
    template: jspb.Message.getFieldWithDefault(msg, 4, ""),
    allowedSpecArgsList: jspb.Message.getRepeatedField(msg, 5),
    assetName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    attributes: (f = msg.getAttributes()) && proto.forge_abi.AssetAttributes.toObject(includeInstance, f),
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AssetFactory}
 */
proto.forge_abi.AssetFactory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AssetFactory;
  return proto.forge_abi.AssetFactory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AssetFactory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AssetFactory}
 */
proto.forge_abi.AssetFactory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 3:
      var value = new type_pb.BigUint;
      reader.readMessage(value,type_pb.BigUint.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowedSpecArgs(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetName(value);
      break;
    case 7:
      var value = new proto.forge_abi.AssetAttributes;
      reader.readMessage(value,proto.forge_abi.AssetAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 15:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AssetFactory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AssetFactory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AssetFactory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetFactory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      type_pb.BigUint.serializeBinaryToWriter
    );
  }
  f = message.getTemplate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAllowedSpecArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getAssetName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.forge_abi.AssetAttributes.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.forge_abi.AssetFactory.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.forge_abi.AssetFactory.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.forge_abi.AssetFactory.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.forge_abi.AssetFactory.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional BigUint price = 3;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.AssetFactory.prototype.getPrice = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (
    jspb.Message.getWrapperField(this, type_pb.BigUint, 3));
};


/** @param {?proto.forge_abi.BigUint|undefined} value */
proto.forge_abi.AssetFactory.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.forge_abi.AssetFactory.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactory.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string template = 4;
 * @return {string}
 */
proto.forge_abi.AssetFactory.prototype.getTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.forge_abi.AssetFactory.prototype.setTemplate = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string allowed_spec_args = 5;
 * @return {!Array<string>}
 */
proto.forge_abi.AssetFactory.prototype.getAllowedSpecArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.forge_abi.AssetFactory.prototype.setAllowedSpecArgsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.forge_abi.AssetFactory.prototype.addAllowedSpecArgs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.forge_abi.AssetFactory.prototype.clearAllowedSpecArgsList = function() {
  this.setAllowedSpecArgsList([]);
};


/**
 * optional string asset_name = 6;
 * @return {string}
 */
proto.forge_abi.AssetFactory.prototype.getAssetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.forge_abi.AssetFactory.prototype.setAssetName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional AssetAttributes attributes = 7;
 * @return {?proto.forge_abi.AssetAttributes}
 */
proto.forge_abi.AssetFactory.prototype.getAttributes = function() {
  return /** @type{?proto.forge_abi.AssetAttributes} */ (
    jspb.Message.getWrapperField(this, proto.forge_abi.AssetAttributes, 7));
};


/** @param {?proto.forge_abi.AssetAttributes|undefined} value */
proto.forge_abi.AssetFactory.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.forge_abi.AssetFactory.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactory.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.AssetFactory.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.AssetFactory.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.forge_abi.AssetFactory.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactory.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AssetFactoryState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.AssetFactoryState.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.AssetFactoryState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.forge_abi.AssetFactoryState.displayName = 'proto.forge_abi.AssetFactoryState';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.AssetFactoryState.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.forge_abi.AssetFactoryState.prototype.toObject = function(opt_includeInstance) {
  return proto.forge_abi.AssetFactoryState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.forge_abi.AssetFactoryState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetFactoryState.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    price: (f = msg.getPrice()) && type_pb.BigUint.toObject(includeInstance, f),
    template: jspb.Message.getFieldWithDefault(msg, 4, ""),
    allowedSpecArgsList: jspb.Message.getRepeatedField(msg, 5),
    assetName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    attributes: (f = msg.getAttributes()) && proto.forge_abi.AssetAttributes.toObject(includeInstance, f),
    numCreated: jspb.Message.getFieldWithDefault(msg, 8, 0),
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AssetFactoryState}
 */
proto.forge_abi.AssetFactoryState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AssetFactoryState;
  return proto.forge_abi.AssetFactoryState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AssetFactoryState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AssetFactoryState}
 */
proto.forge_abi.AssetFactoryState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 3:
      var value = new type_pb.BigUint;
      reader.readMessage(value,type_pb.BigUint.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowedSpecArgs(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetName(value);
      break;
    case 7:
      var value = new proto.forge_abi.AssetAttributes;
      reader.readMessage(value,proto.forge_abi.AssetAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumCreated(value);
      break;
    case 15:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AssetFactoryState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AssetFactoryState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AssetFactoryState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetFactoryState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      type_pb.BigUint.serializeBinaryToWriter
    );
  }
  f = message.getTemplate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAllowedSpecArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getAssetName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.forge_abi.AssetAttributes.serializeBinaryToWriter
    );
  }
  f = message.getNumCreated();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.forge_abi.AssetFactoryState.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.forge_abi.AssetFactoryState.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.forge_abi.AssetFactoryState.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.forge_abi.AssetFactoryState.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional BigUint price = 3;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.AssetFactoryState.prototype.getPrice = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (
    jspb.Message.getWrapperField(this, type_pb.BigUint, 3));
};


/** @param {?proto.forge_abi.BigUint|undefined} value */
proto.forge_abi.AssetFactoryState.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.forge_abi.AssetFactoryState.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactoryState.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string template = 4;
 * @return {string}
 */
proto.forge_abi.AssetFactoryState.prototype.getTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.forge_abi.AssetFactoryState.prototype.setTemplate = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string allowed_spec_args = 5;
 * @return {!Array<string>}
 */
proto.forge_abi.AssetFactoryState.prototype.getAllowedSpecArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.forge_abi.AssetFactoryState.prototype.setAllowedSpecArgsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.forge_abi.AssetFactoryState.prototype.addAllowedSpecArgs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.forge_abi.AssetFactoryState.prototype.clearAllowedSpecArgsList = function() {
  this.setAllowedSpecArgsList([]);
};


/**
 * optional string asset_name = 6;
 * @return {string}
 */
proto.forge_abi.AssetFactoryState.prototype.getAssetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.forge_abi.AssetFactoryState.prototype.setAssetName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional AssetAttributes attributes = 7;
 * @return {?proto.forge_abi.AssetAttributes}
 */
proto.forge_abi.AssetFactoryState.prototype.getAttributes = function() {
  return /** @type{?proto.forge_abi.AssetAttributes} */ (
    jspb.Message.getWrapperField(this, proto.forge_abi.AssetAttributes, 7));
};


/** @param {?proto.forge_abi.AssetAttributes|undefined} value */
proto.forge_abi.AssetFactoryState.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.forge_abi.AssetFactoryState.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactoryState.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 num_created = 8;
 * @return {number}
 */
proto.forge_abi.AssetFactoryState.prototype.getNumCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.forge_abi.AssetFactoryState.prototype.setNumCreated = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.AssetFactoryState.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.forge_abi.AssetFactoryState.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.forge_abi.AssetFactoryState.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactoryState.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};


goog.object.extend(exports, proto.forge_abi);

module.exports = proto.forge_abi;
