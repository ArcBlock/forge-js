// source: state.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var enum_pb = require('./enum_pb.js');
goog.object.extend(proto, enum_pb);
var type_pb = require('./type_pb.js');
goog.object.extend(proto, type_pb);
var tx_pb = require('./tx_pb.js');
goog.object.extend(proto, tx_pb);
goog.exportSymbol('proto.forge_abi.AccountState', null, global);
goog.exportSymbol('proto.forge_abi.AssetFactoryState', null, global);
goog.exportSymbol('proto.forge_abi.AssetState', null, global);
goog.exportSymbol('proto.forge_abi.BlacklistState', null, global);
goog.exportSymbol('proto.forge_abi.CoreProtocol', null, global);
goog.exportSymbol('proto.forge_abi.DelegateOpState', null, global);
goog.exportSymbol('proto.forge_abi.DelegateState', null, global);
goog.exportSymbol('proto.forge_abi.ForgeState', null, global);
goog.exportSymbol('proto.forge_abi.ProtocolState', null, global);
goog.exportSymbol('proto.forge_abi.RootState', null, global);
goog.exportSymbol('proto.forge_abi.StakeState', null, global);
goog.exportSymbol('proto.forge_abi.StatisticsState', null, global);
goog.exportSymbol('proto.forge_abi.SwapState', null, global);
goog.exportSymbol('proto.forge_abi.SwapStatistics', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AccountState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.AccountState.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.AccountState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.AccountState.displayName = 'proto.forge_abi.AccountState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AssetState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.AssetState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.AssetState.displayName = 'proto.forge_abi.AssetState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.CoreProtocol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.CoreProtocol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.CoreProtocol.displayName = 'proto.forge_abi.CoreProtocol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ForgeState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.forge_abi.ForgeState.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.ForgeState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.ForgeState.displayName = 'proto.forge_abi.ForgeState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.RootState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.RootState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.RootState.displayName = 'proto.forge_abi.RootState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.StakeState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.StakeState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.StakeState.displayName = 'proto.forge_abi.StakeState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.StatisticsState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.StatisticsState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.StatisticsState.displayName = 'proto.forge_abi.StatisticsState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.BlacklistState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.BlacklistState.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.BlacklistState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.BlacklistState.displayName = 'proto.forge_abi.BlacklistState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ProtocolState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.ProtocolState.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.ProtocolState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.ProtocolState.displayName = 'proto.forge_abi.ProtocolState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.SwapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.SwapState.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.SwapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.SwapState.displayName = 'proto.forge_abi.SwapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.SwapStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.SwapStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.SwapStatistics.displayName = 'proto.forge_abi.SwapStatistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DelegateOpState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.DelegateOpState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.DelegateOpState.displayName = 'proto.forge_abi.DelegateOpState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DelegateState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.DelegateState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.DelegateState.displayName = 'proto.forge_abi.DelegateState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AssetFactoryState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.AssetFactoryState.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.AssetFactoryState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.AssetFactoryState.displayName = 'proto.forge_abi.AssetFactoryState';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.AccountState.repeatedFields_ = [13, 14];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AccountState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AccountState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AccountState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AccountState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        balance: (f = msg.getBalance()) && type_pb.BigUint.toObject(includeInstance, f),
        nonce: jspb.Message.getFieldWithDefault(msg, 2, 0),
        numTxs: jspb.Message.getFieldWithDefault(msg, 3, 0),
        address: jspb.Message.getFieldWithDefault(msg, 4, ''),
        pk: msg.getPk(),
        type: (f = msg.getType()) && type_pb.WalletType.toObject(includeInstance, f),
        moniker: jspb.Message.getFieldWithDefault(msg, 7, ''),
        context: (f = msg.getContext()) && type_pb.StateContext.toObject(includeInstance, f),
        issuer: jspb.Message.getFieldWithDefault(msg, 9, ''),
        gasBalance: (f = msg.getGasBalance()) && type_pb.BigUint.toObject(includeInstance, f),
        migratedToList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
        migratedFromList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
        numAssets: jspb.Message.getFieldWithDefault(msg, 15, 0),
        stake: (f = msg.getStake()) && type_pb.StakeContext.toObject(includeInstance, f),
        pinnedFiles: (f = msg.getPinnedFiles()) && type_pb.CircularQueue.toObject(includeInstance, f),
        poke: (f = msg.getPoke()) && type_pb.PokeInfo.toObject(includeInstance, f),
        depositReceived: (f = msg.getDepositReceived()) && type_pb.BigUint.toObject(includeInstance, f),
        withdrawItems: (f = msg.getWithdrawItems()) && type_pb.CircularQueue.toObject(includeInstance, f),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AccountState}
 */
proto.forge_abi.AccountState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AccountState();
  return proto.forge_abi.AccountState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AccountState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AccountState}
 */
proto.forge_abi.AccountState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setBalance(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNonce(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumTxs(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 5:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setPk(value);
        break;
      case 6:
        var value = new type_pb.WalletType();
        reader.readMessage(value, type_pb.WalletType.deserializeBinaryFromReader);
        msg.setType(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 8:
        var value = new type_pb.StateContext();
        reader.readMessage(value, type_pb.StateContext.deserializeBinaryFromReader);
        msg.setContext(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setIssuer(value);
        break;
      case 10:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setGasBalance(value);
        break;
      case 13:
        var value = /** @type {string} */ (reader.readString());
        msg.addMigratedTo(value);
        break;
      case 14:
        var value = /** @type {string} */ (reader.readString());
        msg.addMigratedFrom(value);
        break;
      case 15:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumAssets(value);
        break;
      case 16:
        var value = new type_pb.StakeContext();
        reader.readMessage(value, type_pb.StakeContext.deserializeBinaryFromReader);
        msg.setStake(value);
        break;
      case 17:
        var value = new type_pb.CircularQueue();
        reader.readMessage(value, type_pb.CircularQueue.deserializeBinaryFromReader);
        msg.setPinnedFiles(value);
        break;
      case 18:
        var value = new type_pb.PokeInfo();
        reader.readMessage(value, type_pb.PokeInfo.deserializeBinaryFromReader);
        msg.setPoke(value);
        break;
      case 19:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setDepositReceived(value);
        break;
      case 20:
        var value = new type_pb.CircularQueue();
        reader.readMessage(value, type_pb.CircularQueue.deserializeBinaryFromReader);
        msg.setWithdrawItems(value);
        break;
      case 50:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AccountState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AccountState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AccountState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AccountState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(1, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(2, f);
  }
  f = message.getNumTxs();
  if (f !== 0) {
    writer.writeUint64(3, f);
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getPk_asU8();
  if (f.length > 0) {
    writer.writeBytes(5, f);
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(6, f, type_pb.WalletType.serializeBinaryToWriter);
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(8, f, type_pb.StateContext.serializeBinaryToWriter);
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getGasBalance();
  if (f != null) {
    writer.writeMessage(10, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getMigratedToList();
  if (f.length > 0) {
    writer.writeRepeatedString(13, f);
  }
  f = message.getMigratedFromList();
  if (f.length > 0) {
    writer.writeRepeatedString(14, f);
  }
  f = message.getNumAssets();
  if (f !== 0) {
    writer.writeUint64(15, f);
  }
  f = message.getStake();
  if (f != null) {
    writer.writeMessage(16, f, type_pb.StakeContext.serializeBinaryToWriter);
  }
  f = message.getPinnedFiles();
  if (f != null) {
    writer.writeMessage(17, f, type_pb.CircularQueue.serializeBinaryToWriter);
  }
  f = message.getPoke();
  if (f != null) {
    writer.writeMessage(18, f, type_pb.PokeInfo.serializeBinaryToWriter);
  }
  f = message.getDepositReceived();
  if (f != null) {
    writer.writeMessage(19, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getWithdrawItems();
  if (f != null) {
    writer.writeMessage(20, f, type_pb.CircularQueue.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(50, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional BigUint balance = 1;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.AccountState.prototype.getBalance = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 1));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setBalance = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearBalance = function() {
  return this.setBalance(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountState.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional uint64 nonce = 2;
 * @return {number}
 */
proto.forge_abi.AccountState.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional uint64 num_txs = 3;
 * @return {number}
 */
proto.forge_abi.AccountState.prototype.getNumTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setNumTxs = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional string address = 4;
 * @return {string}
 */
proto.forge_abi.AccountState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional bytes pk = 5;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.AccountState.prototype.getPk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * optional bytes pk = 5;
 * This is a type-conversion wrapper around `getPk()`
 * @return {string}
 */
proto.forge_abi.AccountState.prototype.getPk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getPk()));
};

/**
 * optional bytes pk = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPk()`
 * @return {!Uint8Array}
 */
proto.forge_abi.AccountState.prototype.getPk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getPk()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setPk = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};

/**
 * optional WalletType type = 6;
 * @return {?proto.forge_abi.WalletType}
 */
proto.forge_abi.AccountState.prototype.getType = function() {
  return /** @type{?proto.forge_abi.WalletType} */ (jspb.Message.getWrapperField(this, type_pb.WalletType, 6));
};

/**
 * @param {?proto.forge_abi.WalletType|undefined} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearType = function() {
  return this.setType(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountState.prototype.hasType = function() {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * optional string moniker = 7;
 * @return {string}
 */
proto.forge_abi.AccountState.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional StateContext context = 8;
 * @return {?proto.forge_abi.StateContext}
 */
proto.forge_abi.AccountState.prototype.getContext = function() {
  return /** @type{?proto.forge_abi.StateContext} */ (jspb.Message.getWrapperField(this, type_pb.StateContext, 8));
};

/**
 * @param {?proto.forge_abi.StateContext|undefined} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearContext = function() {
  return this.setContext(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountState.prototype.hasContext = function() {
  return jspb.Message.getField(this, 8) != null;
};

/**
 * optional string issuer = 9;
 * @return {string}
 */
proto.forge_abi.AccountState.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional BigUint gas_balance = 10;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.AccountState.prototype.getGasBalance = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 10));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setGasBalance = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearGasBalance = function() {
  return this.setGasBalance(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountState.prototype.hasGasBalance = function() {
  return jspb.Message.getField(this, 10) != null;
};

/**
 * repeated string migrated_to = 13;
 * @return {!Array<string>}
 */
proto.forge_abi.AccountState.prototype.getMigratedToList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setMigratedToList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.addMigratedTo = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearMigratedToList = function() {
  return this.setMigratedToList([]);
};

/**
 * repeated string migrated_from = 14;
 * @return {!Array<string>}
 */
proto.forge_abi.AccountState.prototype.getMigratedFromList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setMigratedFromList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.addMigratedFrom = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearMigratedFromList = function() {
  return this.setMigratedFromList([]);
};

/**
 * optional uint64 num_assets = 15;
 * @return {number}
 */
proto.forge_abi.AccountState.prototype.getNumAssets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setNumAssets = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};

/**
 * optional StakeContext stake = 16;
 * @return {?proto.forge_abi.StakeContext}
 */
proto.forge_abi.AccountState.prototype.getStake = function() {
  return /** @type{?proto.forge_abi.StakeContext} */ (jspb.Message.getWrapperField(this, type_pb.StakeContext, 16));
};

/**
 * @param {?proto.forge_abi.StakeContext|undefined} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setStake = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearStake = function() {
  return this.setStake(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountState.prototype.hasStake = function() {
  return jspb.Message.getField(this, 16) != null;
};

/**
 * optional CircularQueue pinned_files = 17;
 * @return {?proto.forge_abi.CircularQueue}
 */
proto.forge_abi.AccountState.prototype.getPinnedFiles = function() {
  return /** @type{?proto.forge_abi.CircularQueue} */ (jspb.Message.getWrapperField(this, type_pb.CircularQueue, 17));
};

/**
 * @param {?proto.forge_abi.CircularQueue|undefined} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setPinnedFiles = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearPinnedFiles = function() {
  return this.setPinnedFiles(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountState.prototype.hasPinnedFiles = function() {
  return jspb.Message.getField(this, 17) != null;
};

/**
 * optional PokeInfo poke = 18;
 * @return {?proto.forge_abi.PokeInfo}
 */
proto.forge_abi.AccountState.prototype.getPoke = function() {
  return /** @type{?proto.forge_abi.PokeInfo} */ (jspb.Message.getWrapperField(this, type_pb.PokeInfo, 18));
};

/**
 * @param {?proto.forge_abi.PokeInfo|undefined} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setPoke = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearPoke = function() {
  return this.setPoke(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountState.prototype.hasPoke = function() {
  return jspb.Message.getField(this, 18) != null;
};

/**
 * optional BigUint deposit_received = 19;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.AccountState.prototype.getDepositReceived = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 19));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setDepositReceived = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearDepositReceived = function() {
  return this.setDepositReceived(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountState.prototype.hasDepositReceived = function() {
  return jspb.Message.getField(this, 19) != null;
};

/**
 * optional CircularQueue withdraw_items = 20;
 * @return {?proto.forge_abi.CircularQueue}
 */
proto.forge_abi.AccountState.prototype.getWithdrawItems = function() {
  return /** @type{?proto.forge_abi.CircularQueue} */ (jspb.Message.getWrapperField(this, type_pb.CircularQueue, 20));
};

/**
 * @param {?proto.forge_abi.CircularQueue|undefined} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setWithdrawItems = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearWithdrawItems = function() {
  return this.setWithdrawItems(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountState.prototype.hasWithdrawItems = function() {
  return jspb.Message.getField(this, 20) != null;
};

/**
 * optional google.protobuf.Any data = 50;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.AccountState.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 50));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 50, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountState} returns this
 */
proto.forge_abi.AccountState.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountState.prototype.hasData = function() {
  return jspb.Message.getField(this, 50) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AssetState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AssetState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AssetState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AssetState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        owner: jspb.Message.getFieldWithDefault(msg, 2, ''),
        moniker: jspb.Message.getFieldWithDefault(msg, 3, ''),
        readonly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        transferrable: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
        ttl: jspb.Message.getFieldWithDefault(msg, 6, 0),
        consumedTime:
          (f = msg.getConsumedTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        issuer: jspb.Message.getFieldWithDefault(msg, 8, ''),
        parent: jspb.Message.getFieldWithDefault(msg, 9, ''),
        stake: (f = msg.getStake()) && type_pb.StakeContext.toObject(includeInstance, f),
        context: (f = msg.getContext()) && type_pb.StateContext.toObject(includeInstance, f),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AssetState}
 */
proto.forge_abi.AssetState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AssetState();
  return proto.forge_abi.AssetState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AssetState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AssetState}
 */
proto.forge_abi.AssetState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setOwner(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setReadonly(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setTransferrable(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setTtl(value);
        break;
      case 7:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setConsumedTime(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setIssuer(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setParent(value);
        break;
      case 13:
        var value = new type_pb.StakeContext();
        reader.readMessage(value, type_pb.StakeContext.deserializeBinaryFromReader);
        msg.setStake(value);
        break;
      case 14:
        var value = new type_pb.StateContext();
        reader.readMessage(value, type_pb.StateContext.deserializeBinaryFromReader);
        msg.setContext(value);
        break;
      case 50:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AssetState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AssetState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AssetState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getReadonly();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getTransferrable();
  if (f) {
    writer.writeBool(5, f);
  }
  f = message.getTtl();
  if (f !== 0) {
    writer.writeUint32(6, f);
  }
  f = message.getConsumedTime();
  if (f != null) {
    writer.writeMessage(7, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getStake();
  if (f != null) {
    writer.writeMessage(13, f, type_pb.StakeContext.serializeBinaryToWriter);
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(14, f, type_pb.StateContext.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(50, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.AssetState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string owner = 2;
 * @return {string}
 */
proto.forge_abi.AssetState.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string moniker = 3;
 * @return {string}
 */
proto.forge_abi.AssetState.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional bool readonly = 4;
 * @return {boolean}
 */
proto.forge_abi.AssetState.prototype.getReadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setReadonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional bool transferrable = 5;
 * @return {boolean}
 */
proto.forge_abi.AssetState.prototype.getTransferrable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setTransferrable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

/**
 * optional uint32 ttl = 6;
 * @return {number}
 */
proto.forge_abi.AssetState.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setTtl = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};

/**
 * optional google.protobuf.Timestamp consumed_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.forge_abi.AssetState.prototype.getConsumedTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    7
  ));
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setConsumedTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.clearConsumedTime = function() {
  return this.setConsumedTime(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetState.prototype.hasConsumedTime = function() {
  return jspb.Message.getField(this, 7) != null;
};

/**
 * optional string issuer = 8;
 * @return {string}
 */
proto.forge_abi.AssetState.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string parent = 9;
 * @return {string}
 */
proto.forge_abi.AssetState.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional StakeContext stake = 13;
 * @return {?proto.forge_abi.StakeContext}
 */
proto.forge_abi.AssetState.prototype.getStake = function() {
  return /** @type{?proto.forge_abi.StakeContext} */ (jspb.Message.getWrapperField(this, type_pb.StakeContext, 13));
};

/**
 * @param {?proto.forge_abi.StakeContext|undefined} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setStake = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.clearStake = function() {
  return this.setStake(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetState.prototype.hasStake = function() {
  return jspb.Message.getField(this, 13) != null;
};

/**
 * optional StateContext context = 14;
 * @return {?proto.forge_abi.StateContext}
 */
proto.forge_abi.AssetState.prototype.getContext = function() {
  return /** @type{?proto.forge_abi.StateContext} */ (jspb.Message.getWrapperField(this, type_pb.StateContext, 14));
};

/**
 * @param {?proto.forge_abi.StateContext|undefined} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.clearContext = function() {
  return this.setContext(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetState.prototype.hasContext = function() {
  return jspb.Message.getField(this, 14) != null;
};

/**
 * optional google.protobuf.Any data = 50;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.AssetState.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 50));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 50, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AssetState} returns this
 */
proto.forge_abi.AssetState.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetState.prototype.hasData = function() {
  return jspb.Message.getField(this, 50) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.CoreProtocol.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.CoreProtocol.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.CoreProtocol} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.CoreProtocol.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        name: jspb.Message.getFieldWithDefault(msg, 1, ''),
        address: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.CoreProtocol}
 */
proto.forge_abi.CoreProtocol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.CoreProtocol();
  return proto.forge_abi.CoreProtocol.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.CoreProtocol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.CoreProtocol}
 */
proto.forge_abi.CoreProtocol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.CoreProtocol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.CoreProtocol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.CoreProtocol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.CoreProtocol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.forge_abi.CoreProtocol.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.CoreProtocol} returns this
 */
proto.forge_abi.CoreProtocol.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string address = 2;
 * @return {string}
 */
proto.forge_abi.CoreProtocol.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.CoreProtocol} returns this
 */
proto.forge_abi.CoreProtocol.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.ForgeState.repeatedFields_ = [12];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ForgeState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ForgeState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ForgeState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ForgeState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        consensus: (f = msg.getConsensus()) && type_pb.ConsensusParams.toObject(includeInstance, f),
        tasksMap: (f = msg.getTasksMap()) ? f.toObject(includeInstance, proto.forge_abi.UpgradeTasks.toObject) : [],
        stakeSummaryMap: (f = msg.getStakeSummaryMap())
          ? f.toObject(includeInstance, proto.forge_abi.StakeSummary.toObject)
          : [],
        version: jspb.Message.getFieldWithDefault(msg, 5, ''),
        token: (f = msg.getToken()) && type_pb.ForgeToken.toObject(includeInstance, f),
        txConfig: (f = msg.getTxConfig()) && type_pb.TransactionConfig.toObject(includeInstance, f),
        protocolsList: jspb.Message.toObjectList(
          msg.getProtocolsList(),
          proto.forge_abi.CoreProtocol.toObject,
          includeInstance
        ),
        gasMap: (f = msg.getGasMap()) ? f.toObject(includeInstance, undefined) : [],
        upgradeInfo: (f = msg.getUpgradeInfo()) && type_pb.UpgradeInfo.toObject(includeInstance, f),
        accountConfigMap: (f = msg.getAccountConfigMap())
          ? f.toObject(includeInstance, proto.forge_abi.AccountConfig.toObject)
          : [],
        tokenSwapConfig: (f = msg.getTokenSwapConfig()) && type_pb.TokenSwapConfig.toObject(includeInstance, f),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ForgeState}
 */
proto.forge_abi.ForgeState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ForgeState();
  return proto.forge_abi.ForgeState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ForgeState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ForgeState}
 */
proto.forge_abi.ForgeState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = new type_pb.ConsensusParams();
        reader.readMessage(value, type_pb.ConsensusParams.deserializeBinaryFromReader);
        msg.setConsensus(value);
        break;
      case 3:
        var value = msg.getTasksMap();
        reader.readMessage(value, function(message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readUint64,
            jspb.BinaryReader.prototype.readMessage,
            proto.forge_abi.UpgradeTasks.deserializeBinaryFromReader,
            0,
            new proto.forge_abi.UpgradeTasks()
          );
        });
        break;
      case 4:
        var value = msg.getStakeSummaryMap();
        reader.readMessage(value, function(message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readUint32,
            jspb.BinaryReader.prototype.readMessage,
            proto.forge_abi.StakeSummary.deserializeBinaryFromReader,
            0,
            new proto.forge_abi.StakeSummary()
          );
        });
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setVersion(value);
        break;
      case 8:
        var value = new type_pb.ForgeToken();
        reader.readMessage(value, type_pb.ForgeToken.deserializeBinaryFromReader);
        msg.setToken(value);
        break;
      case 9:
        var value = new type_pb.TransactionConfig();
        reader.readMessage(value, type_pb.TransactionConfig.deserializeBinaryFromReader);
        msg.setTxConfig(value);
        break;
      case 12:
        var value = new proto.forge_abi.CoreProtocol();
        reader.readMessage(value, proto.forge_abi.CoreProtocol.deserializeBinaryFromReader);
        msg.addProtocols(value);
        break;
      case 13:
        var value = msg.getGasMap();
        reader.readMessage(value, function(message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readUint32,
            null,
            '',
            0
          );
        });
        break;
      case 14:
        var value = new type_pb.UpgradeInfo();
        reader.readMessage(value, type_pb.UpgradeInfo.deserializeBinaryFromReader);
        msg.setUpgradeInfo(value);
        break;
      case 16:
        var value = msg.getAccountConfigMap();
        reader.readMessage(value, function(message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readMessage,
            proto.forge_abi.AccountConfig.deserializeBinaryFromReader,
            '',
            new proto.forge_abi.AccountConfig()
          );
        });
        break;
      case 17:
        var value = new type_pb.TokenSwapConfig();
        reader.readMessage(value, type_pb.TokenSwapConfig.deserializeBinaryFromReader);
        msg.setTokenSwapConfig(value);
        break;
      case 2047:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ForgeState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ForgeState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ForgeState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ForgeState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getConsensus();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.ConsensusParams.serializeBinaryToWriter);
  }
  f = message.getTasksMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      3,
      writer,
      jspb.BinaryWriter.prototype.writeUint64,
      jspb.BinaryWriter.prototype.writeMessage,
      proto.forge_abi.UpgradeTasks.serializeBinaryToWriter
    );
  }
  f = message.getStakeSummaryMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      4,
      writer,
      jspb.BinaryWriter.prototype.writeUint32,
      jspb.BinaryWriter.prototype.writeMessage,
      proto.forge_abi.StakeSummary.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(8, f, type_pb.ForgeToken.serializeBinaryToWriter);
  }
  f = message.getTxConfig();
  if (f != null) {
    writer.writeMessage(9, f, type_pb.TransactionConfig.serializeBinaryToWriter);
  }
  f = message.getProtocolsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(12, f, proto.forge_abi.CoreProtocol.serializeBinaryToWriter);
  }
  f = message.getGasMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeUint32);
  }
  f = message.getUpgradeInfo();
  if (f != null) {
    writer.writeMessage(14, f, type_pb.UpgradeInfo.serializeBinaryToWriter);
  }
  f = message.getAccountConfigMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      16,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeMessage,
      proto.forge_abi.AccountConfig.serializeBinaryToWriter
    );
  }
  f = message.getTokenSwapConfig();
  if (f != null) {
    writer.writeMessage(17, f, type_pb.TokenSwapConfig.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(2047, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.ForgeState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional ConsensusParams consensus = 2;
 * @return {?proto.forge_abi.ConsensusParams}
 */
proto.forge_abi.ForgeState.prototype.getConsensus = function() {
  return /** @type{?proto.forge_abi.ConsensusParams} */ (jspb.Message.getWrapperField(
    this,
    type_pb.ConsensusParams,
    2
  ));
};

/**
 * @param {?proto.forge_abi.ConsensusParams|undefined} value
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.setConsensus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearConsensus = function() {
  return this.setConsensus(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ForgeState.prototype.hasConsensus = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * map<uint64, UpgradeTasks> tasks = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.forge_abi.UpgradeTasks>}
 */
proto.forge_abi.ForgeState.prototype.getTasksMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.forge_abi.UpgradeTasks>} */ (jspb.Message.getMapField(
    this,
    3,
    opt_noLazyCreate,
    proto.forge_abi.UpgradeTasks
  ));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearTasksMap = function() {
  this.getTasksMap().clear();
  return this;
};

/**
 * map<uint32, StakeSummary> stake_summary = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.forge_abi.StakeSummary>}
 */
proto.forge_abi.ForgeState.prototype.getStakeSummaryMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.forge_abi.StakeSummary>} */ (jspb.Message.getMapField(
    this,
    4,
    opt_noLazyCreate,
    proto.forge_abi.StakeSummary
  ));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearStakeSummaryMap = function() {
  this.getStakeSummaryMap().clear();
  return this;
};

/**
 * optional string version = 5;
 * @return {string}
 */
proto.forge_abi.ForgeState.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional ForgeToken token = 8;
 * @return {?proto.forge_abi.ForgeToken}
 */
proto.forge_abi.ForgeState.prototype.getToken = function() {
  return /** @type{?proto.forge_abi.ForgeToken} */ (jspb.Message.getWrapperField(this, type_pb.ForgeToken, 8));
};

/**
 * @param {?proto.forge_abi.ForgeToken|undefined} value
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.setToken = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearToken = function() {
  return this.setToken(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ForgeState.prototype.hasToken = function() {
  return jspb.Message.getField(this, 8) != null;
};

/**
 * optional TransactionConfig tx_config = 9;
 * @return {?proto.forge_abi.TransactionConfig}
 */
proto.forge_abi.ForgeState.prototype.getTxConfig = function() {
  return /** @type{?proto.forge_abi.TransactionConfig} */ (jspb.Message.getWrapperField(
    this,
    type_pb.TransactionConfig,
    9
  ));
};

/**
 * @param {?proto.forge_abi.TransactionConfig|undefined} value
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.setTxConfig = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearTxConfig = function() {
  return this.setTxConfig(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ForgeState.prototype.hasTxConfig = function() {
  return jspb.Message.getField(this, 9) != null;
};

/**
 * repeated CoreProtocol protocols = 12;
 * @return {!Array<!proto.forge_abi.CoreProtocol>}
 */
proto.forge_abi.ForgeState.prototype.getProtocolsList = function() {
  return /** @type{!Array<!proto.forge_abi.CoreProtocol>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.forge_abi.CoreProtocol,
    12
  ));
};

/**
 * @param {!Array<!proto.forge_abi.CoreProtocol>} value
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.setProtocolsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};

/**
 * @param {!proto.forge_abi.CoreProtocol=} opt_value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.CoreProtocol}
 */
proto.forge_abi.ForgeState.prototype.addProtocols = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.forge_abi.CoreProtocol, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearProtocolsList = function() {
  return this.setProtocolsList([]);
};

/**
 * map<string, uint32> gas = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.forge_abi.ForgeState.prototype.getGasMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (jspb.Message.getMapField(this, 13, opt_noLazyCreate, null));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearGasMap = function() {
  this.getGasMap().clear();
  return this;
};

/**
 * optional UpgradeInfo upgrade_info = 14;
 * @return {?proto.forge_abi.UpgradeInfo}
 */
proto.forge_abi.ForgeState.prototype.getUpgradeInfo = function() {
  return /** @type{?proto.forge_abi.UpgradeInfo} */ (jspb.Message.getWrapperField(this, type_pb.UpgradeInfo, 14));
};

/**
 * @param {?proto.forge_abi.UpgradeInfo|undefined} value
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.setUpgradeInfo = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearUpgradeInfo = function() {
  return this.setUpgradeInfo(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ForgeState.prototype.hasUpgradeInfo = function() {
  return jspb.Message.getField(this, 14) != null;
};

/**
 * map<string, AccountConfig> account_config = 16;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.forge_abi.AccountConfig>}
 */
proto.forge_abi.ForgeState.prototype.getAccountConfigMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.forge_abi.AccountConfig>} */ (jspb.Message.getMapField(
    this,
    16,
    opt_noLazyCreate,
    proto.forge_abi.AccountConfig
  ));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearAccountConfigMap = function() {
  this.getAccountConfigMap().clear();
  return this;
};

/**
 * optional TokenSwapConfig token_swap_config = 17;
 * @return {?proto.forge_abi.TokenSwapConfig}
 */
proto.forge_abi.ForgeState.prototype.getTokenSwapConfig = function() {
  return /** @type{?proto.forge_abi.TokenSwapConfig} */ (jspb.Message.getWrapperField(
    this,
    type_pb.TokenSwapConfig,
    17
  ));
};

/**
 * @param {?proto.forge_abi.TokenSwapConfig|undefined} value
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.setTokenSwapConfig = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearTokenSwapConfig = function() {
  return this.setTokenSwapConfig(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ForgeState.prototype.hasTokenSwapConfig = function() {
  return jspb.Message.getField(this, 17) != null;
};

/**
 * optional google.protobuf.Any data = 2047;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.ForgeState.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    2047
  ));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ForgeState} returns this
 */
proto.forge_abi.ForgeState.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ForgeState.prototype.hasData = function() {
  return jspb.Message.getField(this, 2047) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.RootState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.RootState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.RootState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.RootState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        account: msg.getAccount(),
        asset: msg.getAsset(),
        receipt: msg.getReceipt(),
        protocol: msg.getProtocol(),
        governance: msg.getGovernance(),
        custom: msg.getCustom(),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.RootState}
 */
proto.forge_abi.RootState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.RootState();
  return proto.forge_abi.RootState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.RootState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.RootState}
 */
proto.forge_abi.RootState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setAccount(value);
        break;
      case 3:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setAsset(value);
        break;
      case 4:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setReceipt(value);
        break;
      case 5:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setProtocol(value);
        break;
      case 6:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setGovernance(value);
        break;
      case 7:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setCustom(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.RootState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.RootState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.RootState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.RootState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getAccount_asU8();
  if (f.length > 0) {
    writer.writeBytes(2, f);
  }
  f = message.getAsset_asU8();
  if (f.length > 0) {
    writer.writeBytes(3, f);
  }
  f = message.getReceipt_asU8();
  if (f.length > 0) {
    writer.writeBytes(4, f);
  }
  f = message.getProtocol_asU8();
  if (f.length > 0) {
    writer.writeBytes(5, f);
  }
  f = message.getGovernance_asU8();
  if (f.length > 0) {
    writer.writeBytes(6, f);
  }
  f = message.getCustom_asU8();
  if (f.length > 0) {
    writer.writeBytes(7, f);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.RootState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.RootState} returns this
 */
proto.forge_abi.RootState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional bytes account = 2;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.RootState.prototype.getAccount = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * optional bytes account = 2;
 * This is a type-conversion wrapper around `getAccount()`
 * @return {string}
 */
proto.forge_abi.RootState.prototype.getAccount_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getAccount()));
};

/**
 * optional bytes account = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAccount()`
 * @return {!Uint8Array}
 */
proto.forge_abi.RootState.prototype.getAccount_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getAccount()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.RootState} returns this
 */
proto.forge_abi.RootState.prototype.setAccount = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};

/**
 * optional bytes asset = 3;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.RootState.prototype.getAsset = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * optional bytes asset = 3;
 * This is a type-conversion wrapper around `getAsset()`
 * @return {string}
 */
proto.forge_abi.RootState.prototype.getAsset_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getAsset()));
};

/**
 * optional bytes asset = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAsset()`
 * @return {!Uint8Array}
 */
proto.forge_abi.RootState.prototype.getAsset_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getAsset()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.RootState} returns this
 */
proto.forge_abi.RootState.prototype.setAsset = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};

/**
 * optional bytes receipt = 4;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.RootState.prototype.getReceipt = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * optional bytes receipt = 4;
 * This is a type-conversion wrapper around `getReceipt()`
 * @return {string}
 */
proto.forge_abi.RootState.prototype.getReceipt_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getReceipt()));
};

/**
 * optional bytes receipt = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReceipt()`
 * @return {!Uint8Array}
 */
proto.forge_abi.RootState.prototype.getReceipt_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getReceipt()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.RootState} returns this
 */
proto.forge_abi.RootState.prototype.setReceipt = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};

/**
 * optional bytes protocol = 5;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.RootState.prototype.getProtocol = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * optional bytes protocol = 5;
 * This is a type-conversion wrapper around `getProtocol()`
 * @return {string}
 */
proto.forge_abi.RootState.prototype.getProtocol_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getProtocol()));
};

/**
 * optional bytes protocol = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProtocol()`
 * @return {!Uint8Array}
 */
proto.forge_abi.RootState.prototype.getProtocol_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getProtocol()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.RootState} returns this
 */
proto.forge_abi.RootState.prototype.setProtocol = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};

/**
 * optional bytes governance = 6;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.RootState.prototype.getGovernance = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * optional bytes governance = 6;
 * This is a type-conversion wrapper around `getGovernance()`
 * @return {string}
 */
proto.forge_abi.RootState.prototype.getGovernance_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getGovernance()));
};

/**
 * optional bytes governance = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getGovernance()`
 * @return {!Uint8Array}
 */
proto.forge_abi.RootState.prototype.getGovernance_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getGovernance()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.RootState} returns this
 */
proto.forge_abi.RootState.prototype.setGovernance = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};

/**
 * optional bytes custom = 7;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.RootState.prototype.getCustom = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * optional bytes custom = 7;
 * This is a type-conversion wrapper around `getCustom()`
 * @return {string}
 */
proto.forge_abi.RootState.prototype.getCustom_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getCustom()));
};

/**
 * optional bytes custom = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCustom()`
 * @return {!Uint8Array}
 */
proto.forge_abi.RootState.prototype.getCustom_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getCustom()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.RootState} returns this
 */
proto.forge_abi.RootState.prototype.setCustom = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.StakeState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.StakeState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.StakeState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.StakeState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        from: jspb.Message.getFieldWithDefault(msg, 2, ''),
        to: jspb.Message.getFieldWithDefault(msg, 3, ''),
        balance: (f = msg.getBalance()) && type_pb.BigUint.toObject(includeInstance, f),
        message: jspb.Message.getFieldWithDefault(msg, 5, ''),
        context: (f = msg.getContext()) && type_pb.StateContext.toObject(includeInstance, f),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.StakeState}
 */
proto.forge_abi.StakeState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.StakeState();
  return proto.forge_abi.StakeState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.StakeState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.StakeState}
 */
proto.forge_abi.StakeState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setFrom(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 4:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setBalance(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setMessage(value);
        break;
      case 14:
        var value = new type_pb.StateContext();
        reader.readMessage(value, type_pb.StateContext.deserializeBinaryFromReader);
        msg.setContext(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.StakeState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.StakeState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.StakeState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.StakeState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(4, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(14, f, type_pb.StateContext.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.StakeState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.StakeState} returns this
 */
proto.forge_abi.StakeState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string from = 2;
 * @return {string}
 */
proto.forge_abi.StakeState.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.StakeState} returns this
 */
proto.forge_abi.StakeState.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string to = 3;
 * @return {string}
 */
proto.forge_abi.StakeState.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.StakeState} returns this
 */
proto.forge_abi.StakeState.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional BigUint balance = 4;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.StakeState.prototype.getBalance = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 4));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.StakeState} returns this
 */
proto.forge_abi.StakeState.prototype.setBalance = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.StakeState} returns this
 */
proto.forge_abi.StakeState.prototype.clearBalance = function() {
  return this.setBalance(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.StakeState.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional string message = 5;
 * @return {string}
 */
proto.forge_abi.StakeState.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.StakeState} returns this
 */
proto.forge_abi.StakeState.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional StateContext context = 14;
 * @return {?proto.forge_abi.StateContext}
 */
proto.forge_abi.StakeState.prototype.getContext = function() {
  return /** @type{?proto.forge_abi.StateContext} */ (jspb.Message.getWrapperField(this, type_pb.StateContext, 14));
};

/**
 * @param {?proto.forge_abi.StateContext|undefined} value
 * @return {!proto.forge_abi.StakeState} returns this
 */
proto.forge_abi.StakeState.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.StakeState} returns this
 */
proto.forge_abi.StakeState.prototype.clearContext = function() {
  return this.setContext(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.StakeState.prototype.hasContext = function() {
  return jspb.Message.getField(this, 14) != null;
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.StakeState.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.StakeState} returns this
 */
proto.forge_abi.StakeState.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.StakeState} returns this
 */
proto.forge_abi.StakeState.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.StakeState.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.StatisticsState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.StatisticsState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.StatisticsState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.StatisticsState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        numBlocks: jspb.Message.getFieldWithDefault(msg, 2, 0),
        numTxs: jspb.Message.getFieldWithDefault(msg, 3, 0),
        numStakes: (f = msg.getNumStakes()) && type_pb.BigUint.toObject(includeInstance, f),
        numValidators: jspb.Message.getFieldWithDefault(msg, 5, 0),
        txStatistics: (f = msg.getTxStatistics()) && type_pb.TxStatistics.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.StatisticsState}
 */
proto.forge_abi.StatisticsState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.StatisticsState();
  return proto.forge_abi.StatisticsState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.StatisticsState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.StatisticsState}
 */
proto.forge_abi.StatisticsState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumBlocks(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumTxs(value);
        break;
      case 4:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setNumStakes(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setNumValidators(value);
        break;
      case 6:
        var value = new type_pb.TxStatistics();
        reader.readMessage(value, type_pb.TxStatistics.deserializeBinaryFromReader);
        msg.setTxStatistics(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.StatisticsState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.StatisticsState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.StatisticsState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.StatisticsState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getNumBlocks();
  if (f !== 0) {
    writer.writeUint64(2, f);
  }
  f = message.getNumTxs();
  if (f !== 0) {
    writer.writeUint64(3, f);
  }
  f = message.getNumStakes();
  if (f != null) {
    writer.writeMessage(4, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getNumValidators();
  if (f !== 0) {
    writer.writeUint32(5, f);
  }
  f = message.getTxStatistics();
  if (f != null) {
    writer.writeMessage(6, f, type_pb.TxStatistics.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.StatisticsState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.StatisticsState} returns this
 */
proto.forge_abi.StatisticsState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional uint64 num_blocks = 2;
 * @return {number}
 */
proto.forge_abi.StatisticsState.prototype.getNumBlocks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.StatisticsState} returns this
 */
proto.forge_abi.StatisticsState.prototype.setNumBlocks = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional uint64 num_txs = 3;
 * @return {number}
 */
proto.forge_abi.StatisticsState.prototype.getNumTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.StatisticsState} returns this
 */
proto.forge_abi.StatisticsState.prototype.setNumTxs = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional BigUint num_stakes = 4;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.StatisticsState.prototype.getNumStakes = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 4));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.StatisticsState} returns this
 */
proto.forge_abi.StatisticsState.prototype.setNumStakes = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.StatisticsState} returns this
 */
proto.forge_abi.StatisticsState.prototype.clearNumStakes = function() {
  return this.setNumStakes(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.StatisticsState.prototype.hasNumStakes = function() {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional uint32 num_validators = 5;
 * @return {number}
 */
proto.forge_abi.StatisticsState.prototype.getNumValidators = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.StatisticsState} returns this
 */
proto.forge_abi.StatisticsState.prototype.setNumValidators = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional TxStatistics tx_statistics = 6;
 * @return {?proto.forge_abi.TxStatistics}
 */
proto.forge_abi.StatisticsState.prototype.getTxStatistics = function() {
  return /** @type{?proto.forge_abi.TxStatistics} */ (jspb.Message.getWrapperField(this, type_pb.TxStatistics, 6));
};

/**
 * @param {?proto.forge_abi.TxStatistics|undefined} value
 * @return {!proto.forge_abi.StatisticsState} returns this
 */
proto.forge_abi.StatisticsState.prototype.setTxStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.StatisticsState} returns this
 */
proto.forge_abi.StatisticsState.prototype.clearTxStatistics = function() {
  return this.setTxStatistics(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.StatisticsState.prototype.hasTxStatistics = function() {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.BlacklistState.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.BlacklistState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.BlacklistState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.BlacklistState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.BlacklistState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        addressList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.BlacklistState}
 */
proto.forge_abi.BlacklistState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.BlacklistState();
  return proto.forge_abi.BlacklistState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.BlacklistState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.BlacklistState}
 */
proto.forge_abi.BlacklistState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.addAddress(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.BlacklistState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.BlacklistState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.BlacklistState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.BlacklistState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressList();
  if (f.length > 0) {
    writer.writeRepeatedString(1, f);
  }
};

/**
 * repeated string address = 1;
 * @return {!Array<string>}
 */
proto.forge_abi.BlacklistState.prototype.getAddressList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.BlacklistState} returns this
 */
proto.forge_abi.BlacklistState.prototype.setAddressList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.BlacklistState} returns this
 */
proto.forge_abi.BlacklistState.prototype.addAddress = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.BlacklistState} returns this
 */
proto.forge_abi.BlacklistState.prototype.clearAddressList = function() {
  return this.setAddressList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.ProtocolState.repeatedFields_ = [12, 13];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ProtocolState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ProtocolState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ProtocolState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ProtocolState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        itx: (f = msg.getItx()) && tx_pb.DeployProtocolTx.toObject(includeInstance, f),
        rootHash: msg.getRootHash(),
        status: jspb.Message.getFieldWithDefault(msg, 4, 0),
        migratedToList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
        migratedFromList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
        context: (f = msg.getContext()) && type_pb.StateContext.toObject(includeInstance, f),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ProtocolState}
 */
proto.forge_abi.ProtocolState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ProtocolState();
  return proto.forge_abi.ProtocolState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ProtocolState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ProtocolState}
 */
proto.forge_abi.ProtocolState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = new tx_pb.DeployProtocolTx();
        reader.readMessage(value, tx_pb.DeployProtocolTx.deserializeBinaryFromReader);
        msg.setItx(value);
        break;
      case 3:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setRootHash(value);
        break;
      case 4:
        var value = /** @type {!proto.forge_abi.ProtocolStatus} */ (reader.readEnum());
        msg.setStatus(value);
        break;
      case 12:
        var value = /** @type {string} */ (reader.readString());
        msg.addMigratedTo(value);
        break;
      case 13:
        var value = /** @type {string} */ (reader.readString());
        msg.addMigratedFrom(value);
        break;
      case 14:
        var value = new type_pb.StateContext();
        reader.readMessage(value, type_pb.StateContext.deserializeBinaryFromReader);
        msg.setContext(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ProtocolState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ProtocolState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ProtocolState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ProtocolState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getItx();
  if (f != null) {
    writer.writeMessage(2, f, tx_pb.DeployProtocolTx.serializeBinaryToWriter);
  }
  f = message.getRootHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(3, f);
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(4, f);
  }
  f = message.getMigratedToList();
  if (f.length > 0) {
    writer.writeRepeatedString(12, f);
  }
  f = message.getMigratedFromList();
  if (f.length > 0) {
    writer.writeRepeatedString(13, f);
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(14, f, type_pb.StateContext.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.ProtocolState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional DeployProtocolTx itx = 2;
 * @return {?proto.forge_abi.DeployProtocolTx}
 */
proto.forge_abi.ProtocolState.prototype.getItx = function() {
  return /** @type{?proto.forge_abi.DeployProtocolTx} */ (jspb.Message.getWrapperField(
    this,
    tx_pb.DeployProtocolTx,
    2
  ));
};

/**
 * @param {?proto.forge_abi.DeployProtocolTx|undefined} value
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.setItx = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.clearItx = function() {
  return this.setItx(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ProtocolState.prototype.hasItx = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional bytes root_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.ProtocolState.prototype.getRootHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * optional bytes root_hash = 3;
 * This is a type-conversion wrapper around `getRootHash()`
 * @return {string}
 */
proto.forge_abi.ProtocolState.prototype.getRootHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getRootHash()));
};

/**
 * optional bytes root_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRootHash()`
 * @return {!Uint8Array}
 */
proto.forge_abi.ProtocolState.prototype.getRootHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getRootHash()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.setRootHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};

/**
 * optional ProtocolStatus status = 4;
 * @return {!proto.forge_abi.ProtocolStatus}
 */
proto.forge_abi.ProtocolState.prototype.getStatus = function() {
  return /** @type {!proto.forge_abi.ProtocolStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {!proto.forge_abi.ProtocolStatus} value
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};

/**
 * repeated string migrated_to = 12;
 * @return {!Array<string>}
 */
proto.forge_abi.ProtocolState.prototype.getMigratedToList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.setMigratedToList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.addMigratedTo = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.clearMigratedToList = function() {
  return this.setMigratedToList([]);
};

/**
 * repeated string migrated_from = 13;
 * @return {!Array<string>}
 */
proto.forge_abi.ProtocolState.prototype.getMigratedFromList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.setMigratedFromList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.addMigratedFrom = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.clearMigratedFromList = function() {
  return this.setMigratedFromList([]);
};

/**
 * optional StateContext context = 14;
 * @return {?proto.forge_abi.StateContext}
 */
proto.forge_abi.ProtocolState.prototype.getContext = function() {
  return /** @type{?proto.forge_abi.StateContext} */ (jspb.Message.getWrapperField(this, type_pb.StateContext, 14));
};

/**
 * @param {?proto.forge_abi.StateContext|undefined} value
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.clearContext = function() {
  return this.setContext(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ProtocolState.prototype.hasContext = function() {
  return jspb.Message.getField(this, 14) != null;
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.ProtocolState.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ProtocolState} returns this
 */
proto.forge_abi.ProtocolState.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ProtocolState.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.SwapState.repeatedFields_ = [7];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.SwapState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.SwapState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.SwapState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.SwapState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        hash: jspb.Message.getFieldWithDefault(msg, 1, ''),
        address: jspb.Message.getFieldWithDefault(msg, 2, ''),
        hashkey: msg.getHashkey(),
        sender: jspb.Message.getFieldWithDefault(msg, 4, ''),
        receiver: jspb.Message.getFieldWithDefault(msg, 5, ''),
        value: (f = msg.getValue()) && type_pb.BigUint.toObject(includeInstance, f),
        assetsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
        locktime: jspb.Message.getFieldWithDefault(msg, 8, 0),
        hashlock: msg.getHashlock(),
        context: (f = msg.getContext()) && type_pb.StateContext.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.SwapState}
 */
proto.forge_abi.SwapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.SwapState();
  return proto.forge_abi.SwapState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.SwapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.SwapState}
 */
proto.forge_abi.SwapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setHash(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 3:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setHashkey(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setSender(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setReceiver(value);
        break;
      case 6:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setValue(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.addAssets(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLocktime(value);
        break;
      case 9:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setHashlock(value);
        break;
      case 10:
        var value = new type_pb.StateContext();
        reader.readMessage(value, type_pb.StateContext.deserializeBinaryFromReader);
        msg.setContext(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.SwapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.SwapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.SwapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.SwapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getHashkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(3, f);
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(6, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(7, f);
  }
  f = message.getLocktime();
  if (f !== 0) {
    writer.writeUint32(8, f);
  }
  f = message.getHashlock_asU8();
  if (f.length > 0) {
    writer.writeBytes(9, f);
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(10, f, type_pb.StateContext.serializeBinaryToWriter);
  }
};

/**
 * optional string hash = 1;
 * @return {string}
 */
proto.forge_abi.SwapState.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string address = 2;
 * @return {string}
 */
proto.forge_abi.SwapState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional bytes hashkey = 3;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.SwapState.prototype.getHashkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * optional bytes hashkey = 3;
 * This is a type-conversion wrapper around `getHashkey()`
 * @return {string}
 */
proto.forge_abi.SwapState.prototype.getHashkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getHashkey()));
};

/**
 * optional bytes hashkey = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashkey()`
 * @return {!Uint8Array}
 */
proto.forge_abi.SwapState.prototype.getHashkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getHashkey()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.setHashkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};

/**
 * optional string sender = 4;
 * @return {string}
 */
proto.forge_abi.SwapState.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string receiver = 5;
 * @return {string}
 */
proto.forge_abi.SwapState.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional BigUint value = 6;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.SwapState.prototype.getValue = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 6));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.clearValue = function() {
  return this.setValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.SwapState.prototype.hasValue = function() {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * repeated string assets = 7;
 * @return {!Array<string>}
 */
proto.forge_abi.SwapState.prototype.getAssetsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.setAssetsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.addAssets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.clearAssetsList = function() {
  return this.setAssetsList([]);
};

/**
 * optional uint32 locktime = 8;
 * @return {number}
 */
proto.forge_abi.SwapState.prototype.getLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.setLocktime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};

/**
 * optional bytes hashlock = 9;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.SwapState.prototype.getHashlock = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * optional bytes hashlock = 9;
 * This is a type-conversion wrapper around `getHashlock()`
 * @return {string}
 */
proto.forge_abi.SwapState.prototype.getHashlock_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getHashlock()));
};

/**
 * optional bytes hashlock = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashlock()`
 * @return {!Uint8Array}
 */
proto.forge_abi.SwapState.prototype.getHashlock_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getHashlock()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.setHashlock = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};

/**
 * optional StateContext context = 10;
 * @return {?proto.forge_abi.StateContext}
 */
proto.forge_abi.SwapState.prototype.getContext = function() {
  return /** @type{?proto.forge_abi.StateContext} */ (jspb.Message.getWrapperField(this, type_pb.StateContext, 10));
};

/**
 * @param {?proto.forge_abi.StateContext|undefined} value
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.SwapState} returns this
 */
proto.forge_abi.SwapState.prototype.clearContext = function() {
  return this.setContext(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.SwapState.prototype.hasContext = function() {
  return jspb.Message.getField(this, 10) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.SwapStatistics.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.SwapStatistics.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.SwapStatistics} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.SwapStatistics.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        lockedValueOut: (f = msg.getLockedValueOut()) && type_pb.BigUint.toObject(includeInstance, f),
        lockedValueIn: (f = msg.getLockedValueIn()) && type_pb.BigUint.toObject(includeInstance, f),
        lockedAssetsOut: jspb.Message.getFieldWithDefault(msg, 4, 0),
        lockedAssetsIn: jspb.Message.getFieldWithDefault(msg, 5, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.SwapStatistics}
 */
proto.forge_abi.SwapStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.SwapStatistics();
  return proto.forge_abi.SwapStatistics.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.SwapStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.SwapStatistics}
 */
proto.forge_abi.SwapStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setLockedValueOut(value);
        break;
      case 3:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setLockedValueIn(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLockedAssetsOut(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLockedAssetsIn(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.SwapStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.SwapStatistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.SwapStatistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.SwapStatistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getLockedValueOut();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getLockedValueIn();
  if (f != null) {
    writer.writeMessage(3, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getLockedAssetsOut();
  if (f !== 0) {
    writer.writeUint32(4, f);
  }
  f = message.getLockedAssetsIn();
  if (f !== 0) {
    writer.writeUint32(5, f);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.SwapStatistics.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.SwapStatistics} returns this
 */
proto.forge_abi.SwapStatistics.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional BigUint locked_value_out = 2;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.SwapStatistics.prototype.getLockedValueOut = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 2));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.SwapStatistics} returns this
 */
proto.forge_abi.SwapStatistics.prototype.setLockedValueOut = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.SwapStatistics} returns this
 */
proto.forge_abi.SwapStatistics.prototype.clearLockedValueOut = function() {
  return this.setLockedValueOut(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.SwapStatistics.prototype.hasLockedValueOut = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional BigUint locked_value_in = 3;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.SwapStatistics.prototype.getLockedValueIn = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 3));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.SwapStatistics} returns this
 */
proto.forge_abi.SwapStatistics.prototype.setLockedValueIn = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.SwapStatistics} returns this
 */
proto.forge_abi.SwapStatistics.prototype.clearLockedValueIn = function() {
  return this.setLockedValueIn(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.SwapStatistics.prototype.hasLockedValueIn = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional uint32 locked_assets_out = 4;
 * @return {number}
 */
proto.forge_abi.SwapStatistics.prototype.getLockedAssetsOut = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.SwapStatistics} returns this
 */
proto.forge_abi.SwapStatistics.prototype.setLockedAssetsOut = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};

/**
 * optional uint32 locked_assets_in = 5;
 * @return {number}
 */
proto.forge_abi.SwapStatistics.prototype.getLockedAssetsIn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.SwapStatistics} returns this
 */
proto.forge_abi.SwapStatistics.prototype.setLockedAssetsIn = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DelegateOpState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DelegateOpState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DelegateOpState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DelegateOpState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        rule: jspb.Message.getFieldWithDefault(msg, 1, ''),
        numTxs: jspb.Message.getFieldWithDefault(msg, 2, 0),
        numTxsDelta: jspb.Message.getFieldWithDefault(msg, 3, 0),
        balance: (f = msg.getBalance()) && type_pb.BigUint.toObject(includeInstance, f),
        balanceDelta: (f = msg.getBalanceDelta()) && type_pb.BigUint.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DelegateOpState}
 */
proto.forge_abi.DelegateOpState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DelegateOpState();
  return proto.forge_abi.DelegateOpState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DelegateOpState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DelegateOpState}
 */
proto.forge_abi.DelegateOpState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRule(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumTxs(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumTxsDelta(value);
        break;
      case 4:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setBalance(value);
        break;
      case 5:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setBalanceDelta(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DelegateOpState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DelegateOpState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DelegateOpState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DelegateOpState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRule();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getNumTxs();
  if (f !== 0) {
    writer.writeUint64(2, f);
  }
  f = message.getNumTxsDelta();
  if (f !== 0) {
    writer.writeUint64(3, f);
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(4, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getBalanceDelta();
  if (f != null) {
    writer.writeMessage(5, f, type_pb.BigUint.serializeBinaryToWriter);
  }
};

/**
 * optional string rule = 1;
 * @return {string}
 */
proto.forge_abi.DelegateOpState.prototype.getRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DelegateOpState} returns this
 */
proto.forge_abi.DelegateOpState.prototype.setRule = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional uint64 num_txs = 2;
 * @return {number}
 */
proto.forge_abi.DelegateOpState.prototype.getNumTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.DelegateOpState} returns this
 */
proto.forge_abi.DelegateOpState.prototype.setNumTxs = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional uint64 num_txs_delta = 3;
 * @return {number}
 */
proto.forge_abi.DelegateOpState.prototype.getNumTxsDelta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.DelegateOpState} returns this
 */
proto.forge_abi.DelegateOpState.prototype.setNumTxsDelta = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional BigUint balance = 4;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.DelegateOpState.prototype.getBalance = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 4));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.DelegateOpState} returns this
 */
proto.forge_abi.DelegateOpState.prototype.setBalance = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.DelegateOpState} returns this
 */
proto.forge_abi.DelegateOpState.prototype.clearBalance = function() {
  return this.setBalance(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.DelegateOpState.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional BigUint balance_delta = 5;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.DelegateOpState.prototype.getBalanceDelta = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 5));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.DelegateOpState} returns this
 */
proto.forge_abi.DelegateOpState.prototype.setBalanceDelta = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.DelegateOpState} returns this
 */
proto.forge_abi.DelegateOpState.prototype.clearBalanceDelta = function() {
  return this.setBalanceDelta(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.DelegateOpState.prototype.hasBalanceDelta = function() {
  return jspb.Message.getField(this, 5) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DelegateState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DelegateState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DelegateState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DelegateState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        opsMap: (f = msg.getOpsMap()) ? f.toObject(includeInstance, proto.forge_abi.DelegateOpState.toObject) : [],
        context: (f = msg.getContext()) && type_pb.StateContext.toObject(includeInstance, f),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DelegateState}
 */
proto.forge_abi.DelegateState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DelegateState();
  return proto.forge_abi.DelegateState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DelegateState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DelegateState}
 */
proto.forge_abi.DelegateState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = msg.getOpsMap();
        reader.readMessage(value, function(message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readMessage,
            proto.forge_abi.DelegateOpState.deserializeBinaryFromReader,
            '',
            new proto.forge_abi.DelegateOpState()
          );
        });
        break;
      case 14:
        var value = new type_pb.StateContext();
        reader.readMessage(value, type_pb.StateContext.deserializeBinaryFromReader);
        msg.setContext(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DelegateState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DelegateState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DelegateState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DelegateState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getOpsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      2,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeMessage,
      proto.forge_abi.DelegateOpState.serializeBinaryToWriter
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(14, f, type_pb.StateContext.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.DelegateState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DelegateState} returns this
 */
proto.forge_abi.DelegateState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * map<string, DelegateOpState> ops = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.forge_abi.DelegateOpState>}
 */
proto.forge_abi.DelegateState.prototype.getOpsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.forge_abi.DelegateOpState>} */ (jspb.Message.getMapField(
    this,
    2,
    opt_noLazyCreate,
    proto.forge_abi.DelegateOpState
  ));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.forge_abi.DelegateState} returns this
 */
proto.forge_abi.DelegateState.prototype.clearOpsMap = function() {
  this.getOpsMap().clear();
  return this;
};

/**
 * optional StateContext context = 14;
 * @return {?proto.forge_abi.StateContext}
 */
proto.forge_abi.DelegateState.prototype.getContext = function() {
  return /** @type{?proto.forge_abi.StateContext} */ (jspb.Message.getWrapperField(this, type_pb.StateContext, 14));
};

/**
 * @param {?proto.forge_abi.StateContext|undefined} value
 * @return {!proto.forge_abi.DelegateState} returns this
 */
proto.forge_abi.DelegateState.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.DelegateState} returns this
 */
proto.forge_abi.DelegateState.prototype.clearContext = function() {
  return this.setContext(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.DelegateState.prototype.hasContext = function() {
  return jspb.Message.getField(this, 14) != null;
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.DelegateState.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.DelegateState} returns this
 */
proto.forge_abi.DelegateState.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.DelegateState} returns this
 */
proto.forge_abi.DelegateState.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.DelegateState.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.AssetFactoryState.repeatedFields_ = [5];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AssetFactoryState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AssetFactoryState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AssetFactoryState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AssetFactoryState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        description: jspb.Message.getFieldWithDefault(msg, 1, ''),
        limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
        price: (f = msg.getPrice()) && type_pb.BigUint.toObject(includeInstance, f),
        template: jspb.Message.getFieldWithDefault(msg, 4, ''),
        allowedSpecArgsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
        assetName: jspb.Message.getFieldWithDefault(msg, 6, ''),
        attributes: (f = msg.getAttributes()) && tx_pb.AssetAttributes.toObject(includeInstance, f),
        numCreated: jspb.Message.getFieldWithDefault(msg, 8, 0),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AssetFactoryState}
 */
proto.forge_abi.AssetFactoryState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AssetFactoryState();
  return proto.forge_abi.AssetFactoryState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AssetFactoryState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AssetFactoryState}
 */
proto.forge_abi.AssetFactoryState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLimit(value);
        break;
      case 3:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setPrice(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setTemplate(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.addAllowedSpecArgs(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setAssetName(value);
        break;
      case 7:
        var value = new tx_pb.AssetAttributes();
        reader.readMessage(value, tx_pb.AssetAttributes.deserializeBinaryFromReader);
        msg.setAttributes(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setNumCreated(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AssetFactoryState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AssetFactoryState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AssetFactoryState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetFactoryState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(2, f);
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(3, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getTemplate();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getAllowedSpecArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(5, f);
  }
  f = message.getAssetName();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(7, f, tx_pb.AssetAttributes.serializeBinaryToWriter);
  }
  f = message.getNumCreated();
  if (f !== 0) {
    writer.writeUint32(8, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.forge_abi.AssetFactoryState.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.forge_abi.AssetFactoryState.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional BigUint price = 3;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.AssetFactoryState.prototype.getPrice = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 3));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactoryState.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional string template = 4;
 * @return {string}
 */
proto.forge_abi.AssetFactoryState.prototype.getTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.setTemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * repeated string allowed_spec_args = 5;
 * @return {!Array<string>}
 */
proto.forge_abi.AssetFactoryState.prototype.getAllowedSpecArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.setAllowedSpecArgsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.addAllowedSpecArgs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.clearAllowedSpecArgsList = function() {
  return this.setAllowedSpecArgsList([]);
};

/**
 * optional string asset_name = 6;
 * @return {string}
 */
proto.forge_abi.AssetFactoryState.prototype.getAssetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.setAssetName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional AssetAttributes attributes = 7;
 * @return {?proto.forge_abi.AssetAttributes}
 */
proto.forge_abi.AssetFactoryState.prototype.getAttributes = function() {
  return /** @type{?proto.forge_abi.AssetAttributes} */ (jspb.Message.getWrapperField(this, tx_pb.AssetAttributes, 7));
};

/**
 * @param {?proto.forge_abi.AssetAttributes|undefined} value
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.setAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactoryState.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 7) != null;
};

/**
 * optional uint32 num_created = 8;
 * @return {number}
 */
proto.forge_abi.AssetFactoryState.prototype.getNumCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.setNumCreated = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.AssetFactoryState.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AssetFactoryState} returns this
 */
proto.forge_abi.AssetFactoryState.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactoryState.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

goog.object.extend(exports, proto.forge_abi);
