// source: trace_type.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var type_pb = require('./type_pb.js');
goog.object.extend(proto, type_pb);
var enum_pb = require('./enum_pb.js');
goog.object.extend(proto, enum_pb);
goog.exportSymbol('proto.forge_abi.AbciServerStatus', null, global);
goog.exportSymbol('proto.forge_abi.AddressFilter', null, global);
goog.exportSymbol('proto.forge_abi.ConsensusStatus', null, global);
goog.exportSymbol('proto.forge_abi.Direction', null, global);
goog.exportSymbol('proto.forge_abi.DiskSpaceStatus', null, global);
goog.exportSymbol('proto.forge_abi.ForgeStatus', null, global);
goog.exportSymbol('proto.forge_abi.HealthStatus', null, global);
goog.exportSymbol('proto.forge_abi.IndexedAccountState', null, global);
goog.exportSymbol('proto.forge_abi.IndexedAssetState', null, global);
goog.exportSymbol('proto.forge_abi.IndexedBlock', null, global);
goog.exportSymbol('proto.forge_abi.IndexedStakeState', null, global);
goog.exportSymbol('proto.forge_abi.IndexedTransaction', null, global);
goog.exportSymbol('proto.forge_abi.NetworkStatus', null, global);
goog.exportSymbol('proto.forge_abi.PageInfo', null, global);
goog.exportSymbol('proto.forge_abi.PageInput', null, global);
goog.exportSymbol('proto.forge_abi.PageOrder', null, global);
goog.exportSymbol('proto.forge_abi.RangeFilter', null, global);
goog.exportSymbol('proto.forge_abi.StorageStatus', null, global);
goog.exportSymbol('proto.forge_abi.TimeFilter', null, global);
goog.exportSymbol('proto.forge_abi.TypeFilter', null, global);
goog.exportSymbol('proto.forge_abi.Validity', null, global);
goog.exportSymbol('proto.forge_abi.ValidityFilter', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.PageOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.PageOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.PageOrder.displayName = 'proto.forge_abi.PageOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.PageInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.PageInput.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.PageInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.PageInput.displayName = 'proto.forge_abi.PageInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.TypeFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.TypeFilter.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.TypeFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.TypeFilter.displayName = 'proto.forge_abi.TypeFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.TimeFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.TimeFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.TimeFilter.displayName = 'proto.forge_abi.TimeFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AddressFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.AddressFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.AddressFilter.displayName = 'proto.forge_abi.AddressFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.PageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.PageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.PageInfo.displayName = 'proto.forge_abi.PageInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.IndexedTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.IndexedTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.IndexedTransaction.displayName = 'proto.forge_abi.IndexedTransaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.IndexedAccountState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.IndexedAccountState.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.IndexedAccountState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.IndexedAccountState.displayName = 'proto.forge_abi.IndexedAccountState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.IndexedAssetState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.IndexedAssetState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.IndexedAssetState.displayName = 'proto.forge_abi.IndexedAssetState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.IndexedStakeState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.IndexedStakeState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.IndexedStakeState.displayName = 'proto.forge_abi.IndexedStakeState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.IndexedBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.IndexedBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.IndexedBlock.displayName = 'proto.forge_abi.IndexedBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.HealthStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.HealthStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.HealthStatus.displayName = 'proto.forge_abi.HealthStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ConsensusStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.ConsensusStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.ConsensusStatus.displayName = 'proto.forge_abi.ConsensusStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.NetworkStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.NetworkStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.NetworkStatus.displayName = 'proto.forge_abi.NetworkStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.StorageStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.StorageStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.StorageStatus.displayName = 'proto.forge_abi.StorageStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DiskSpaceStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.DiskSpaceStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.DiskSpaceStatus.displayName = 'proto.forge_abi.DiskSpaceStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ForgeStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.ForgeStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.ForgeStatus.displayName = 'proto.forge_abi.ForgeStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AbciServerStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.AbciServerStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.AbciServerStatus.displayName = 'proto.forge_abi.AbciServerStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ValidityFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.ValidityFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.ValidityFilter.displayName = 'proto.forge_abi.ValidityFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.RangeFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.RangeFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.RangeFilter.displayName = 'proto.forge_abi.RangeFilter';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.PageOrder.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.PageOrder.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.PageOrder} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.PageOrder.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        field: jspb.Message.getFieldWithDefault(msg, 1, ''),
        type: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.PageOrder}
 */
proto.forge_abi.PageOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.PageOrder();
  return proto.forge_abi.PageOrder.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.PageOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.PageOrder}
 */
proto.forge_abi.PageOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setField(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setType(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.PageOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.PageOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.PageOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.PageOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string field = 1;
 * @return {string}
 */
proto.forge_abi.PageOrder.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.PageOrder} returns this
 */
proto.forge_abi.PageOrder.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string type = 2;
 * @return {string}
 */
proto.forge_abi.PageOrder.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.PageOrder} returns this
 */
proto.forge_abi.PageOrder.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.PageInput.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.PageInput.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.PageInput.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.PageInput} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.PageInput.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        cursor: jspb.Message.getFieldWithDefault(msg, 1, ''),
        size: jspb.Message.getFieldWithDefault(msg, 2, 0),
        orderList: jspb.Message.toObjectList(msg.getOrderList(), proto.forge_abi.PageOrder.toObject, includeInstance),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.PageInput}
 */
proto.forge_abi.PageInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.PageInput();
  return proto.forge_abi.PageInput.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.PageInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.PageInput}
 */
proto.forge_abi.PageInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setCursor(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSize(value);
        break;
      case 3:
        var value = new proto.forge_abi.PageOrder();
        reader.readMessage(value, proto.forge_abi.PageOrder.deserializeBinaryFromReader);
        msg.addOrder(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.PageInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.PageInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.PageInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.PageInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(2, f);
  }
  f = message.getOrderList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(3, f, proto.forge_abi.PageOrder.serializeBinaryToWriter);
  }
};

/**
 * optional string cursor = 1;
 * @return {string}
 */
proto.forge_abi.PageInput.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.PageInput} returns this
 */
proto.forge_abi.PageInput.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.forge_abi.PageInput.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.PageInput} returns this
 */
proto.forge_abi.PageInput.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * repeated PageOrder order = 3;
 * @return {!Array<!proto.forge_abi.PageOrder>}
 */
proto.forge_abi.PageInput.prototype.getOrderList = function() {
  return /** @type{!Array<!proto.forge_abi.PageOrder>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.forge_abi.PageOrder,
    3
  ));
};

/**
 * @param {!Array<!proto.forge_abi.PageOrder>} value
 * @return {!proto.forge_abi.PageInput} returns this
 */
proto.forge_abi.PageInput.prototype.setOrderList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.forge_abi.PageOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.PageOrder}
 */
proto.forge_abi.PageInput.prototype.addOrder = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.forge_abi.PageOrder, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.PageInput} returns this
 */
proto.forge_abi.PageInput.prototype.clearOrderList = function() {
  return this.setOrderList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.TypeFilter.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.TypeFilter.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.TypeFilter.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.TypeFilter} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.TypeFilter.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        typesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.TypeFilter}
 */
proto.forge_abi.TypeFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.TypeFilter();
  return proto.forge_abi.TypeFilter.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.TypeFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.TypeFilter}
 */
proto.forge_abi.TypeFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.addTypes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.TypeFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.TypeFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.TypeFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.TypeFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(1, f);
  }
};

/**
 * repeated string types = 1;
 * @return {!Array<string>}
 */
proto.forge_abi.TypeFilter.prototype.getTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.TypeFilter} returns this
 */
proto.forge_abi.TypeFilter.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.TypeFilter} returns this
 */
proto.forge_abi.TypeFilter.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.TypeFilter} returns this
 */
proto.forge_abi.TypeFilter.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.TimeFilter.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.TimeFilter.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.TimeFilter} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.TimeFilter.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        startDateTime: jspb.Message.getFieldWithDefault(msg, 1, ''),
        endDateTime: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.TimeFilter}
 */
proto.forge_abi.TimeFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.TimeFilter();
  return proto.forge_abi.TimeFilter.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.TimeFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.TimeFilter}
 */
proto.forge_abi.TimeFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setStartDateTime(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setEndDateTime(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.TimeFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.TimeFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.TimeFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.TimeFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartDateTime();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getEndDateTime();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string start_date_time = 1;
 * @return {string}
 */
proto.forge_abi.TimeFilter.prototype.getStartDateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.TimeFilter} returns this
 */
proto.forge_abi.TimeFilter.prototype.setStartDateTime = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string end_date_time = 2;
 * @return {string}
 */
proto.forge_abi.TimeFilter.prototype.getEndDateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.TimeFilter} returns this
 */
proto.forge_abi.TimeFilter.prototype.setEndDateTime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AddressFilter.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AddressFilter.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AddressFilter} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AddressFilter.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        sender: jspb.Message.getFieldWithDefault(msg, 1, ''),
        receiver: jspb.Message.getFieldWithDefault(msg, 2, ''),
        direction: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AddressFilter}
 */
proto.forge_abi.AddressFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AddressFilter();
  return proto.forge_abi.AddressFilter.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AddressFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AddressFilter}
 */
proto.forge_abi.AddressFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setSender(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setReceiver(value);
        break;
      case 3:
        var value = /** @type {!proto.forge_abi.Direction} */ (reader.readEnum());
        msg.setDirection(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AddressFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AddressFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AddressFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AddressFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(3, f);
  }
};

/**
 * optional string sender = 1;
 * @return {string}
 */
proto.forge_abi.AddressFilter.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AddressFilter} returns this
 */
proto.forge_abi.AddressFilter.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string receiver = 2;
 * @return {string}
 */
proto.forge_abi.AddressFilter.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AddressFilter} returns this
 */
proto.forge_abi.AddressFilter.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional Direction direction = 3;
 * @return {!proto.forge_abi.Direction}
 */
proto.forge_abi.AddressFilter.prototype.getDirection = function() {
  return /** @type {!proto.forge_abi.Direction} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {!proto.forge_abi.Direction} value
 * @return {!proto.forge_abi.AddressFilter} returns this
 */
proto.forge_abi.AddressFilter.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.PageInfo.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.PageInfo.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.PageInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.PageInfo.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        cursor: jspb.Message.getFieldWithDefault(msg, 1, ''),
        next: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
        total: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.PageInfo}
 */
proto.forge_abi.PageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.PageInfo();
  return proto.forge_abi.PageInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.PageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.PageInfo}
 */
proto.forge_abi.PageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setCursor(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setNext(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setTotal(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.PageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.PageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.PageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.PageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getNext();
  if (f) {
    writer.writeBool(2, f);
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint32(3, f);
  }
};

/**
 * optional string cursor = 1;
 * @return {string}
 */
proto.forge_abi.PageInfo.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.PageInfo} returns this
 */
proto.forge_abi.PageInfo.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional bool next = 2;
 * @return {boolean}
 */
proto.forge_abi.PageInfo.prototype.getNext = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.PageInfo} returns this
 */
proto.forge_abi.PageInfo.prototype.setNext = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};

/**
 * optional uint32 total = 3;
 * @return {number}
 */
proto.forge_abi.PageInfo.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.PageInfo} returns this
 */
proto.forge_abi.PageInfo.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.IndexedTransaction.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.IndexedTransaction.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.IndexedTransaction} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.IndexedTransaction.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        hash: jspb.Message.getFieldWithDefault(msg, 1, ''),
        sender: jspb.Message.getFieldWithDefault(msg, 2, ''),
        receiver: jspb.Message.getFieldWithDefault(msg, 3, ''),
        time: jspb.Message.getFieldWithDefault(msg, 4, ''),
        type: jspb.Message.getFieldWithDefault(msg, 5, ''),
        tx: (f = msg.getTx()) && type_pb.Transaction.toObject(includeInstance, f),
        valid: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
        code: jspb.Message.getFieldWithDefault(msg, 21, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.IndexedTransaction}
 */
proto.forge_abi.IndexedTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.IndexedTransaction();
  return proto.forge_abi.IndexedTransaction.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.IndexedTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.IndexedTransaction}
 */
proto.forge_abi.IndexedTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setHash(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setSender(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setReceiver(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setTime(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setType(value);
        break;
      case 6:
        var value = new type_pb.Transaction();
        reader.readMessage(value, type_pb.Transaction.deserializeBinaryFromReader);
        msg.setTx(value);
        break;
      case 20:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setValid(value);
        break;
      case 21:
        var value = /** @type {!proto.forge_abi.StatusCode} */ (reader.readEnum());
        msg.setCode(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.IndexedTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.IndexedTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.IndexedTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.IndexedTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getTx();
  if (f != null) {
    writer.writeMessage(6, f, type_pb.Transaction.serializeBinaryToWriter);
  }
  f = message.getValid();
  if (f) {
    writer.writeBool(20, f);
  }
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(21, f);
  }
};

/**
 * optional string hash = 1;
 * @return {string}
 */
proto.forge_abi.IndexedTransaction.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedTransaction} returns this
 */
proto.forge_abi.IndexedTransaction.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string sender = 2;
 * @return {string}
 */
proto.forge_abi.IndexedTransaction.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedTransaction} returns this
 */
proto.forge_abi.IndexedTransaction.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string receiver = 3;
 * @return {string}
 */
proto.forge_abi.IndexedTransaction.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedTransaction} returns this
 */
proto.forge_abi.IndexedTransaction.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string time = 4;
 * @return {string}
 */
proto.forge_abi.IndexedTransaction.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedTransaction} returns this
 */
proto.forge_abi.IndexedTransaction.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string type = 5;
 * @return {string}
 */
proto.forge_abi.IndexedTransaction.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedTransaction} returns this
 */
proto.forge_abi.IndexedTransaction.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional Transaction tx = 6;
 * @return {?proto.forge_abi.Transaction}
 */
proto.forge_abi.IndexedTransaction.prototype.getTx = function() {
  return /** @type{?proto.forge_abi.Transaction} */ (jspb.Message.getWrapperField(this, type_pb.Transaction, 6));
};

/**
 * @param {?proto.forge_abi.Transaction|undefined} value
 * @return {!proto.forge_abi.IndexedTransaction} returns this
 */
proto.forge_abi.IndexedTransaction.prototype.setTx = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.IndexedTransaction} returns this
 */
proto.forge_abi.IndexedTransaction.prototype.clearTx = function() {
  return this.setTx(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedTransaction.prototype.hasTx = function() {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * optional bool valid = 20;
 * @return {boolean}
 */
proto.forge_abi.IndexedTransaction.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.IndexedTransaction} returns this
 */
proto.forge_abi.IndexedTransaction.prototype.setValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};

/**
 * optional StatusCode code = 21;
 * @return {!proto.forge_abi.StatusCode}
 */
proto.forge_abi.IndexedTransaction.prototype.getCode = function() {
  return /** @type {!proto.forge_abi.StatusCode} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};

/**
 * @param {!proto.forge_abi.StatusCode} value
 * @return {!proto.forge_abi.IndexedTransaction} returns this
 */
proto.forge_abi.IndexedTransaction.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 21, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.IndexedAccountState.repeatedFields_ = [14];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.IndexedAccountState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.IndexedAccountState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.IndexedAccountState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.IndexedAccountState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        balance: (f = msg.getBalance()) && type_pb.BigUint.toObject(includeInstance, f),
        numAssets: jspb.Message.getFieldWithDefault(msg, 3, 0),
        numTxs: jspb.Message.getFieldWithDefault(msg, 4, 0),
        nonce: jspb.Message.getFieldWithDefault(msg, 5, 0),
        genesisTime: jspb.Message.getFieldWithDefault(msg, 6, ''),
        renaissanceTime: jspb.Message.getFieldWithDefault(msg, 7, ''),
        moniker: jspb.Message.getFieldWithDefault(msg, 8, ''),
        migratedFrom: jspb.Message.getFieldWithDefault(msg, 9, ''),
        migratedTo: jspb.Message.getFieldWithDefault(msg, 10, ''),
        totalReceivedStakes: (f = msg.getTotalReceivedStakes()) && type_pb.BigUint.toObject(includeInstance, f),
        totalStakes: (f = msg.getTotalStakes()) && type_pb.BigUint.toObject(includeInstance, f),
        totalUnstakes: (f = msg.getTotalUnstakes()) && type_pb.BigUint.toObject(includeInstance, f),
        recentNumTxsList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.IndexedAccountState}
 */
proto.forge_abi.IndexedAccountState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.IndexedAccountState();
  return proto.forge_abi.IndexedAccountState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.IndexedAccountState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.IndexedAccountState}
 */
proto.forge_abi.IndexedAccountState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setBalance(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumAssets(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumTxs(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNonce(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setGenesisTime(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setRenaissanceTime(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setMigratedFrom(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setMigratedTo(value);
        break;
      case 11:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setTotalReceivedStakes(value);
        break;
      case 12:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setTotalStakes(value);
        break;
      case 13:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setTotalUnstakes(value);
        break;
      case 14:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
        msg.setRecentNumTxsList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.IndexedAccountState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.IndexedAccountState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.IndexedAccountState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.IndexedAccountState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getNumAssets();
  if (f !== 0) {
    writer.writeUint64(3, f);
  }
  f = message.getNumTxs();
  if (f !== 0) {
    writer.writeUint64(4, f);
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(5, f);
  }
  f = message.getGenesisTime();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getRenaissanceTime();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getMigratedFrom();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getMigratedTo();
  if (f.length > 0) {
    writer.writeString(10, f);
  }
  f = message.getTotalReceivedStakes();
  if (f != null) {
    writer.writeMessage(11, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getTotalStakes();
  if (f != null) {
    writer.writeMessage(12, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getTotalUnstakes();
  if (f != null) {
    writer.writeMessage(13, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getRecentNumTxsList();
  if (f.length > 0) {
    writer.writePackedUint64(14, f);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional BigUint balance = 2;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.IndexedAccountState.prototype.getBalance = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 2));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setBalance = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.clearBalance = function() {
  return this.setBalance(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedAccountState.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional uint64 num_assets = 3;
 * @return {number}
 */
proto.forge_abi.IndexedAccountState.prototype.getNumAssets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setNumAssets = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional uint64 num_txs = 4;
 * @return {number}
 */
proto.forge_abi.IndexedAccountState.prototype.getNumTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setNumTxs = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};

/**
 * optional uint64 nonce = 5;
 * @return {number}
 */
proto.forge_abi.IndexedAccountState.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional string genesis_time = 6;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getGenesisTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setGenesisTime = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string renaissance_time = 7;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getRenaissanceTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setRenaissanceTime = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string moniker = 8;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string migrated_from = 9;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getMigratedFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setMigratedFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional string migrated_to = 10;
 * @return {string}
 */
proto.forge_abi.IndexedAccountState.prototype.getMigratedTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setMigratedTo = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};

/**
 * optional BigUint total_received_stakes = 11;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.IndexedAccountState.prototype.getTotalReceivedStakes = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 11));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setTotalReceivedStakes = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.clearTotalReceivedStakes = function() {
  return this.setTotalReceivedStakes(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedAccountState.prototype.hasTotalReceivedStakes = function() {
  return jspb.Message.getField(this, 11) != null;
};

/**
 * optional BigUint total_stakes = 12;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.IndexedAccountState.prototype.getTotalStakes = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 12));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setTotalStakes = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.clearTotalStakes = function() {
  return this.setTotalStakes(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedAccountState.prototype.hasTotalStakes = function() {
  return jspb.Message.getField(this, 12) != null;
};

/**
 * optional BigUint total_unstakes = 13;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.IndexedAccountState.prototype.getTotalUnstakes = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 13));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setTotalUnstakes = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.clearTotalUnstakes = function() {
  return this.setTotalUnstakes(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedAccountState.prototype.hasTotalUnstakes = function() {
  return jspb.Message.getField(this, 13) != null;
};

/**
 * repeated uint64 recent_num_txs = 14;
 * @return {!Array<number>}
 */
proto.forge_abi.IndexedAccountState.prototype.getRecentNumTxsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};

/**
 * @param {!Array<number>} value
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.setRecentNumTxsList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.addRecentNumTxs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.IndexedAccountState} returns this
 */
proto.forge_abi.IndexedAccountState.prototype.clearRecentNumTxsList = function() {
  return this.setRecentNumTxsList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.IndexedAssetState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.IndexedAssetState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.IndexedAssetState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.IndexedAssetState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        owner: jspb.Message.getFieldWithDefault(msg, 2, ''),
        genesisTime: jspb.Message.getFieldWithDefault(msg, 3, ''),
        renaissanceTime: jspb.Message.getFieldWithDefault(msg, 4, ''),
        moniker: jspb.Message.getFieldWithDefault(msg, 5, ''),
        readonly: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
        consumedTime: jspb.Message.getFieldWithDefault(msg, 7, ''),
        issuer: jspb.Message.getFieldWithDefault(msg, 8, ''),
        parent: jspb.Message.getFieldWithDefault(msg, 9, ''),
        transferrable: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
        ttl: jspb.Message.getFieldWithDefault(msg, 11, 0),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.IndexedAssetState}
 */
proto.forge_abi.IndexedAssetState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.IndexedAssetState();
  return proto.forge_abi.IndexedAssetState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.IndexedAssetState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.IndexedAssetState}
 */
proto.forge_abi.IndexedAssetState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setOwner(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setGenesisTime(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setRenaissanceTime(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setReadonly(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setConsumedTime(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setIssuer(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setParent(value);
        break;
      case 10:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setTransferrable(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setTtl(value);
        break;
      case 50:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.IndexedAssetState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.IndexedAssetState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.IndexedAssetState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.IndexedAssetState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getGenesisTime();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getRenaissanceTime();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getReadonly();
  if (f) {
    writer.writeBool(6, f);
  }
  f = message.getConsumedTime();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getTransferrable();
  if (f) {
    writer.writeBool(10, f);
  }
  f = message.getTtl();
  if (f !== 0) {
    writer.writeUint64(11, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(50, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string owner = 2;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string genesis_time = 3;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getGenesisTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setGenesisTime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string renaissance_time = 4;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getRenaissanceTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setRenaissanceTime = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string moniker = 5;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional bool readonly = 6;
 * @return {boolean}
 */
proto.forge_abi.IndexedAssetState.prototype.getReadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setReadonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};

/**
 * optional string consumed_time = 7;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getConsumedTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setConsumedTime = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string issuer = 8;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string parent = 9;
 * @return {string}
 */
proto.forge_abi.IndexedAssetState.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional bool transferrable = 10;
 * @return {boolean}
 */
proto.forge_abi.IndexedAssetState.prototype.getTransferrable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setTransferrable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};

/**
 * optional uint64 ttl = 11;
 * @return {number}
 */
proto.forge_abi.IndexedAssetState.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setTtl = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};

/**
 * optional google.protobuf.Any data = 50;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.IndexedAssetState.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 50));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 50, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.IndexedAssetState} returns this
 */
proto.forge_abi.IndexedAssetState.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedAssetState.prototype.hasData = function() {
  return jspb.Message.getField(this, 50) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.IndexedStakeState.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.IndexedStakeState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.IndexedStakeState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.IndexedStakeState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        balance: (f = msg.getBalance()) && type_pb.BigUint.toObject(includeInstance, f),
        sender: jspb.Message.getFieldWithDefault(msg, 3, ''),
        receiver: jspb.Message.getFieldWithDefault(msg, 4, ''),
        genesisTime: jspb.Message.getFieldWithDefault(msg, 5, ''),
        renaissanceTime: jspb.Message.getFieldWithDefault(msg, 6, ''),
        message: jspb.Message.getFieldWithDefault(msg, 7, ''),
        type: jspb.Message.getFieldWithDefault(msg, 8, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.IndexedStakeState}
 */
proto.forge_abi.IndexedStakeState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.IndexedStakeState();
  return proto.forge_abi.IndexedStakeState.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.IndexedStakeState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.IndexedStakeState}
 */
proto.forge_abi.IndexedStakeState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setBalance(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setSender(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setReceiver(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setGenesisTime(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setRenaissanceTime(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setMessage(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setType(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.IndexedStakeState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.IndexedStakeState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.IndexedStakeState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.IndexedStakeState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getGenesisTime();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getRenaissanceTime();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(8, f);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedStakeState} returns this
 */
proto.forge_abi.IndexedStakeState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional BigUint balance = 2;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.IndexedStakeState.prototype.getBalance = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 2));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.IndexedStakeState} returns this
 */
proto.forge_abi.IndexedStakeState.prototype.setBalance = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.IndexedStakeState} returns this
 */
proto.forge_abi.IndexedStakeState.prototype.clearBalance = function() {
  return this.setBalance(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.IndexedStakeState.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional string sender = 3;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedStakeState} returns this
 */
proto.forge_abi.IndexedStakeState.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string receiver = 4;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedStakeState} returns this
 */
proto.forge_abi.IndexedStakeState.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string genesis_time = 5;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getGenesisTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedStakeState} returns this
 */
proto.forge_abi.IndexedStakeState.prototype.setGenesisTime = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string renaissance_time = 6;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getRenaissanceTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedStakeState} returns this
 */
proto.forge_abi.IndexedStakeState.prototype.setRenaissanceTime = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string message = 7;
 * @return {string}
 */
proto.forge_abi.IndexedStakeState.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedStakeState} returns this
 */
proto.forge_abi.IndexedStakeState.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional uint32 type = 8;
 * @return {number}
 */
proto.forge_abi.IndexedStakeState.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.IndexedStakeState} returns this
 */
proto.forge_abi.IndexedStakeState.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.IndexedBlock.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.IndexedBlock.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.IndexedBlock} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.IndexedBlock.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        height: jspb.Message.getFieldWithDefault(msg, 1, 0),
        time: jspb.Message.getFieldWithDefault(msg, 2, ''),
        proposer: jspb.Message.getFieldWithDefault(msg, 3, ''),
        numTxs: jspb.Message.getFieldWithDefault(msg, 4, 0),
        numInvalidTxs: jspb.Message.getFieldWithDefault(msg, 5, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.IndexedBlock}
 */
proto.forge_abi.IndexedBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.IndexedBlock();
  return proto.forge_abi.IndexedBlock.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.IndexedBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.IndexedBlock}
 */
proto.forge_abi.IndexedBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setHeight(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTime(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setProposer(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumTxs(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setNumInvalidTxs(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.IndexedBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.IndexedBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.IndexedBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.IndexedBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(1, f);
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getProposer();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getNumTxs();
  if (f !== 0) {
    writer.writeUint64(4, f);
  }
  f = message.getNumInvalidTxs();
  if (f !== 0) {
    writer.writeUint64(5, f);
  }
};

/**
 * optional uint64 height = 1;
 * @return {number}
 */
proto.forge_abi.IndexedBlock.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.IndexedBlock} returns this
 */
proto.forge_abi.IndexedBlock.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string time = 2;
 * @return {string}
 */
proto.forge_abi.IndexedBlock.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedBlock} returns this
 */
proto.forge_abi.IndexedBlock.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string proposer = 3;
 * @return {string}
 */
proto.forge_abi.IndexedBlock.prototype.getProposer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.IndexedBlock} returns this
 */
proto.forge_abi.IndexedBlock.prototype.setProposer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional uint64 num_txs = 4;
 * @return {number}
 */
proto.forge_abi.IndexedBlock.prototype.getNumTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.IndexedBlock} returns this
 */
proto.forge_abi.IndexedBlock.prototype.setNumTxs = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};

/**
 * optional uint64 num_invalid_txs = 5;
 * @return {number}
 */
proto.forge_abi.IndexedBlock.prototype.getNumInvalidTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.IndexedBlock} returns this
 */
proto.forge_abi.IndexedBlock.prototype.setNumInvalidTxs = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.HealthStatus.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.HealthStatus.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.HealthStatus} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.HealthStatus.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        consensus: (f = msg.getConsensus()) && proto.forge_abi.ConsensusStatus.toObject(includeInstance, f),
        network: (f = msg.getNetwork()) && proto.forge_abi.NetworkStatus.toObject(includeInstance, f),
        storage: (f = msg.getStorage()) && proto.forge_abi.StorageStatus.toObject(includeInstance, f),
        forge: (f = msg.getForge()) && proto.forge_abi.ForgeStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.HealthStatus}
 */
proto.forge_abi.HealthStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.HealthStatus();
  return proto.forge_abi.HealthStatus.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.HealthStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.HealthStatus}
 */
proto.forge_abi.HealthStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.forge_abi.ConsensusStatus();
        reader.readMessage(value, proto.forge_abi.ConsensusStatus.deserializeBinaryFromReader);
        msg.setConsensus(value);
        break;
      case 2:
        var value = new proto.forge_abi.NetworkStatus();
        reader.readMessage(value, proto.forge_abi.NetworkStatus.deserializeBinaryFromReader);
        msg.setNetwork(value);
        break;
      case 3:
        var value = new proto.forge_abi.StorageStatus();
        reader.readMessage(value, proto.forge_abi.StorageStatus.deserializeBinaryFromReader);
        msg.setStorage(value);
        break;
      case 4:
        var value = new proto.forge_abi.ForgeStatus();
        reader.readMessage(value, proto.forge_abi.ForgeStatus.deserializeBinaryFromReader);
        msg.setForge(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.HealthStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.HealthStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.HealthStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.HealthStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsensus();
  if (f != null) {
    writer.writeMessage(1, f, proto.forge_abi.ConsensusStatus.serializeBinaryToWriter);
  }
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(2, f, proto.forge_abi.NetworkStatus.serializeBinaryToWriter);
  }
  f = message.getStorage();
  if (f != null) {
    writer.writeMessage(3, f, proto.forge_abi.StorageStatus.serializeBinaryToWriter);
  }
  f = message.getForge();
  if (f != null) {
    writer.writeMessage(4, f, proto.forge_abi.ForgeStatus.serializeBinaryToWriter);
  }
};

/**
 * optional ConsensusStatus consensus = 1;
 * @return {?proto.forge_abi.ConsensusStatus}
 */
proto.forge_abi.HealthStatus.prototype.getConsensus = function() {
  return /** @type{?proto.forge_abi.ConsensusStatus} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.ConsensusStatus,
    1
  ));
};

/**
 * @param {?proto.forge_abi.ConsensusStatus|undefined} value
 * @return {!proto.forge_abi.HealthStatus} returns this
 */
proto.forge_abi.HealthStatus.prototype.setConsensus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.HealthStatus} returns this
 */
proto.forge_abi.HealthStatus.prototype.clearConsensus = function() {
  return this.setConsensus(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.HealthStatus.prototype.hasConsensus = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional NetworkStatus network = 2;
 * @return {?proto.forge_abi.NetworkStatus}
 */
proto.forge_abi.HealthStatus.prototype.getNetwork = function() {
  return /** @type{?proto.forge_abi.NetworkStatus} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.NetworkStatus,
    2
  ));
};

/**
 * @param {?proto.forge_abi.NetworkStatus|undefined} value
 * @return {!proto.forge_abi.HealthStatus} returns this
 */
proto.forge_abi.HealthStatus.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.HealthStatus} returns this
 */
proto.forge_abi.HealthStatus.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.HealthStatus.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional StorageStatus storage = 3;
 * @return {?proto.forge_abi.StorageStatus}
 */
proto.forge_abi.HealthStatus.prototype.getStorage = function() {
  return /** @type{?proto.forge_abi.StorageStatus} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.StorageStatus,
    3
  ));
};

/**
 * @param {?proto.forge_abi.StorageStatus|undefined} value
 * @return {!proto.forge_abi.HealthStatus} returns this
 */
proto.forge_abi.HealthStatus.prototype.setStorage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.HealthStatus} returns this
 */
proto.forge_abi.HealthStatus.prototype.clearStorage = function() {
  return this.setStorage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.HealthStatus.prototype.hasStorage = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional ForgeStatus forge = 4;
 * @return {?proto.forge_abi.ForgeStatus}
 */
proto.forge_abi.HealthStatus.prototype.getForge = function() {
  return /** @type{?proto.forge_abi.ForgeStatus} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.ForgeStatus,
    4
  ));
};

/**
 * @param {?proto.forge_abi.ForgeStatus|undefined} value
 * @return {!proto.forge_abi.HealthStatus} returns this
 */
proto.forge_abi.HealthStatus.prototype.setForge = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.HealthStatus} returns this
 */
proto.forge_abi.HealthStatus.prototype.clearForge = function() {
  return this.setForge(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.HealthStatus.prototype.hasForge = function() {
  return jspb.Message.getField(this, 4) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ConsensusStatus.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ConsensusStatus.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ConsensusStatus} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ConsensusStatus.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        health: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        synced: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
        blockHeight: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ConsensusStatus}
 */
proto.forge_abi.ConsensusStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ConsensusStatus();
  return proto.forge_abi.ConsensusStatus.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ConsensusStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ConsensusStatus}
 */
proto.forge_abi.ConsensusStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHealth(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSynced(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setBlockHeight(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ConsensusStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ConsensusStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ConsensusStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ConsensusStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealth();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getSynced();
  if (f) {
    writer.writeBool(2, f);
  }
  f = message.getBlockHeight();
  if (f !== 0) {
    writer.writeUint64(3, f);
  }
};

/**
 * optional bool health = 1;
 * @return {boolean}
 */
proto.forge_abi.ConsensusStatus.prototype.getHealth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.ConsensusStatus} returns this
 */
proto.forge_abi.ConsensusStatus.prototype.setHealth = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional bool synced = 2;
 * @return {boolean}
 */
proto.forge_abi.ConsensusStatus.prototype.getSynced = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.ConsensusStatus} returns this
 */
proto.forge_abi.ConsensusStatus.prototype.setSynced = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};

/**
 * optional uint64 block_height = 3;
 * @return {number}
 */
proto.forge_abi.ConsensusStatus.prototype.getBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.ConsensusStatus} returns this
 */
proto.forge_abi.ConsensusStatus.prototype.setBlockHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.NetworkStatus.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.NetworkStatus.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.NetworkStatus} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.NetworkStatus.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        health: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        numPeers: jspb.Message.getFieldWithDefault(msg, 2, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.NetworkStatus}
 */
proto.forge_abi.NetworkStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.NetworkStatus();
  return proto.forge_abi.NetworkStatus.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.NetworkStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.NetworkStatus}
 */
proto.forge_abi.NetworkStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHealth(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setNumPeers(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.NetworkStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.NetworkStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.NetworkStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.NetworkStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealth();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getNumPeers();
  if (f !== 0) {
    writer.writeUint32(2, f);
  }
};

/**
 * optional bool health = 1;
 * @return {boolean}
 */
proto.forge_abi.NetworkStatus.prototype.getHealth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.NetworkStatus} returns this
 */
proto.forge_abi.NetworkStatus.prototype.setHealth = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional uint32 num_peers = 2;
 * @return {number}
 */
proto.forge_abi.NetworkStatus.prototype.getNumPeers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.NetworkStatus} returns this
 */
proto.forge_abi.NetworkStatus.prototype.setNumPeers = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.StorageStatus.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.StorageStatus.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.StorageStatus} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.StorageStatus.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        health: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        indexerServer: jspb.Message.getFieldWithDefault(msg, 2, ''),
        stateDb: jspb.Message.getFieldWithDefault(msg, 3, ''),
        diskSpace: (f = msg.getDiskSpace()) && proto.forge_abi.DiskSpaceStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.StorageStatus}
 */
proto.forge_abi.StorageStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.StorageStatus();
  return proto.forge_abi.StorageStatus.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.StorageStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.StorageStatus}
 */
proto.forge_abi.StorageStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHealth(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setIndexerServer(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setStateDb(value);
        break;
      case 4:
        var value = new proto.forge_abi.DiskSpaceStatus();
        reader.readMessage(value, proto.forge_abi.DiskSpaceStatus.deserializeBinaryFromReader);
        msg.setDiskSpace(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.StorageStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.StorageStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.StorageStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.StorageStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealth();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getIndexerServer();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getStateDb();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDiskSpace();
  if (f != null) {
    writer.writeMessage(4, f, proto.forge_abi.DiskSpaceStatus.serializeBinaryToWriter);
  }
};

/**
 * optional bool health = 1;
 * @return {boolean}
 */
proto.forge_abi.StorageStatus.prototype.getHealth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.StorageStatus} returns this
 */
proto.forge_abi.StorageStatus.prototype.setHealth = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string indexer_server = 2;
 * @return {string}
 */
proto.forge_abi.StorageStatus.prototype.getIndexerServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.StorageStatus} returns this
 */
proto.forge_abi.StorageStatus.prototype.setIndexerServer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string state_db = 3;
 * @return {string}
 */
proto.forge_abi.StorageStatus.prototype.getStateDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.StorageStatus} returns this
 */
proto.forge_abi.StorageStatus.prototype.setStateDb = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional DiskSpaceStatus disk_space = 4;
 * @return {?proto.forge_abi.DiskSpaceStatus}
 */
proto.forge_abi.StorageStatus.prototype.getDiskSpace = function() {
  return /** @type{?proto.forge_abi.DiskSpaceStatus} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.DiskSpaceStatus,
    4
  ));
};

/**
 * @param {?proto.forge_abi.DiskSpaceStatus|undefined} value
 * @return {!proto.forge_abi.StorageStatus} returns this
 */
proto.forge_abi.StorageStatus.prototype.setDiskSpace = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.StorageStatus} returns this
 */
proto.forge_abi.StorageStatus.prototype.clearDiskSpace = function() {
  return this.setDiskSpace(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.StorageStatus.prototype.hasDiskSpace = function() {
  return jspb.Message.getField(this, 4) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DiskSpaceStatus.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DiskSpaceStatus.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DiskSpaceStatus} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DiskSpaceStatus.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        forgeUsage: jspb.Message.getFieldWithDefault(msg, 1, ''),
        total: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DiskSpaceStatus}
 */
proto.forge_abi.DiskSpaceStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DiskSpaceStatus();
  return proto.forge_abi.DiskSpaceStatus.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DiskSpaceStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DiskSpaceStatus}
 */
proto.forge_abi.DiskSpaceStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setForgeUsage(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTotal(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DiskSpaceStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DiskSpaceStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DiskSpaceStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DiskSpaceStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForgeUsage();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTotal();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string forge_usage = 1;
 * @return {string}
 */
proto.forge_abi.DiskSpaceStatus.prototype.getForgeUsage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DiskSpaceStatus} returns this
 */
proto.forge_abi.DiskSpaceStatus.prototype.setForgeUsage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string total = 2;
 * @return {string}
 */
proto.forge_abi.DiskSpaceStatus.prototype.getTotal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DiskSpaceStatus} returns this
 */
proto.forge_abi.DiskSpaceStatus.prototype.setTotal = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ForgeStatus.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ForgeStatus.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ForgeStatus} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ForgeStatus.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        health: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        abiServer: jspb.Message.getFieldWithDefault(msg, 2, ''),
        forgeWeb: jspb.Message.getFieldWithDefault(msg, 3, ''),
        abciServer: (f = msg.getAbciServer()) && proto.forge_abi.AbciServerStatus.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ForgeStatus}
 */
proto.forge_abi.ForgeStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ForgeStatus();
  return proto.forge_abi.ForgeStatus.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ForgeStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ForgeStatus}
 */
proto.forge_abi.ForgeStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setHealth(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAbiServer(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setForgeWeb(value);
        break;
      case 4:
        var value = new proto.forge_abi.AbciServerStatus();
        reader.readMessage(value, proto.forge_abi.AbciServerStatus.deserializeBinaryFromReader);
        msg.setAbciServer(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ForgeStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ForgeStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ForgeStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ForgeStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealth();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getAbiServer();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getForgeWeb();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getAbciServer();
  if (f != null) {
    writer.writeMessage(4, f, proto.forge_abi.AbciServerStatus.serializeBinaryToWriter);
  }
};

/**
 * optional bool health = 1;
 * @return {boolean}
 */
proto.forge_abi.ForgeStatus.prototype.getHealth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.ForgeStatus} returns this
 */
proto.forge_abi.ForgeStatus.prototype.setHealth = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string abi_server = 2;
 * @return {string}
 */
proto.forge_abi.ForgeStatus.prototype.getAbiServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.ForgeStatus} returns this
 */
proto.forge_abi.ForgeStatus.prototype.setAbiServer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string forge_web = 3;
 * @return {string}
 */
proto.forge_abi.ForgeStatus.prototype.getForgeWeb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.ForgeStatus} returns this
 */
proto.forge_abi.ForgeStatus.prototype.setForgeWeb = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional AbciServerStatus abci_server = 4;
 * @return {?proto.forge_abi.AbciServerStatus}
 */
proto.forge_abi.ForgeStatus.prototype.getAbciServer = function() {
  return /** @type{?proto.forge_abi.AbciServerStatus} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.AbciServerStatus,
    4
  ));
};

/**
 * @param {?proto.forge_abi.AbciServerStatus|undefined} value
 * @return {!proto.forge_abi.ForgeStatus} returns this
 */
proto.forge_abi.ForgeStatus.prototype.setAbciServer = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ForgeStatus} returns this
 */
proto.forge_abi.ForgeStatus.prototype.clearAbciServer = function() {
  return this.setAbciServer(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ForgeStatus.prototype.hasAbciServer = function() {
  return jspb.Message.getField(this, 4) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AbciServerStatus.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AbciServerStatus.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AbciServerStatus} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AbciServerStatus.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        abciConsensus: jspb.Message.getFieldWithDefault(msg, 1, ''),
        abciInfo: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AbciServerStatus}
 */
proto.forge_abi.AbciServerStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AbciServerStatus();
  return proto.forge_abi.AbciServerStatus.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AbciServerStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AbciServerStatus}
 */
proto.forge_abi.AbciServerStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAbciConsensus(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAbciInfo(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AbciServerStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AbciServerStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AbciServerStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AbciServerStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAbciConsensus();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getAbciInfo();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string abci_consensus = 1;
 * @return {string}
 */
proto.forge_abi.AbciServerStatus.prototype.getAbciConsensus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AbciServerStatus} returns this
 */
proto.forge_abi.AbciServerStatus.prototype.setAbciConsensus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string abci_info = 2;
 * @return {string}
 */
proto.forge_abi.AbciServerStatus.prototype.getAbciInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AbciServerStatus} returns this
 */
proto.forge_abi.AbciServerStatus.prototype.setAbciInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ValidityFilter.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ValidityFilter.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ValidityFilter} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ValidityFilter.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        validity: jspb.Message.getFieldWithDefault(msg, 1, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ValidityFilter}
 */
proto.forge_abi.ValidityFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ValidityFilter();
  return proto.forge_abi.ValidityFilter.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ValidityFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ValidityFilter}
 */
proto.forge_abi.ValidityFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.forge_abi.Validity} */ (reader.readEnum());
        msg.setValidity(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ValidityFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ValidityFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ValidityFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ValidityFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidity();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
};

/**
 * optional Validity validity = 1;
 * @return {!proto.forge_abi.Validity}
 */
proto.forge_abi.ValidityFilter.prototype.getValidity = function() {
  return /** @type {!proto.forge_abi.Validity} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {!proto.forge_abi.Validity} value
 * @return {!proto.forge_abi.ValidityFilter} returns this
 */
proto.forge_abi.ValidityFilter.prototype.setValidity = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.RangeFilter.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.RangeFilter.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.RangeFilter} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.RangeFilter.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        from: jspb.Message.getFieldWithDefault(msg, 1, 0),
        to: jspb.Message.getFieldWithDefault(msg, 2, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.RangeFilter}
 */
proto.forge_abi.RangeFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.RangeFilter();
  return proto.forge_abi.RangeFilter.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.RangeFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.RangeFilter}
 */
proto.forge_abi.RangeFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setFrom(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setTo(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.RangeFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.RangeFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.RangeFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.RangeFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f !== 0) {
    writer.writeUint64(1, f);
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeUint64(2, f);
  }
};

/**
 * optional uint64 from = 1;
 * @return {number}
 */
proto.forge_abi.RangeFilter.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.RangeFilter} returns this
 */
proto.forge_abi.RangeFilter.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional uint64 to = 2;
 * @return {number}
 */
proto.forge_abi.RangeFilter.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.RangeFilter} returns this
 */
proto.forge_abi.RangeFilter.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * @enum {number}
 */
proto.forge_abi.Direction = {
  MUTUAL: 0,
  ONE_WAY: 1,
  UNION: 2,
};

/**
 * @enum {number}
 */
proto.forge_abi.Validity = {
  BOTH: 0,
  VALID: 1,
  INVALID: 2,
};

goog.object.extend(exports, proto.forge_abi);
