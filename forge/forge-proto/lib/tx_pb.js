// source: tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var type_pb = require('./type_pb.js');
goog.object.extend(proto, type_pb);
goog.exportSymbol('proto.forge_abi.AccountMigrateTx', null, global);
goog.exportSymbol('proto.forge_abi.AcquireAssetTx', null, global);
goog.exportSymbol('proto.forge_abi.ActivateProtocolTx', null, global);
goog.exportSymbol('proto.forge_abi.ApproveWithdrawTx', null, global);
goog.exportSymbol('proto.forge_abi.AssetAttributes', null, global);
goog.exportSymbol('proto.forge_abi.AssetFactory', null, global);
goog.exportSymbol('proto.forge_abi.AssetSpec', null, global);
goog.exportSymbol('proto.forge_abi.CodeInfo', null, global);
goog.exportSymbol('proto.forge_abi.ConsumeAssetTx', null, global);
goog.exportSymbol('proto.forge_abi.CreateAssetTx', null, global);
goog.exportSymbol('proto.forge_abi.DeactivateProtocolTx', null, global);
goog.exportSymbol('proto.forge_abi.DeclareTx', null, global);
goog.exportSymbol('proto.forge_abi.DelegateOp', null, global);
goog.exportSymbol('proto.forge_abi.DelegateTx', null, global);
goog.exportSymbol('proto.forge_abi.DeployProtocolTx', null, global);
goog.exportSymbol('proto.forge_abi.DepositTokenTx', null, global);
goog.exportSymbol('proto.forge_abi.ExchangeInfo', null, global);
goog.exportSymbol('proto.forge_abi.ExchangeTx', null, global);
goog.exportSymbol('proto.forge_abi.PokeTx', null, global);
goog.exportSymbol('proto.forge_abi.RefuelTx', null, global);
goog.exportSymbol('proto.forge_abi.RetrieveSwapTx', null, global);
goog.exportSymbol('proto.forge_abi.RevokeDelegateTx', null, global);
goog.exportSymbol('proto.forge_abi.RevokeSwapTx', null, global);
goog.exportSymbol('proto.forge_abi.RevokeWithdrawTx', null, global);
goog.exportSymbol('proto.forge_abi.SetupSwapTx', null, global);
goog.exportSymbol('proto.forge_abi.TransferTx', null, global);
goog.exportSymbol('proto.forge_abi.TypeUrls', null, global);
goog.exportSymbol('proto.forge_abi.UpdateAssetTx', null, global);
goog.exportSymbol('proto.forge_abi.UpdateConsensusParamsTx', null, global);
goog.exportSymbol('proto.forge_abi.UpdateValidatorTx', null, global);
goog.exportSymbol('proto.forge_abi.UpgradeNodeTx', null, global);
goog.exportSymbol('proto.forge_abi.WithdrawTokenTx', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.CodeInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.CodeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.CodeInfo.displayName = 'proto.forge_abi.CodeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.TypeUrls = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.TypeUrls, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.TypeUrls.displayName = 'proto.forge_abi.TypeUrls';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DeployProtocolTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.DeployProtocolTx.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.DeployProtocolTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.DeployProtocolTx.displayName = 'proto.forge_abi.DeployProtocolTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AccountMigrateTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.AccountMigrateTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.AccountMigrateTx.displayName = 'proto.forge_abi.AccountMigrateTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DeclareTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.DeclareTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.DeclareTx.displayName = 'proto.forge_abi.DeclareTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DelegateTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.DelegateTx.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.DelegateTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.DelegateTx.displayName = 'proto.forge_abi.DelegateTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DelegateOp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.DelegateOp.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.DelegateOp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.DelegateOp.displayName = 'proto.forge_abi.DelegateOp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.RevokeDelegateTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.RevokeDelegateTx.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.RevokeDelegateTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.RevokeDelegateTx.displayName = 'proto.forge_abi.RevokeDelegateTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AssetSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.AssetSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.AssetSpec.displayName = 'proto.forge_abi.AssetSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AcquireAssetTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.AcquireAssetTx.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.AcquireAssetTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.AcquireAssetTx.displayName = 'proto.forge_abi.AcquireAssetTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ConsumeAssetTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.ConsumeAssetTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.ConsumeAssetTx.displayName = 'proto.forge_abi.ConsumeAssetTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.CreateAssetTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.CreateAssetTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.CreateAssetTx.displayName = 'proto.forge_abi.CreateAssetTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AssetAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.AssetAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.AssetAttributes.displayName = 'proto.forge_abi.AssetAttributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.AssetFactory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.AssetFactory.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.AssetFactory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.AssetFactory.displayName = 'proto.forge_abi.AssetFactory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.UpdateAssetTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.UpdateAssetTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.UpdateAssetTx.displayName = 'proto.forge_abi.UpdateAssetTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.UpdateConsensusParamsTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.UpdateConsensusParamsTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.UpdateConsensusParamsTx.displayName = 'proto.forge_abi.UpdateConsensusParamsTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.UpdateValidatorTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.UpdateValidatorTx.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.UpdateValidatorTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.UpdateValidatorTx.displayName = 'proto.forge_abi.UpdateValidatorTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.UpgradeNodeTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.UpgradeNodeTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.UpgradeNodeTx.displayName = 'proto.forge_abi.UpgradeNodeTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ActivateProtocolTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.ActivateProtocolTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.ActivateProtocolTx.displayName = 'proto.forge_abi.ActivateProtocolTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DeactivateProtocolTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.DeactivateProtocolTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.DeactivateProtocolTx.displayName = 'proto.forge_abi.DeactivateProtocolTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.PokeTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.PokeTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.PokeTx.displayName = 'proto.forge_abi.PokeTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.RefuelTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.RefuelTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.RefuelTx.displayName = 'proto.forge_abi.RefuelTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.RetrieveSwapTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.RetrieveSwapTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.RetrieveSwapTx.displayName = 'proto.forge_abi.RetrieveSwapTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.RevokeSwapTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.RevokeSwapTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.RevokeSwapTx.displayName = 'proto.forge_abi.RevokeSwapTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.SetupSwapTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.SetupSwapTx.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.SetupSwapTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.SetupSwapTx.displayName = 'proto.forge_abi.SetupSwapTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ApproveWithdrawTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.ApproveWithdrawTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.ApproveWithdrawTx.displayName = 'proto.forge_abi.ApproveWithdrawTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.DepositTokenTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.DepositTokenTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.DepositTokenTx.displayName = 'proto.forge_abi.DepositTokenTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.RevokeWithdrawTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.RevokeWithdrawTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.RevokeWithdrawTx.displayName = 'proto.forge_abi.RevokeWithdrawTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.WithdrawTokenTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.WithdrawTokenTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.WithdrawTokenTx.displayName = 'proto.forge_abi.WithdrawTokenTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ExchangeInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.ExchangeInfo.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.ExchangeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.ExchangeInfo.displayName = 'proto.forge_abi.ExchangeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.ExchangeTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.forge_abi.ExchangeTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.ExchangeTx.displayName = 'proto.forge_abi.ExchangeTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.forge_abi.TransferTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.forge_abi.TransferTx.repeatedFields_, null);
};
goog.inherits(proto.forge_abi.TransferTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.forge_abi.TransferTx.displayName = 'proto.forge_abi.TransferTx';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.CodeInfo.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.CodeInfo.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.CodeInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.CodeInfo.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        checksum: msg.getChecksum(),
        binary: msg.getBinary(),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.CodeInfo}
 */
proto.forge_abi.CodeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.CodeInfo();
  return proto.forge_abi.CodeInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.CodeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.CodeInfo}
 */
proto.forge_abi.CodeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setChecksum(value);
        break;
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setBinary(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.CodeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.CodeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.CodeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.CodeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChecksum_asU8();
  if (f.length > 0) {
    writer.writeBytes(1, f);
  }
  f = message.getBinary_asU8();
  if (f.length > 0) {
    writer.writeBytes(2, f);
  }
};

/**
 * optional bytes checksum = 1;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.CodeInfo.prototype.getChecksum = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * optional bytes checksum = 1;
 * This is a type-conversion wrapper around `getChecksum()`
 * @return {string}
 */
proto.forge_abi.CodeInfo.prototype.getChecksum_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getChecksum()));
};

/**
 * optional bytes checksum = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChecksum()`
 * @return {!Uint8Array}
 */
proto.forge_abi.CodeInfo.prototype.getChecksum_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getChecksum()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.CodeInfo} returns this
 */
proto.forge_abi.CodeInfo.prototype.setChecksum = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};

/**
 * optional bytes binary = 2;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.CodeInfo.prototype.getBinary = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * optional bytes binary = 2;
 * This is a type-conversion wrapper around `getBinary()`
 * @return {string}
 */
proto.forge_abi.CodeInfo.prototype.getBinary_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getBinary()));
};

/**
 * optional bytes binary = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBinary()`
 * @return {!Uint8Array}
 */
proto.forge_abi.CodeInfo.prototype.getBinary_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getBinary()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.CodeInfo} returns this
 */
proto.forge_abi.CodeInfo.prototype.setBinary = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.TypeUrls.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.TypeUrls.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.TypeUrls} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.TypeUrls.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        url: jspb.Message.getFieldWithDefault(msg, 1, ''),
        module: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.TypeUrls}
 */
proto.forge_abi.TypeUrls.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.TypeUrls();
  return proto.forge_abi.TypeUrls.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.TypeUrls} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.TypeUrls}
 */
proto.forge_abi.TypeUrls.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUrl(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setModule(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.TypeUrls.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.TypeUrls.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.TypeUrls} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.TypeUrls.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getModule();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string url = 1;
 * @return {string}
 */
proto.forge_abi.TypeUrls.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.TypeUrls} returns this
 */
proto.forge_abi.TypeUrls.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string module = 2;
 * @return {string}
 */
proto.forge_abi.TypeUrls.prototype.getModule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.TypeUrls} returns this
 */
proto.forge_abi.TypeUrls.prototype.setModule = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.DeployProtocolTx.repeatedFields_ = [6, 9, 10, 11];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DeployProtocolTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DeployProtocolTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DeployProtocolTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DeployProtocolTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        version: jspb.Message.getFieldWithDefault(msg, 3, 0),
        namespace: jspb.Message.getFieldWithDefault(msg, 4, ''),
        description: jspb.Message.getFieldWithDefault(msg, 5, ''),
        typeUrlsList: jspb.Message.toObjectList(
          msg.getTypeUrlsList(),
          proto.forge_abi.TypeUrls.toObject,
          includeInstance
        ),
        proto: jspb.Message.getFieldWithDefault(msg, 7, ''),
        pipeline: jspb.Message.getFieldWithDefault(msg, 8, ''),
        sourcesList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
        codeList: jspb.Message.toObjectList(msg.getCodeList(), proto.forge_abi.CodeInfo.toObject, includeInstance),
        tagsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DeployProtocolTx}
 */
proto.forge_abi.DeployProtocolTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DeployProtocolTx();
  return proto.forge_abi.DeployProtocolTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DeployProtocolTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DeployProtocolTx}
 */
proto.forge_abi.DeployProtocolTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setVersion(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setNamespace(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 6:
        var value = new proto.forge_abi.TypeUrls();
        reader.readMessage(value, proto.forge_abi.TypeUrls.deserializeBinaryFromReader);
        msg.addTypeUrls(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setProto(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setPipeline(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.addSources(value);
        break;
      case 10:
        var value = new proto.forge_abi.CodeInfo();
        reader.readMessage(value, proto.forge_abi.CodeInfo.deserializeBinaryFromReader);
        msg.addCode(value);
        break;
      case 11:
        var value = /** @type {string} */ (reader.readString());
        msg.addTags(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DeployProtocolTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DeployProtocolTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DeployProtocolTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DeployProtocolTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(3, f);
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getTypeUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(6, f, proto.forge_abi.TypeUrls.serializeBinaryToWriter);
  }
  f = message.getProto();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getPipeline();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(9, f);
  }
  f = message.getCodeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(10, f, proto.forge_abi.CodeInfo.serializeBinaryToWriter);
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(11, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.DeployProtocolTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.forge_abi.DeployProtocolTx.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional uint32 version = 3;
 * @return {number}
 */
proto.forge_abi.DeployProtocolTx.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional string namespace = 4;
 * @return {string}
 */
proto.forge_abi.DeployProtocolTx.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string description = 5;
 * @return {string}
 */
proto.forge_abi.DeployProtocolTx.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * repeated TypeUrls type_urls = 6;
 * @return {!Array<!proto.forge_abi.TypeUrls>}
 */
proto.forge_abi.DeployProtocolTx.prototype.getTypeUrlsList = function() {
  return /** @type{!Array<!proto.forge_abi.TypeUrls>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.forge_abi.TypeUrls,
    6
  ));
};

/**
 * @param {!Array<!proto.forge_abi.TypeUrls>} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setTypeUrlsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};

/**
 * @param {!proto.forge_abi.TypeUrls=} opt_value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.TypeUrls}
 */
proto.forge_abi.DeployProtocolTx.prototype.addTypeUrls = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.forge_abi.TypeUrls, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.clearTypeUrlsList = function() {
  return this.setTypeUrlsList([]);
};

/**
 * optional string proto = 7;
 * @return {string}
 */
proto.forge_abi.DeployProtocolTx.prototype.getProto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setProto = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string pipeline = 8;
 * @return {string}
 */
proto.forge_abi.DeployProtocolTx.prototype.getPipeline = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setPipeline = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * repeated string sources = 9;
 * @return {!Array<string>}
 */
proto.forge_abi.DeployProtocolTx.prototype.getSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setSourcesList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.addSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};

/**
 * repeated CodeInfo code = 10;
 * @return {!Array<!proto.forge_abi.CodeInfo>}
 */
proto.forge_abi.DeployProtocolTx.prototype.getCodeList = function() {
  return /** @type{!Array<!proto.forge_abi.CodeInfo>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.forge_abi.CodeInfo,
    10
  ));
};

/**
 * @param {!Array<!proto.forge_abi.CodeInfo>} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setCodeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};

/**
 * @param {!proto.forge_abi.CodeInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.CodeInfo}
 */
proto.forge_abi.DeployProtocolTx.prototype.addCode = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.forge_abi.CodeInfo, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.clearCodeList = function() {
  return this.setCodeList([]);
};

/**
 * repeated string tags = 11;
 * @return {!Array<string>}
 */
proto.forge_abi.DeployProtocolTx.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.DeployProtocolTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.DeployProtocolTx} returns this
 */
proto.forge_abi.DeployProtocolTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.DeployProtocolTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AccountMigrateTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AccountMigrateTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AccountMigrateTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AccountMigrateTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        pk: msg.getPk(),
        type: (f = msg.getType()) && type_pb.WalletType.toObject(includeInstance, f),
        address: jspb.Message.getFieldWithDefault(msg, 3, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AccountMigrateTx}
 */
proto.forge_abi.AccountMigrateTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AccountMigrateTx();
  return proto.forge_abi.AccountMigrateTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AccountMigrateTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AccountMigrateTx}
 */
proto.forge_abi.AccountMigrateTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setPk(value);
        break;
      case 2:
        var value = new type_pb.WalletType();
        reader.readMessage(value, type_pb.WalletType.deserializeBinaryFromReader);
        msg.setType(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AccountMigrateTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AccountMigrateTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AccountMigrateTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AccountMigrateTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPk_asU8();
  if (f.length > 0) {
    writer.writeBytes(1, f);
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.WalletType.serializeBinaryToWriter);
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional bytes pk = 1;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.AccountMigrateTx.prototype.getPk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * optional bytes pk = 1;
 * This is a type-conversion wrapper around `getPk()`
 * @return {string}
 */
proto.forge_abi.AccountMigrateTx.prototype.getPk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getPk()));
};

/**
 * optional bytes pk = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPk()`
 * @return {!Uint8Array}
 */
proto.forge_abi.AccountMigrateTx.prototype.getPk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getPk()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.AccountMigrateTx} returns this
 */
proto.forge_abi.AccountMigrateTx.prototype.setPk = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};

/**
 * optional WalletType type = 2;
 * @return {?proto.forge_abi.WalletType}
 */
proto.forge_abi.AccountMigrateTx.prototype.getType = function() {
  return /** @type{?proto.forge_abi.WalletType} */ (jspb.Message.getWrapperField(this, type_pb.WalletType, 2));
};

/**
 * @param {?proto.forge_abi.WalletType|undefined} value
 * @return {!proto.forge_abi.AccountMigrateTx} returns this
 */
proto.forge_abi.AccountMigrateTx.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountMigrateTx} returns this
 */
proto.forge_abi.AccountMigrateTx.prototype.clearType = function() {
  return this.setType(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountMigrateTx.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional string address = 3;
 * @return {string}
 */
proto.forge_abi.AccountMigrateTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AccountMigrateTx} returns this
 */
proto.forge_abi.AccountMigrateTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.AccountMigrateTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.AccountMigrateTx} returns this
 */
proto.forge_abi.AccountMigrateTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AccountMigrateTx} returns this
 */
proto.forge_abi.AccountMigrateTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AccountMigrateTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DeclareTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DeclareTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DeclareTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DeclareTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        moniker: jspb.Message.getFieldWithDefault(msg, 1, ''),
        issuer: jspb.Message.getFieldWithDefault(msg, 2, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DeclareTx}
 */
proto.forge_abi.DeclareTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DeclareTx();
  return proto.forge_abi.DeclareTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DeclareTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DeclareTx}
 */
proto.forge_abi.DeclareTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setIssuer(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DeclareTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DeclareTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DeclareTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DeclareTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string moniker = 1;
 * @return {string}
 */
proto.forge_abi.DeclareTx.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DeclareTx} returns this
 */
proto.forge_abi.DeclareTx.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string issuer = 2;
 * @return {string}
 */
proto.forge_abi.DeclareTx.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DeclareTx} returns this
 */
proto.forge_abi.DeclareTx.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.DeclareTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.DeclareTx} returns this
 */
proto.forge_abi.DeclareTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.DeclareTx} returns this
 */
proto.forge_abi.DeclareTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.DeclareTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.DelegateTx.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DelegateTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DelegateTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DelegateTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DelegateTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        to: jspb.Message.getFieldWithDefault(msg, 2, ''),
        opsList: jspb.Message.toObjectList(msg.getOpsList(), proto.forge_abi.DelegateOp.toObject, includeInstance),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DelegateTx}
 */
proto.forge_abi.DelegateTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DelegateTx();
  return proto.forge_abi.DelegateTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DelegateTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DelegateTx}
 */
proto.forge_abi.DelegateTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 3:
        var value = new proto.forge_abi.DelegateOp();
        reader.readMessage(value, proto.forge_abi.DelegateOp.deserializeBinaryFromReader);
        msg.addOps(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DelegateTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DelegateTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DelegateTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DelegateTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getOpsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(3, f, proto.forge_abi.DelegateOp.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.DelegateTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DelegateTx} returns this
 */
proto.forge_abi.DelegateTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string to = 2;
 * @return {string}
 */
proto.forge_abi.DelegateTx.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DelegateTx} returns this
 */
proto.forge_abi.DelegateTx.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated DelegateOp ops = 3;
 * @return {!Array<!proto.forge_abi.DelegateOp>}
 */
proto.forge_abi.DelegateTx.prototype.getOpsList = function() {
  return /** @type{!Array<!proto.forge_abi.DelegateOp>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.forge_abi.DelegateOp,
    3
  ));
};

/**
 * @param {!Array<!proto.forge_abi.DelegateOp>} value
 * @return {!proto.forge_abi.DelegateTx} returns this
 */
proto.forge_abi.DelegateTx.prototype.setOpsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.forge_abi.DelegateOp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.DelegateOp}
 */
proto.forge_abi.DelegateTx.prototype.addOps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.forge_abi.DelegateOp, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.DelegateTx} returns this
 */
proto.forge_abi.DelegateTx.prototype.clearOpsList = function() {
  return this.setOpsList([]);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.DelegateTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.DelegateTx} returns this
 */
proto.forge_abi.DelegateTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.DelegateTx} returns this
 */
proto.forge_abi.DelegateTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.DelegateTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.DelegateOp.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DelegateOp.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DelegateOp.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DelegateOp} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DelegateOp.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        typeUrl: jspb.Message.getFieldWithDefault(msg, 1, ''),
        rulesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DelegateOp}
 */
proto.forge_abi.DelegateOp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DelegateOp();
  return proto.forge_abi.DelegateOp.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DelegateOp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DelegateOp}
 */
proto.forge_abi.DelegateOp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTypeUrl(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.addRules(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DelegateOp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DelegateOp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DelegateOp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DelegateOp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeUrl();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedString(2, f);
  }
};

/**
 * optional string type_url = 1;
 * @return {string}
 */
proto.forge_abi.DelegateOp.prototype.getTypeUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DelegateOp} returns this
 */
proto.forge_abi.DelegateOp.prototype.setTypeUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated string rules = 2;
 * @return {!Array<string>}
 */
proto.forge_abi.DelegateOp.prototype.getRulesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.DelegateOp} returns this
 */
proto.forge_abi.DelegateOp.prototype.setRulesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.DelegateOp} returns this
 */
proto.forge_abi.DelegateOp.prototype.addRules = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.DelegateOp} returns this
 */
proto.forge_abi.DelegateOp.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.RevokeDelegateTx.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.RevokeDelegateTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.RevokeDelegateTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.RevokeDelegateTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.RevokeDelegateTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        to: jspb.Message.getFieldWithDefault(msg, 2, ''),
        typeUrlsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.RevokeDelegateTx}
 */
proto.forge_abi.RevokeDelegateTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.RevokeDelegateTx();
  return proto.forge_abi.RevokeDelegateTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.RevokeDelegateTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.RevokeDelegateTx}
 */
proto.forge_abi.RevokeDelegateTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.addTypeUrls(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.RevokeDelegateTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.RevokeDelegateTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.RevokeDelegateTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.RevokeDelegateTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getTypeUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(3, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.RevokeDelegateTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.RevokeDelegateTx} returns this
 */
proto.forge_abi.RevokeDelegateTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string to = 2;
 * @return {string}
 */
proto.forge_abi.RevokeDelegateTx.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.RevokeDelegateTx} returns this
 */
proto.forge_abi.RevokeDelegateTx.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated string type_urls = 3;
 * @return {!Array<string>}
 */
proto.forge_abi.RevokeDelegateTx.prototype.getTypeUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.RevokeDelegateTx} returns this
 */
proto.forge_abi.RevokeDelegateTx.prototype.setTypeUrlsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.RevokeDelegateTx} returns this
 */
proto.forge_abi.RevokeDelegateTx.prototype.addTypeUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.RevokeDelegateTx} returns this
 */
proto.forge_abi.RevokeDelegateTx.prototype.clearTypeUrlsList = function() {
  return this.setTypeUrlsList([]);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.RevokeDelegateTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.RevokeDelegateTx} returns this
 */
proto.forge_abi.RevokeDelegateTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.RevokeDelegateTx} returns this
 */
proto.forge_abi.RevokeDelegateTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.RevokeDelegateTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AssetSpec.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AssetSpec.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AssetSpec} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AssetSpec.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        data: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AssetSpec}
 */
proto.forge_abi.AssetSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AssetSpec();
  return proto.forge_abi.AssetSpec.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AssetSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AssetSpec}
 */
proto.forge_abi.AssetSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AssetSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AssetSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AssetSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.AssetSpec.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetSpec} returns this
 */
proto.forge_abi.AssetSpec.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string data = 2;
 * @return {string}
 */
proto.forge_abi.AssetSpec.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetSpec} returns this
 */
proto.forge_abi.AssetSpec.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.AcquireAssetTx.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AcquireAssetTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AcquireAssetTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AcquireAssetTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AcquireAssetTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        to: jspb.Message.getFieldWithDefault(msg, 1, ''),
        specsList: jspb.Message.toObjectList(msg.getSpecsList(), proto.forge_abi.AssetSpec.toObject, includeInstance),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AcquireAssetTx}
 */
proto.forge_abi.AcquireAssetTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AcquireAssetTx();
  return proto.forge_abi.AcquireAssetTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AcquireAssetTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AcquireAssetTx}
 */
proto.forge_abi.AcquireAssetTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 2:
        var value = new proto.forge_abi.AssetSpec();
        reader.readMessage(value, proto.forge_abi.AssetSpec.deserializeBinaryFromReader);
        msg.addSpecs(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AcquireAssetTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AcquireAssetTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AcquireAssetTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AcquireAssetTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSpecsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(2, f, proto.forge_abi.AssetSpec.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string to = 1;
 * @return {string}
 */
proto.forge_abi.AcquireAssetTx.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AcquireAssetTx} returns this
 */
proto.forge_abi.AcquireAssetTx.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated AssetSpec specs = 2;
 * @return {!Array<!proto.forge_abi.AssetSpec>}
 */
proto.forge_abi.AcquireAssetTx.prototype.getSpecsList = function() {
  return /** @type{!Array<!proto.forge_abi.AssetSpec>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.forge_abi.AssetSpec,
    2
  ));
};

/**
 * @param {!Array<!proto.forge_abi.AssetSpec>} value
 * @return {!proto.forge_abi.AcquireAssetTx} returns this
 */
proto.forge_abi.AcquireAssetTx.prototype.setSpecsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.forge_abi.AssetSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.AssetSpec}
 */
proto.forge_abi.AcquireAssetTx.prototype.addSpecs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.forge_abi.AssetSpec, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.AcquireAssetTx} returns this
 */
proto.forge_abi.AcquireAssetTx.prototype.clearSpecsList = function() {
  return this.setSpecsList([]);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.AcquireAssetTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.AcquireAssetTx} returns this
 */
proto.forge_abi.AcquireAssetTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AcquireAssetTx} returns this
 */
proto.forge_abi.AcquireAssetTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AcquireAssetTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ConsumeAssetTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ConsumeAssetTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ConsumeAssetTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ConsumeAssetTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        issuer: jspb.Message.getFieldWithDefault(msg, 1, ''),
        address: jspb.Message.getFieldWithDefault(msg, 2, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ConsumeAssetTx}
 */
proto.forge_abi.ConsumeAssetTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ConsumeAssetTx();
  return proto.forge_abi.ConsumeAssetTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ConsumeAssetTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ConsumeAssetTx}
 */
proto.forge_abi.ConsumeAssetTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setIssuer(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ConsumeAssetTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ConsumeAssetTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ConsumeAssetTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ConsumeAssetTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string issuer = 1;
 * @return {string}
 */
proto.forge_abi.ConsumeAssetTx.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.ConsumeAssetTx} returns this
 */
proto.forge_abi.ConsumeAssetTx.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string address = 2;
 * @return {string}
 */
proto.forge_abi.ConsumeAssetTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.ConsumeAssetTx} returns this
 */
proto.forge_abi.ConsumeAssetTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.ConsumeAssetTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.ConsumeAssetTx} returns this
 */
proto.forge_abi.ConsumeAssetTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ConsumeAssetTx} returns this
 */
proto.forge_abi.ConsumeAssetTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ConsumeAssetTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.CreateAssetTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.CreateAssetTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.CreateAssetTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.CreateAssetTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        moniker: jspb.Message.getFieldWithDefault(msg, 1, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
        readonly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
        transferrable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        ttl: jspb.Message.getFieldWithDefault(msg, 5, 0),
        parent: jspb.Message.getFieldWithDefault(msg, 6, ''),
        address: jspb.Message.getFieldWithDefault(msg, 7, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.CreateAssetTx}
 */
proto.forge_abi.CreateAssetTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.CreateAssetTx();
  return proto.forge_abi.CreateAssetTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.CreateAssetTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.CreateAssetTx}
 */
proto.forge_abi.CreateAssetTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 2:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setReadonly(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setTransferrable(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setTtl(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setParent(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.CreateAssetTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.CreateAssetTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.CreateAssetTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.CreateAssetTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(2, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
  f = message.getReadonly();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getTransferrable();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getTtl();
  if (f !== 0) {
    writer.writeUint32(5, f);
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
};

/**
 * optional string moniker = 1;
 * @return {string}
 */
proto.forge_abi.CreateAssetTx.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.CreateAssetTx} returns this
 */
proto.forge_abi.CreateAssetTx.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional google.protobuf.Any data = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.CreateAssetTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.CreateAssetTx} returns this
 */
proto.forge_abi.CreateAssetTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.CreateAssetTx} returns this
 */
proto.forge_abi.CreateAssetTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.CreateAssetTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional bool readonly = 3;
 * @return {boolean}
 */
proto.forge_abi.CreateAssetTx.prototype.getReadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.CreateAssetTx} returns this
 */
proto.forge_abi.CreateAssetTx.prototype.setReadonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

/**
 * optional bool transferrable = 4;
 * @return {boolean}
 */
proto.forge_abi.CreateAssetTx.prototype.getTransferrable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.CreateAssetTx} returns this
 */
proto.forge_abi.CreateAssetTx.prototype.setTransferrable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional uint32 ttl = 5;
 * @return {number}
 */
proto.forge_abi.CreateAssetTx.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.CreateAssetTx} returns this
 */
proto.forge_abi.CreateAssetTx.prototype.setTtl = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional string parent = 6;
 * @return {string}
 */
proto.forge_abi.CreateAssetTx.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.CreateAssetTx} returns this
 */
proto.forge_abi.CreateAssetTx.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string address = 7;
 * @return {string}
 */
proto.forge_abi.CreateAssetTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.CreateAssetTx} returns this
 */
proto.forge_abi.CreateAssetTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AssetAttributes.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AssetAttributes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AssetAttributes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AssetAttributes.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        transferrable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        ttl: jspb.Message.getFieldWithDefault(msg, 2, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AssetAttributes}
 */
proto.forge_abi.AssetAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AssetAttributes();
  return proto.forge_abi.AssetAttributes.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AssetAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AssetAttributes}
 */
proto.forge_abi.AssetAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setTransferrable(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setTtl(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AssetAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AssetAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AssetAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferrable();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getTtl();
  if (f !== 0) {
    writer.writeUint32(2, f);
  }
};

/**
 * optional bool transferrable = 1;
 * @return {boolean}
 */
proto.forge_abi.AssetAttributes.prototype.getTransferrable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.AssetAttributes} returns this
 */
proto.forge_abi.AssetAttributes.prototype.setTransferrable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional uint32 ttl = 2;
 * @return {number}
 */
proto.forge_abi.AssetAttributes.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.AssetAttributes} returns this
 */
proto.forge_abi.AssetAttributes.prototype.setTtl = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.AssetFactory.repeatedFields_ = [5];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.AssetFactory.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.AssetFactory.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.AssetFactory} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.AssetFactory.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        description: jspb.Message.getFieldWithDefault(msg, 1, ''),
        limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
        price: (f = msg.getPrice()) && type_pb.BigUint.toObject(includeInstance, f),
        template: jspb.Message.getFieldWithDefault(msg, 4, ''),
        allowedSpecArgsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
        assetName: jspb.Message.getFieldWithDefault(msg, 6, ''),
        attributes: (f = msg.getAttributes()) && proto.forge_abi.AssetAttributes.toObject(includeInstance, f),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.AssetFactory}
 */
proto.forge_abi.AssetFactory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.AssetFactory();
  return proto.forge_abi.AssetFactory.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.AssetFactory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.AssetFactory}
 */
proto.forge_abi.AssetFactory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLimit(value);
        break;
      case 3:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setPrice(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setTemplate(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.addAllowedSpecArgs(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setAssetName(value);
        break;
      case 7:
        var value = new proto.forge_abi.AssetAttributes();
        reader.readMessage(value, proto.forge_abi.AssetAttributes.deserializeBinaryFromReader);
        msg.setAttributes(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.AssetFactory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.AssetFactory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.AssetFactory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.AssetFactory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(2, f);
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(3, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getTemplate();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getAllowedSpecArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(5, f);
  }
  f = message.getAssetName();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(7, f, proto.forge_abi.AssetAttributes.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.forge_abi.AssetFactory.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.forge_abi.AssetFactory.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional BigUint price = 3;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.AssetFactory.prototype.getPrice = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 3));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactory.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional string template = 4;
 * @return {string}
 */
proto.forge_abi.AssetFactory.prototype.getTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.setTemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * repeated string allowed_spec_args = 5;
 * @return {!Array<string>}
 */
proto.forge_abi.AssetFactory.prototype.getAllowedSpecArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.setAllowedSpecArgsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.addAllowedSpecArgs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.clearAllowedSpecArgsList = function() {
  return this.setAllowedSpecArgsList([]);
};

/**
 * optional string asset_name = 6;
 * @return {string}
 */
proto.forge_abi.AssetFactory.prototype.getAssetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.setAssetName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional AssetAttributes attributes = 7;
 * @return {?proto.forge_abi.AssetAttributes}
 */
proto.forge_abi.AssetFactory.prototype.getAttributes = function() {
  return /** @type{?proto.forge_abi.AssetAttributes} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.AssetAttributes,
    7
  ));
};

/**
 * @param {?proto.forge_abi.AssetAttributes|undefined} value
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.setAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactory.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 7) != null;
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.AssetFactory.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.AssetFactory} returns this
 */
proto.forge_abi.AssetFactory.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.AssetFactory.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.UpdateAssetTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.UpdateAssetTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.UpdateAssetTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.UpdateAssetTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        moniker: jspb.Message.getFieldWithDefault(msg, 2, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.UpdateAssetTx}
 */
proto.forge_abi.UpdateAssetTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.UpdateAssetTx();
  return proto.forge_abi.UpdateAssetTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.UpdateAssetTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.UpdateAssetTx}
 */
proto.forge_abi.UpdateAssetTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMoniker(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.UpdateAssetTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.UpdateAssetTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.UpdateAssetTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.UpdateAssetTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.UpdateAssetTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.UpdateAssetTx} returns this
 */
proto.forge_abi.UpdateAssetTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string moniker = 2;
 * @return {string}
 */
proto.forge_abi.UpdateAssetTx.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.UpdateAssetTx} returns this
 */
proto.forge_abi.UpdateAssetTx.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.UpdateAssetTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.UpdateAssetTx} returns this
 */
proto.forge_abi.UpdateAssetTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.UpdateAssetTx} returns this
 */
proto.forge_abi.UpdateAssetTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.UpdateAssetTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.UpdateConsensusParamsTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.UpdateConsensusParamsTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.UpdateConsensusParamsTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.UpdateConsensusParamsTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        delegateConfig: (f = msg.getDelegateConfig()) && type_pb.DelegateConfig.toObject(includeInstance, f),
        declareConfig: (f = msg.getDeclareConfig()) && type_pb.DeclareConfig.toObject(includeInstance, f),
        tokenSwapConfig: (f = msg.getTokenSwapConfig()) && type_pb.TokenSwapConfig.toObject(includeInstance, f),
        moderatorConfig: (f = msg.getModeratorConfig()) && type_pb.AccountConfig.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.UpdateConsensusParamsTx}
 */
proto.forge_abi.UpdateConsensusParamsTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.UpdateConsensusParamsTx();
  return proto.forge_abi.UpdateConsensusParamsTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.UpdateConsensusParamsTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.UpdateConsensusParamsTx}
 */
proto.forge_abi.UpdateConsensusParamsTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new type_pb.DelegateConfig();
        reader.readMessage(value, type_pb.DelegateConfig.deserializeBinaryFromReader);
        msg.setDelegateConfig(value);
        break;
      case 2:
        var value = new type_pb.DeclareConfig();
        reader.readMessage(value, type_pb.DeclareConfig.deserializeBinaryFromReader);
        msg.setDeclareConfig(value);
        break;
      case 3:
        var value = new type_pb.TokenSwapConfig();
        reader.readMessage(value, type_pb.TokenSwapConfig.deserializeBinaryFromReader);
        msg.setTokenSwapConfig(value);
        break;
      case 4:
        var value = new type_pb.AccountConfig();
        reader.readMessage(value, type_pb.AccountConfig.deserializeBinaryFromReader);
        msg.setModeratorConfig(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.UpdateConsensusParamsTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.UpdateConsensusParamsTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.UpdateConsensusParamsTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegateConfig();
  if (f != null) {
    writer.writeMessage(1, f, type_pb.DelegateConfig.serializeBinaryToWriter);
  }
  f = message.getDeclareConfig();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.DeclareConfig.serializeBinaryToWriter);
  }
  f = message.getTokenSwapConfig();
  if (f != null) {
    writer.writeMessage(3, f, type_pb.TokenSwapConfig.serializeBinaryToWriter);
  }
  f = message.getModeratorConfig();
  if (f != null) {
    writer.writeMessage(4, f, type_pb.AccountConfig.serializeBinaryToWriter);
  }
};

/**
 * optional DelegateConfig delegate_config = 1;
 * @return {?proto.forge_abi.DelegateConfig}
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.getDelegateConfig = function() {
  return /** @type{?proto.forge_abi.DelegateConfig} */ (jspb.Message.getWrapperField(this, type_pb.DelegateConfig, 1));
};

/**
 * @param {?proto.forge_abi.DelegateConfig|undefined} value
 * @return {!proto.forge_abi.UpdateConsensusParamsTx} returns this
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.setDelegateConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.UpdateConsensusParamsTx} returns this
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.clearDelegateConfig = function() {
  return this.setDelegateConfig(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.hasDelegateConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional DeclareConfig declare_config = 2;
 * @return {?proto.forge_abi.DeclareConfig}
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.getDeclareConfig = function() {
  return /** @type{?proto.forge_abi.DeclareConfig} */ (jspb.Message.getWrapperField(this, type_pb.DeclareConfig, 2));
};

/**
 * @param {?proto.forge_abi.DeclareConfig|undefined} value
 * @return {!proto.forge_abi.UpdateConsensusParamsTx} returns this
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.setDeclareConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.UpdateConsensusParamsTx} returns this
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.clearDeclareConfig = function() {
  return this.setDeclareConfig(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.hasDeclareConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional TokenSwapConfig token_swap_config = 3;
 * @return {?proto.forge_abi.TokenSwapConfig}
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.getTokenSwapConfig = function() {
  return /** @type{?proto.forge_abi.TokenSwapConfig} */ (jspb.Message.getWrapperField(
    this,
    type_pb.TokenSwapConfig,
    3
  ));
};

/**
 * @param {?proto.forge_abi.TokenSwapConfig|undefined} value
 * @return {!proto.forge_abi.UpdateConsensusParamsTx} returns this
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.setTokenSwapConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.UpdateConsensusParamsTx} returns this
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.clearTokenSwapConfig = function() {
  return this.setTokenSwapConfig(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.hasTokenSwapConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional AccountConfig moderator_config = 4;
 * @return {?proto.forge_abi.AccountConfig}
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.getModeratorConfig = function() {
  return /** @type{?proto.forge_abi.AccountConfig} */ (jspb.Message.getWrapperField(this, type_pb.AccountConfig, 4));
};

/**
 * @param {?proto.forge_abi.AccountConfig|undefined} value
 * @return {!proto.forge_abi.UpdateConsensusParamsTx} returns this
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.setModeratorConfig = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.UpdateConsensusParamsTx} returns this
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.clearModeratorConfig = function() {
  return this.setModeratorConfig(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.UpdateConsensusParamsTx.prototype.hasModeratorConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.UpdateValidatorTx.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.UpdateValidatorTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.UpdateValidatorTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.UpdateValidatorTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.UpdateValidatorTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        candidatesList: jspb.Message.toObjectList(msg.getCandidatesList(), type_pb.Validator.toObject, includeInstance),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.UpdateValidatorTx}
 */
proto.forge_abi.UpdateValidatorTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.UpdateValidatorTx();
  return proto.forge_abi.UpdateValidatorTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.UpdateValidatorTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.UpdateValidatorTx}
 */
proto.forge_abi.UpdateValidatorTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new type_pb.Validator();
        reader.readMessage(value, type_pb.Validator.deserializeBinaryFromReader);
        msg.addCandidates(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.UpdateValidatorTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.UpdateValidatorTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.UpdateValidatorTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.UpdateValidatorTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(1, f, type_pb.Validator.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * repeated Validator candidates = 1;
 * @return {!Array<!proto.forge_abi.Validator>}
 */
proto.forge_abi.UpdateValidatorTx.prototype.getCandidatesList = function() {
  return /** @type{!Array<!proto.forge_abi.Validator>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    type_pb.Validator,
    1
  ));
};

/**
 * @param {!Array<!proto.forge_abi.Validator>} value
 * @return {!proto.forge_abi.UpdateValidatorTx} returns this
 */
proto.forge_abi.UpdateValidatorTx.prototype.setCandidatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.forge_abi.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.Validator}
 */
proto.forge_abi.UpdateValidatorTx.prototype.addCandidates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.forge_abi.Validator, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.UpdateValidatorTx} returns this
 */
proto.forge_abi.UpdateValidatorTx.prototype.clearCandidatesList = function() {
  return this.setCandidatesList([]);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.UpdateValidatorTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.UpdateValidatorTx} returns this
 */
proto.forge_abi.UpdateValidatorTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.UpdateValidatorTx} returns this
 */
proto.forge_abi.UpdateValidatorTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.UpdateValidatorTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.UpgradeNodeTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.UpgradeNodeTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.UpgradeNodeTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.UpgradeNodeTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        height: jspb.Message.getFieldWithDefault(msg, 1, 0),
        version: jspb.Message.getFieldWithDefault(msg, 2, ''),
        override: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.UpgradeNodeTx}
 */
proto.forge_abi.UpgradeNodeTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.UpgradeNodeTx();
  return proto.forge_abi.UpgradeNodeTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.UpgradeNodeTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.UpgradeNodeTx}
 */
proto.forge_abi.UpgradeNodeTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setHeight(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setVersion(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setOverride(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.UpgradeNodeTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.UpgradeNodeTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.UpgradeNodeTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.UpgradeNodeTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(1, f);
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getOverride();
  if (f) {
    writer.writeBool(3, f);
  }
};

/**
 * optional uint64 height = 1;
 * @return {number}
 */
proto.forge_abi.UpgradeNodeTx.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.UpgradeNodeTx} returns this
 */
proto.forge_abi.UpgradeNodeTx.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string version = 2;
 * @return {string}
 */
proto.forge_abi.UpgradeNodeTx.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.UpgradeNodeTx} returns this
 */
proto.forge_abi.UpgradeNodeTx.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional bool override = 3;
 * @return {boolean}
 */
proto.forge_abi.UpgradeNodeTx.prototype.getOverride = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};

/**
 * @param {boolean} value
 * @return {!proto.forge_abi.UpgradeNodeTx} returns this
 */
proto.forge_abi.UpgradeNodeTx.prototype.setOverride = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ActivateProtocolTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ActivateProtocolTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ActivateProtocolTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ActivateProtocolTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ActivateProtocolTx}
 */
proto.forge_abi.ActivateProtocolTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ActivateProtocolTx();
  return proto.forge_abi.ActivateProtocolTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ActivateProtocolTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ActivateProtocolTx}
 */
proto.forge_abi.ActivateProtocolTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ActivateProtocolTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ActivateProtocolTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ActivateProtocolTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ActivateProtocolTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.ActivateProtocolTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.ActivateProtocolTx} returns this
 */
proto.forge_abi.ActivateProtocolTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.ActivateProtocolTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.ActivateProtocolTx} returns this
 */
proto.forge_abi.ActivateProtocolTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ActivateProtocolTx} returns this
 */
proto.forge_abi.ActivateProtocolTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ActivateProtocolTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DeactivateProtocolTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DeactivateProtocolTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DeactivateProtocolTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DeactivateProtocolTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DeactivateProtocolTx}
 */
proto.forge_abi.DeactivateProtocolTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DeactivateProtocolTx();
  return proto.forge_abi.DeactivateProtocolTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DeactivateProtocolTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DeactivateProtocolTx}
 */
proto.forge_abi.DeactivateProtocolTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DeactivateProtocolTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DeactivateProtocolTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DeactivateProtocolTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DeactivateProtocolTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.DeactivateProtocolTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DeactivateProtocolTx} returns this
 */
proto.forge_abi.DeactivateProtocolTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.DeactivateProtocolTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.DeactivateProtocolTx} returns this
 */
proto.forge_abi.DeactivateProtocolTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.DeactivateProtocolTx} returns this
 */
proto.forge_abi.DeactivateProtocolTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.DeactivateProtocolTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.PokeTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.PokeTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.PokeTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.PokeTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        date: jspb.Message.getFieldWithDefault(msg, 1, ''),
        address: jspb.Message.getFieldWithDefault(msg, 2, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.PokeTx}
 */
proto.forge_abi.PokeTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.PokeTx();
  return proto.forge_abi.PokeTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.PokeTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.PokeTx}
 */
proto.forge_abi.PokeTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setDate(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.PokeTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.PokeTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.PokeTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.PokeTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string date = 1;
 * @return {string}
 */
proto.forge_abi.PokeTx.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.PokeTx} returns this
 */
proto.forge_abi.PokeTx.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string address = 2;
 * @return {string}
 */
proto.forge_abi.PokeTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.PokeTx} returns this
 */
proto.forge_abi.PokeTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.PokeTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.PokeTx} returns this
 */
proto.forge_abi.PokeTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.PokeTx} returns this
 */
proto.forge_abi.PokeTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.PokeTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.RefuelTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.RefuelTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.RefuelTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.RefuelTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        date: jspb.Message.getFieldWithDefault(msg, 1, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.RefuelTx}
 */
proto.forge_abi.RefuelTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.RefuelTx();
  return proto.forge_abi.RefuelTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.RefuelTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.RefuelTx}
 */
proto.forge_abi.RefuelTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setDate(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.RefuelTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.RefuelTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.RefuelTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.RefuelTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string date = 1;
 * @return {string}
 */
proto.forge_abi.RefuelTx.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.RefuelTx} returns this
 */
proto.forge_abi.RefuelTx.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.RefuelTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.RefuelTx} returns this
 */
proto.forge_abi.RefuelTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.RefuelTx} returns this
 */
proto.forge_abi.RefuelTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.RefuelTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.RetrieveSwapTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.RetrieveSwapTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.RetrieveSwapTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.RetrieveSwapTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        hashkey: msg.getHashkey(),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.RetrieveSwapTx}
 */
proto.forge_abi.RetrieveSwapTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.RetrieveSwapTx();
  return proto.forge_abi.RetrieveSwapTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.RetrieveSwapTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.RetrieveSwapTx}
 */
proto.forge_abi.RetrieveSwapTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setHashkey(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.RetrieveSwapTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.RetrieveSwapTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.RetrieveSwapTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.RetrieveSwapTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getHashkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(2, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.RetrieveSwapTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.RetrieveSwapTx} returns this
 */
proto.forge_abi.RetrieveSwapTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional bytes hashkey = 2;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.RetrieveSwapTx.prototype.getHashkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * optional bytes hashkey = 2;
 * This is a type-conversion wrapper around `getHashkey()`
 * @return {string}
 */
proto.forge_abi.RetrieveSwapTx.prototype.getHashkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getHashkey()));
};

/**
 * optional bytes hashkey = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashkey()`
 * @return {!Uint8Array}
 */
proto.forge_abi.RetrieveSwapTx.prototype.getHashkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getHashkey()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.RetrieveSwapTx} returns this
 */
proto.forge_abi.RetrieveSwapTx.prototype.setHashkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.RetrieveSwapTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.RetrieveSwapTx} returns this
 */
proto.forge_abi.RetrieveSwapTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.RetrieveSwapTx} returns this
 */
proto.forge_abi.RetrieveSwapTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.RetrieveSwapTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.RevokeSwapTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.RevokeSwapTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.RevokeSwapTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.RevokeSwapTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.RevokeSwapTx}
 */
proto.forge_abi.RevokeSwapTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.RevokeSwapTx();
  return proto.forge_abi.RevokeSwapTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.RevokeSwapTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.RevokeSwapTx}
 */
proto.forge_abi.RevokeSwapTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.RevokeSwapTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.RevokeSwapTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.RevokeSwapTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.RevokeSwapTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string address = 1;
 * @return {string}
 */
proto.forge_abi.RevokeSwapTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.RevokeSwapTx} returns this
 */
proto.forge_abi.RevokeSwapTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.RevokeSwapTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.RevokeSwapTx} returns this
 */
proto.forge_abi.RevokeSwapTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.RevokeSwapTx} returns this
 */
proto.forge_abi.RevokeSwapTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.RevokeSwapTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.SetupSwapTx.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.SetupSwapTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.SetupSwapTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.SetupSwapTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.SetupSwapTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        value: (f = msg.getValue()) && type_pb.BigUint.toObject(includeInstance, f),
        assetsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
        receiver: jspb.Message.getFieldWithDefault(msg, 3, ''),
        hashlock: msg.getHashlock(),
        locktime: jspb.Message.getFieldWithDefault(msg, 5, 0),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.SetupSwapTx}
 */
proto.forge_abi.SetupSwapTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.SetupSwapTx();
  return proto.forge_abi.SetupSwapTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.SetupSwapTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.SetupSwapTx}
 */
proto.forge_abi.SetupSwapTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setValue(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.addAssets(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setReceiver(value);
        break;
      case 4:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setHashlock(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLocktime(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.SetupSwapTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.SetupSwapTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.SetupSwapTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.SetupSwapTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(1, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(2, f);
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getHashlock_asU8();
  if (f.length > 0) {
    writer.writeBytes(4, f);
  }
  f = message.getLocktime();
  if (f !== 0) {
    writer.writeUint32(5, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional BigUint value = 1;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.SetupSwapTx.prototype.getValue = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 1));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.SetupSwapTx} returns this
 */
proto.forge_abi.SetupSwapTx.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.SetupSwapTx} returns this
 */
proto.forge_abi.SetupSwapTx.prototype.clearValue = function() {
  return this.setValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.SetupSwapTx.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * repeated string assets = 2;
 * @return {!Array<string>}
 */
proto.forge_abi.SetupSwapTx.prototype.getAssetsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.SetupSwapTx} returns this
 */
proto.forge_abi.SetupSwapTx.prototype.setAssetsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.SetupSwapTx} returns this
 */
proto.forge_abi.SetupSwapTx.prototype.addAssets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.SetupSwapTx} returns this
 */
proto.forge_abi.SetupSwapTx.prototype.clearAssetsList = function() {
  return this.setAssetsList([]);
};

/**
 * optional string receiver = 3;
 * @return {string}
 */
proto.forge_abi.SetupSwapTx.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.SetupSwapTx} returns this
 */
proto.forge_abi.SetupSwapTx.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional bytes hashlock = 4;
 * @return {!(string|Uint8Array)}
 */
proto.forge_abi.SetupSwapTx.prototype.getHashlock = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * optional bytes hashlock = 4;
 * This is a type-conversion wrapper around `getHashlock()`
 * @return {string}
 */
proto.forge_abi.SetupSwapTx.prototype.getHashlock_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getHashlock()));
};

/**
 * optional bytes hashlock = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashlock()`
 * @return {!Uint8Array}
 */
proto.forge_abi.SetupSwapTx.prototype.getHashlock_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getHashlock()));
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.forge_abi.SetupSwapTx} returns this
 */
proto.forge_abi.SetupSwapTx.prototype.setHashlock = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};

/**
 * optional uint32 locktime = 5;
 * @return {number}
 */
proto.forge_abi.SetupSwapTx.prototype.getLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.forge_abi.SetupSwapTx} returns this
 */
proto.forge_abi.SetupSwapTx.prototype.setLocktime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.SetupSwapTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.SetupSwapTx} returns this
 */
proto.forge_abi.SetupSwapTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.SetupSwapTx} returns this
 */
proto.forge_abi.SetupSwapTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.SetupSwapTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ApproveWithdrawTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ApproveWithdrawTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ApproveWithdrawTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ApproveWithdrawTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        withdrawTxHash: jspb.Message.getFieldWithDefault(msg, 1, ''),
        evidence: (f = msg.getEvidence()) && type_pb.Evidence.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ApproveWithdrawTx}
 */
proto.forge_abi.ApproveWithdrawTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ApproveWithdrawTx();
  return proto.forge_abi.ApproveWithdrawTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ApproveWithdrawTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ApproveWithdrawTx}
 */
proto.forge_abi.ApproveWithdrawTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setWithdrawTxHash(value);
        break;
      case 2:
        var value = new type_pb.Evidence();
        reader.readMessage(value, type_pb.Evidence.deserializeBinaryFromReader);
        msg.setEvidence(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ApproveWithdrawTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ApproveWithdrawTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ApproveWithdrawTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ApproveWithdrawTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawTxHash();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getEvidence();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.Evidence.serializeBinaryToWriter);
  }
};

/**
 * optional string withdraw_tx_hash = 1;
 * @return {string}
 */
proto.forge_abi.ApproveWithdrawTx.prototype.getWithdrawTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.ApproveWithdrawTx} returns this
 */
proto.forge_abi.ApproveWithdrawTx.prototype.setWithdrawTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional Evidence evidence = 2;
 * @return {?proto.forge_abi.Evidence}
 */
proto.forge_abi.ApproveWithdrawTx.prototype.getEvidence = function() {
  return /** @type{?proto.forge_abi.Evidence} */ (jspb.Message.getWrapperField(this, type_pb.Evidence, 2));
};

/**
 * @param {?proto.forge_abi.Evidence|undefined} value
 * @return {!proto.forge_abi.ApproveWithdrawTx} returns this
 */
proto.forge_abi.ApproveWithdrawTx.prototype.setEvidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ApproveWithdrawTx} returns this
 */
proto.forge_abi.ApproveWithdrawTx.prototype.clearEvidence = function() {
  return this.setEvidence(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ApproveWithdrawTx.prototype.hasEvidence = function() {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.DepositTokenTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.DepositTokenTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.DepositTokenTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.DepositTokenTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        value: (f = msg.getValue()) && type_pb.BigUint.toObject(includeInstance, f),
        address: jspb.Message.getFieldWithDefault(msg, 2, ''),
        evidence: (f = msg.getEvidence()) && type_pb.Evidence.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.DepositTokenTx}
 */
proto.forge_abi.DepositTokenTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.DepositTokenTx();
  return proto.forge_abi.DepositTokenTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.DepositTokenTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.DepositTokenTx}
 */
proto.forge_abi.DepositTokenTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setValue(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAddress(value);
        break;
      case 3:
        var value = new type_pb.Evidence();
        reader.readMessage(value, type_pb.Evidence.deserializeBinaryFromReader);
        msg.setEvidence(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.DepositTokenTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.DepositTokenTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.DepositTokenTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.DepositTokenTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(1, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getEvidence();
  if (f != null) {
    writer.writeMessage(3, f, type_pb.Evidence.serializeBinaryToWriter);
  }
};

/**
 * optional BigUint value = 1;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.DepositTokenTx.prototype.getValue = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 1));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.DepositTokenTx} returns this
 */
proto.forge_abi.DepositTokenTx.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.DepositTokenTx} returns this
 */
proto.forge_abi.DepositTokenTx.prototype.clearValue = function() {
  return this.setValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.DepositTokenTx.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional string address = 2;
 * @return {string}
 */
proto.forge_abi.DepositTokenTx.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.DepositTokenTx} returns this
 */
proto.forge_abi.DepositTokenTx.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional Evidence evidence = 3;
 * @return {?proto.forge_abi.Evidence}
 */
proto.forge_abi.DepositTokenTx.prototype.getEvidence = function() {
  return /** @type{?proto.forge_abi.Evidence} */ (jspb.Message.getWrapperField(this, type_pb.Evidence, 3));
};

/**
 * @param {?proto.forge_abi.Evidence|undefined} value
 * @return {!proto.forge_abi.DepositTokenTx} returns this
 */
proto.forge_abi.DepositTokenTx.prototype.setEvidence = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.DepositTokenTx} returns this
 */
proto.forge_abi.DepositTokenTx.prototype.clearEvidence = function() {
  return this.setEvidence(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.DepositTokenTx.prototype.hasEvidence = function() {
  return jspb.Message.getField(this, 3) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.RevokeWithdrawTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.RevokeWithdrawTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.RevokeWithdrawTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.RevokeWithdrawTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        withdrawTxHash: jspb.Message.getFieldWithDefault(msg, 1, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.RevokeWithdrawTx}
 */
proto.forge_abi.RevokeWithdrawTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.RevokeWithdrawTx();
  return proto.forge_abi.RevokeWithdrawTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.RevokeWithdrawTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.RevokeWithdrawTx}
 */
proto.forge_abi.RevokeWithdrawTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setWithdrawTxHash(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.RevokeWithdrawTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.RevokeWithdrawTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.RevokeWithdrawTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.RevokeWithdrawTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawTxHash();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string withdraw_tx_hash = 1;
 * @return {string}
 */
proto.forge_abi.RevokeWithdrawTx.prototype.getWithdrawTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.RevokeWithdrawTx} returns this
 */
proto.forge_abi.RevokeWithdrawTx.prototype.setWithdrawTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.WithdrawTokenTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.WithdrawTokenTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.WithdrawTokenTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.WithdrawTokenTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        value: (f = msg.getValue()) && type_pb.BigUint.toObject(includeInstance, f),
        to: jspb.Message.getFieldWithDefault(msg, 2, ''),
        chainType: jspb.Message.getFieldWithDefault(msg, 3, ''),
        chainId: jspb.Message.getFieldWithDefault(msg, 4, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.WithdrawTokenTx}
 */
proto.forge_abi.WithdrawTokenTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.WithdrawTokenTx();
  return proto.forge_abi.WithdrawTokenTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.WithdrawTokenTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.WithdrawTokenTx}
 */
proto.forge_abi.WithdrawTokenTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setValue(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setChainType(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setChainId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.WithdrawTokenTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.WithdrawTokenTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.WithdrawTokenTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.WithdrawTokenTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(1, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getChainType();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
};

/**
 * optional BigUint value = 1;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.WithdrawTokenTx.prototype.getValue = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 1));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.WithdrawTokenTx} returns this
 */
proto.forge_abi.WithdrawTokenTx.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.WithdrawTokenTx} returns this
 */
proto.forge_abi.WithdrawTokenTx.prototype.clearValue = function() {
  return this.setValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.WithdrawTokenTx.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional string to = 2;
 * @return {string}
 */
proto.forge_abi.WithdrawTokenTx.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.WithdrawTokenTx} returns this
 */
proto.forge_abi.WithdrawTokenTx.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string chain_type = 3;
 * @return {string}
 */
proto.forge_abi.WithdrawTokenTx.prototype.getChainType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.WithdrawTokenTx} returns this
 */
proto.forge_abi.WithdrawTokenTx.prototype.setChainType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string chain_id = 4;
 * @return {string}
 */
proto.forge_abi.WithdrawTokenTx.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.WithdrawTokenTx} returns this
 */
proto.forge_abi.WithdrawTokenTx.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.ExchangeInfo.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ExchangeInfo.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ExchangeInfo.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ExchangeInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ExchangeInfo.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        value: (f = msg.getValue()) && type_pb.BigUint.toObject(includeInstance, f),
        assetsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ExchangeInfo}
 */
proto.forge_abi.ExchangeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ExchangeInfo();
  return proto.forge_abi.ExchangeInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ExchangeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ExchangeInfo}
 */
proto.forge_abi.ExchangeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setValue(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.addAssets(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ExchangeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ExchangeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ExchangeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ExchangeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(1, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(2, f);
  }
};

/**
 * optional BigUint value = 1;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.ExchangeInfo.prototype.getValue = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 1));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.ExchangeInfo} returns this
 */
proto.forge_abi.ExchangeInfo.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ExchangeInfo} returns this
 */
proto.forge_abi.ExchangeInfo.prototype.clearValue = function() {
  return this.setValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ExchangeInfo.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * repeated string assets = 2;
 * @return {!Array<string>}
 */
proto.forge_abi.ExchangeInfo.prototype.getAssetsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.ExchangeInfo} returns this
 */
proto.forge_abi.ExchangeInfo.prototype.setAssetsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.ExchangeInfo} returns this
 */
proto.forge_abi.ExchangeInfo.prototype.addAssets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.ExchangeInfo} returns this
 */
proto.forge_abi.ExchangeInfo.prototype.clearAssetsList = function() {
  return this.setAssetsList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.ExchangeTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.ExchangeTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.ExchangeTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.ExchangeTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        to: jspb.Message.getFieldWithDefault(msg, 1, ''),
        sender: (f = msg.getSender()) && proto.forge_abi.ExchangeInfo.toObject(includeInstance, f),
        receiver: (f = msg.getReceiver()) && proto.forge_abi.ExchangeInfo.toObject(includeInstance, f),
        expiredAt: (f = msg.getExpiredAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.ExchangeTx}
 */
proto.forge_abi.ExchangeTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.ExchangeTx();
  return proto.forge_abi.ExchangeTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.ExchangeTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.ExchangeTx}
 */
proto.forge_abi.ExchangeTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 2:
        var value = new proto.forge_abi.ExchangeInfo();
        reader.readMessage(value, proto.forge_abi.ExchangeInfo.deserializeBinaryFromReader);
        msg.setSender(value);
        break;
      case 3:
        var value = new proto.forge_abi.ExchangeInfo();
        reader.readMessage(value, proto.forge_abi.ExchangeInfo.deserializeBinaryFromReader);
        msg.setReceiver(value);
        break;
      case 4:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
        msg.setExpiredAt(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.ExchangeTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.ExchangeTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.ExchangeTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.ExchangeTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSender();
  if (f != null) {
    writer.writeMessage(2, f, proto.forge_abi.ExchangeInfo.serializeBinaryToWriter);
  }
  f = message.getReceiver();
  if (f != null) {
    writer.writeMessage(3, f, proto.forge_abi.ExchangeInfo.serializeBinaryToWriter);
  }
  f = message.getExpiredAt();
  if (f != null) {
    writer.writeMessage(4, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string to = 1;
 * @return {string}
 */
proto.forge_abi.ExchangeTx.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.ExchangeTx} returns this
 */
proto.forge_abi.ExchangeTx.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional ExchangeInfo sender = 2;
 * @return {?proto.forge_abi.ExchangeInfo}
 */
proto.forge_abi.ExchangeTx.prototype.getSender = function() {
  return /** @type{?proto.forge_abi.ExchangeInfo} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.ExchangeInfo,
    2
  ));
};

/**
 * @param {?proto.forge_abi.ExchangeInfo|undefined} value
 * @return {!proto.forge_abi.ExchangeTx} returns this
 */
proto.forge_abi.ExchangeTx.prototype.setSender = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ExchangeTx} returns this
 */
proto.forge_abi.ExchangeTx.prototype.clearSender = function() {
  return this.setSender(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ExchangeTx.prototype.hasSender = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional ExchangeInfo receiver = 3;
 * @return {?proto.forge_abi.ExchangeInfo}
 */
proto.forge_abi.ExchangeTx.prototype.getReceiver = function() {
  return /** @type{?proto.forge_abi.ExchangeInfo} */ (jspb.Message.getWrapperField(
    this,
    proto.forge_abi.ExchangeInfo,
    3
  ));
};

/**
 * @param {?proto.forge_abi.ExchangeInfo|undefined} value
 * @return {!proto.forge_abi.ExchangeTx} returns this
 */
proto.forge_abi.ExchangeTx.prototype.setReceiver = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ExchangeTx} returns this
 */
proto.forge_abi.ExchangeTx.prototype.clearReceiver = function() {
  return this.setReceiver(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ExchangeTx.prototype.hasReceiver = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional google.protobuf.Timestamp expired_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.forge_abi.ExchangeTx.prototype.getExpiredAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    4
  ));
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.forge_abi.ExchangeTx} returns this
 */
proto.forge_abi.ExchangeTx.prototype.setExpiredAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ExchangeTx} returns this
 */
proto.forge_abi.ExchangeTx.prototype.clearExpiredAt = function() {
  return this.setExpiredAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ExchangeTx.prototype.hasExpiredAt = function() {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.ExchangeTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.ExchangeTx} returns this
 */
proto.forge_abi.ExchangeTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.ExchangeTx} returns this
 */
proto.forge_abi.ExchangeTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.ExchangeTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.forge_abi.TransferTx.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.forge_abi.TransferTx.prototype.toObject = function(opt_includeInstance) {
    return proto.forge_abi.TransferTx.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.forge_abi.TransferTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.forge_abi.TransferTx.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        to: jspb.Message.getFieldWithDefault(msg, 1, ''),
        value: (f = msg.getValue()) && type_pb.BigUint.toObject(includeInstance, f),
        assetsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
        data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.forge_abi.TransferTx}
 */
proto.forge_abi.TransferTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.forge_abi.TransferTx();
  return proto.forge_abi.TransferTx.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.forge_abi.TransferTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.forge_abi.TransferTx}
 */
proto.forge_abi.TransferTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTo(value);
        break;
      case 2:
        var value = new type_pb.BigUint();
        reader.readMessage(value, type_pb.BigUint.deserializeBinaryFromReader);
        msg.setValue(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.addAssets(value);
        break;
      case 15:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.forge_abi.TransferTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.forge_abi.TransferTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.forge_abi.TransferTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.forge_abi.TransferTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(2, f, type_pb.BigUint.serializeBinaryToWriter);
  }
  f = message.getAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(3, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(15, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);
  }
};

/**
 * optional string to = 1;
 * @return {string}
 */
proto.forge_abi.TransferTx.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.forge_abi.TransferTx} returns this
 */
proto.forge_abi.TransferTx.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional BigUint value = 2;
 * @return {?proto.forge_abi.BigUint}
 */
proto.forge_abi.TransferTx.prototype.getValue = function() {
  return /** @type{?proto.forge_abi.BigUint} */ (jspb.Message.getWrapperField(this, type_pb.BigUint, 2));
};

/**
 * @param {?proto.forge_abi.BigUint|undefined} value
 * @return {!proto.forge_abi.TransferTx} returns this
 */
proto.forge_abi.TransferTx.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.TransferTx} returns this
 */
proto.forge_abi.TransferTx.prototype.clearValue = function() {
  return this.setValue(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.TransferTx.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * repeated string assets = 3;
 * @return {!Array<string>}
 */
proto.forge_abi.TransferTx.prototype.getAssetsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.forge_abi.TransferTx} returns this
 */
proto.forge_abi.TransferTx.prototype.setAssetsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.forge_abi.TransferTx} returns this
 */
proto.forge_abi.TransferTx.prototype.addAssets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.forge_abi.TransferTx} returns this
 */
proto.forge_abi.TransferTx.prototype.clearAssetsList = function() {
  return this.setAssetsList([]);
};

/**
 * optional google.protobuf.Any data = 15;
 * @return {?proto.google.protobuf.Any}
 */
proto.forge_abi.TransferTx.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 15));
};

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.forge_abi.TransferTx} returns this
 */
proto.forge_abi.TransferTx.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.forge_abi.TransferTx} returns this
 */
proto.forge_abi.TransferTx.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.forge_abi.TransferTx.prototype.hasData = function() {
  return jspb.Message.getField(this, 15) != null;
};

goog.object.extend(exports, proto.forge_abi);
